ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MyNewProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp7BalanceD2Ev,"axG",%progbits,_ZN7daisysp7BalanceD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp7BalanceD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp7BalanceD2Ev:
  27              	.LVL0:
  28              	.LFB2920:
  29              		.file 1 "../../DaisySP//Source/Dynamics/balance.h"
   1:../../DaisySP//Source/Dynamics/balance.h **** 
   2:../../DaisySP//Source/Dynamics/balance.h **** #pragma once
   3:../../DaisySP//Source/Dynamics/balance.h **** #ifndef DSY_BALANCE_H
   4:../../DaisySP//Source/Dynamics/balance.h **** #define DSY_BALANCE_H
   5:../../DaisySP//Source/Dynamics/balance.h **** 
   6:../../DaisySP//Source/Dynamics/balance.h **** #include <stdint.h>
   7:../../DaisySP//Source/Dynamics/balance.h **** #ifdef __cplusplus
   8:../../DaisySP//Source/Dynamics/balance.h **** 
   9:../../DaisySP//Source/Dynamics/balance.h **** namespace daisysp
  10:../../DaisySP//Source/Dynamics/balance.h **** {
  11:../../DaisySP//Source/Dynamics/balance.h **** /** Balances two sound sources. Sig is boosted to the level of comp.
  12:../../DaisySP//Source/Dynamics/balance.h **** 
  13:../../DaisySP//Source/Dynamics/balance.h ****     *Original author(s) : Barry Vercoe, john ffitch, Gabriel Maldonado
  14:../../DaisySP//Source/Dynamics/balance.h **** 
  15:../../DaisySP//Source/Dynamics/balance.h ****     *Year: 1991
  16:../../DaisySP//Source/Dynamics/balance.h **** 
  17:../../DaisySP//Source/Dynamics/balance.h ****     *Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Dynamics/balance.h **** */
  19:../../DaisySP//Source/Dynamics/balance.h **** class Balance
  20:../../DaisySP//Source/Dynamics/balance.h **** {
  21:../../DaisySP//Source/Dynamics/balance.h ****   public:
  22:../../DaisySP//Source/Dynamics/balance.h ****     Balance() {}
  23:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
  30              		.loc 1 23 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 23 17 is_stmt 0 view .LVU1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 2


  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE2920:
  40              		.weak	_ZN7daisysp7BalanceD1Ev
  41              		.thumb_set _ZN7daisysp7BalanceD1Ev,_ZN7daisysp7BalanceD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp9CrossFadeD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN7daisysp9CrossFadeD2Ev:
  52              	.LVL1:
  53              	.LFB2952:
  54              		.file 2 "../../DaisySP//Source/Dynamics/crossfade.h"
   1:../../DaisySP//Source/Dynamics/crossfade.h **** #pragma once
   2:../../DaisySP//Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../../DaisySP//Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../../DaisySP//Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../../DaisySP//Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../../DaisySP//Source/Dynamics/crossfade.h **** 
   7:../../DaisySP//Source/Dynamics/crossfade.h **** namespace daisysp
   8:../../DaisySP//Source/Dynamics/crossfade.h **** {
   9:../../DaisySP//Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../../DaisySP//Source/Dynamics/crossfade.h **** - LIN = linear
  11:../../DaisySP//Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../../DaisySP//Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../../DaisySP//Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../../DaisySP//Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../../DaisySP//Source/Dynamics/crossfade.h **** */
  16:../../DaisySP//Source/Dynamics/crossfade.h **** enum
  17:../../DaisySP//Source/Dynamics/crossfade.h **** {
  18:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../../DaisySP//Source/Dynamics/crossfade.h **** };
  24:../../DaisySP//Source/Dynamics/crossfade.h **** 
  25:../../DaisySP//Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../../DaisySP//Source/Dynamics/crossfade.h **** 
  27:../../DaisySP//Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../../DaisySP//Source/Dynamics/crossfade.h **** 
  29:../../DaisySP//Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../../DaisySP//Source/Dynamics/crossfade.h **** 
  31:../../DaisySP//Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../../DaisySP//Source/Dynamics/crossfade.h **** */
  33:../../DaisySP//Source/Dynamics/crossfade.h **** class CrossFade
  34:../../DaisySP//Source/Dynamics/crossfade.h **** {
  35:../../DaisySP//Source/Dynamics/crossfade.h ****   public:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  55              		.loc 2 37 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 3


  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 37 19 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE2952:
  65              		.weak	_ZN7daisysp9CrossFadeD1Ev
  66              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
  67              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy11TimerHandleD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy11TimerHandleD2Ev:
  77              	.LVL2:
  78              	.LFB3673:
  79              		.file 3 "../../libDaisy//src/per/tim.h"
   1:../../libDaisy//src/per/tim.h **** #pragma once
   2:../../libDaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy//src/per/tim.h **** 
   5:../../libDaisy//src/per/tim.h **** #include <cstdint>
   6:../../libDaisy//src/per/tim.h **** 
   7:../../libDaisy//src/per/tim.h **** namespace daisy
   8:../../libDaisy//src/per/tim.h **** {
   9:../../libDaisy//src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy//src/per/tim.h ****  ** 
  11:../../libDaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy//src/per/tim.h ****  **
  14:../../libDaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy//src/per/tim.h ****  **
  18:../../libDaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy//src/per/tim.h ****  **
  23:../../libDaisy//src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy//src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy//src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy//src/per/tim.h ****  **
  27:../../libDaisy//src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy//src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy//src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy//src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy//src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../../libDaisy//src/per/tim.h ****  ** @todo HRTIM
  35:../../libDaisy//src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy//src/per/tim.h ****  ** */
  37:../../libDaisy//src/per/tim.h **** class TimerHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 4


  38:../../libDaisy//src/per/tim.h **** {
  39:../../libDaisy//src/per/tim.h ****   public:
  40:../../libDaisy//src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy//src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy//src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy//src/per/tim.h ****      */
  44:../../libDaisy//src/per/tim.h ****     struct Config
  45:../../libDaisy//src/per/tim.h ****     {
  46:../../libDaisy//src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy//src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy//src/per/tim.h ****         {
  49:../../libDaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy//src/per/tim.h ****         };
  54:../../libDaisy//src/per/tim.h **** 
  55:../../libDaisy//src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy//src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy//src/per/tim.h ****          ** */
  59:../../libDaisy//src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy//src/per/tim.h ****         {
  61:../../libDaisy//src/per/tim.h ****             UP = 0,
  62:../../libDaisy//src/per/tim.h ****             DOWN,
  63:../../libDaisy//src/per/tim.h ****         };
  64:../../libDaisy//src/per/tim.h **** 
  65:../../libDaisy//src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy//src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy//src/per/tim.h **** 
  68:../../libDaisy//src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy//src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy//src/per/tim.h ****         */
  71:../../libDaisy//src/per/tim.h ****         uint32_t period;
  72:../../libDaisy//src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy//src/per/tim.h **** 
  74:../../libDaisy//src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy//src/per/tim.h ****         Config()
  76:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../../libDaisy//src/per/tim.h ****           dir(CounterDir::UP),
  78:../../libDaisy//src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy//src/per/tim.h ****           enable_irq(false)
  80:../../libDaisy//src/per/tim.h ****         {
  81:../../libDaisy//src/per/tim.h ****         }
  82:../../libDaisy//src/per/tim.h ****     };
  83:../../libDaisy//src/per/tim.h **** 
  84:../../libDaisy//src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy//src/per/tim.h ****     enum class Result
  86:../../libDaisy//src/per/tim.h ****     {
  87:../../libDaisy//src/per/tim.h ****         OK,
  88:../../libDaisy//src/per/tim.h ****         ERR,
  89:../../libDaisy//src/per/tim.h ****     };
  90:../../libDaisy//src/per/tim.h **** 
  91:../../libDaisy//src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy//src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy//src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy//src/per/tim.h ****     */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 5


  95:../../libDaisy//src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../../libDaisy//src/per/tim.h **** 
  97:../../libDaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy//src/per/tim.h ****     ~TimerHandle() {}
  80              		.loc 3 100 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 100 21 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE3673:
  90              		.weak	_ZN5daisy11TimerHandleD1Ev
  91              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
  92              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy6SwitchD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy6SwitchD2Ev:
 102              	.LVL3:
 103              	.LFB3866:
 104              		.file 4 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 6


  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 105              		.loc 4 42 5 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              		.loc 4 42 16 is_stmt 0 view .LVU7
 111 0000 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE3866:
 115              		.weak	_ZN5daisy6SwitchD1Ev
 116              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
 117              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
 118              		.align	1
 119              		.p2align 2,,3
 120              		.weak	_ZN5daisy9ParameterD2Ev
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	_ZN5daisy9ParameterD2Ev:
 127              	.LVL4:
 128              	.LFB3915:
 129              		.file 5 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 7


  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
 130              		.loc 5 27 5 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LBB167:
 136              	.LBI167:
 137              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
 138              		.loc 6 23 5 view .LVU9
 139              		.loc 6 23 5 is_stmt 0 view .LVU10
 140              	.LBE167:
 141              		.loc 5 27 19 view .LVU11
 142 0000 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE3915:
 146              		.weak	_ZN5daisy9ParameterD1Ev
 147              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
 148 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 149              		.align	1
 150              		.p2align 2,,3
 151              		.weak	_ZN5daisy9DaisySeedD2Ev
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-d16
 157              	_ZN5daisy9DaisySeedD2Ev:
 158              	.LVL5:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 8


 159              	.LFB4783:
 160              		.file 7 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 161              		.loc 7 22 5 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LBB168:
 167              	.LBI168:
 168              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 9


  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 169              		.loc 8 78 5 view .LVU13
 170              		.loc 8 78 5 is_stmt 0 view .LVU14
 171              	.LBE168:
 172              	.LBB169:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 10


 173              	.LBI169:
 174              		.file 9 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 175              		.loc 9 42 5 is_stmt 1 view .LVU15
 176              		.loc 9 42 5 is_stmt 0 view .LVU16
 177              	.LBE169:
 178              	.LBB170:
 179              	.LBI170:
 180              		.file 10 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 11


   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 12


  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 181              		.loc 10 93 5 is_stmt 1 view .LVU17
 182              		.loc 10 93 5 is_stmt 0 view .LVU18
 183              	.LBE170:
 184              	.LBB171:
 185              	.LBI171:
 186              		.file 11 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 13


  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 14


  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 187              		.loc 11 96 5 is_stmt 1 view .LVU19
 188              		.loc 11 96 5 is_stmt 0 view .LVU20
 189              	.LBE171:
 190              		.loc 7 22 19 view .LVU21
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE4783:
 195              		.weak	_ZN5daisy9DaisySeedD1Ev
 196              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 197 0002 00BF     		.section	.text._ZN6DelayyD2Ev,"axG",%progbits,_ZN6DelayyD5Ev,comdat
 198              		.align	1
 199              		.p2align 2,,3
 200              		.weak	_ZN6DelayyD2Ev
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	_ZN6DelayyD2Ev:
 207              	.LVL6:
 208              	.LFB5358:
 209              		.file 12 "Delay.h"
   1:Delay.h       **** #include "daisysp.h"
   2:Delay.h       **** #include "daisy_seed.h"
   3:Delay.h       **** #pragma once
   4:Delay.h       **** using namespace daisysp;
   5:Delay.h       **** using namespace daisy;
   6:Delay.h       **** using namespace daisy::seed;
   7:Delay.h       **** 
   8:Delay.h       **** #define MAX_DELAY static_cast<size_t>(24000)//48000 * 3.f)  // Max delay of 3 seconds which is 20 b
   9:Delay.h       **** const int NUM_OF_DELAY_HEADS = 4;                   // # of delay heads, simply change this number 
  10:Delay.h       **** //extern DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS  delayMems[4];
  11:Delay.h       **** 
  12:Delay.h       **** 
  13:Delay.h       **** 
  14:Delay.h       **** class Delayy
 210              		.loc 12 14 7 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 15


 215              		.loc 12 14 7 is_stmt 0 view .LVU23
 216 0000 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE5358:
 220              		.weak	_ZN6DelayyD1Ev
 221              		.thumb_set _ZN6DelayyD1Ev,_ZN6DelayyD2Ev
 222              		.section	.text._ZN10ToneFilterD2Ev,"axG",%progbits,_ZN10ToneFilterD5Ev,comdat
 223              		.align	1
 224              		.p2align 2,,3
 225              		.weak	_ZN10ToneFilterD2Ev
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	_ZN10ToneFilterD2Ev:
 232              	.LVL7:
 233              	.LFB5361:
 234              		.file 13 "ToneFilter.h"
   1:ToneFilter.h  **** #pragma once
   2:ToneFilter.h  **** #include "daisysp.h"
   3:ToneFilter.h  **** #include "daisy_seed.h"
   4:ToneFilter.h  **** 
   5:ToneFilter.h  **** using namespace daisysp;
   6:ToneFilter.h  **** using namespace daisy;
   7:ToneFilter.h  **** using namespace daisy::seed;
   8:ToneFilter.h  **** 
   9:ToneFilter.h  **** class ToneFilter
 235              		.loc 13 9 7 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LBB172:
 241              	.LBI172:
 242              		.file 14 "../../DaisySP//Source/Filters/atone.h"
   1:../../DaisySP//Source/Filters/atone.h **** #pragma once
   2:../../DaisySP//Source/Filters/atone.h **** #ifndef DSY_ATONE_H
   3:../../DaisySP//Source/Filters/atone.h **** #define DSY_ATONE_H
   4:../../DaisySP//Source/Filters/atone.h **** 
   5:../../DaisySP//Source/Filters/atone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/atone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/atone.h **** 
   8:../../DaisySP//Source/Filters/atone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/atone.h **** {
  10:../../DaisySP//Source/Filters/atone.h **** /** A first-order recursive high-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/atone.h ****      Original Author(s): Barry Vercoe, John FFitch, Gabriel Maldonado
  12:../../DaisySP//Source/Filters/atone.h **** 
  13:../../DaisySP//Source/Filters/atone.h ****      Year: 1991
  14:../../DaisySP//Source/Filters/atone.h **** 
  15:../../DaisySP//Source/Filters/atone.h ****      Original Location: Csound -- OOps/ugens5.c
  16:../../DaisySP//Source/Filters/atone.h **** 
  17:../../DaisySP//Source/Filters/atone.h ****      Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Filters/atone.h ****     */
  19:../../DaisySP//Source/Filters/atone.h **** class ATone
  20:../../DaisySP//Source/Filters/atone.h **** {
  21:../../DaisySP//Source/Filters/atone.h ****   public:
  22:../../DaisySP//Source/Filters/atone.h ****     ATone() {}
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 16


  23:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
 243              		.loc 14 23 5 view .LVU25
 244              		.loc 14 23 5 is_stmt 0 view .LVU26
 245              	.LBE172:
 246              	.LBB173:
 247              	.LBI173:
 248              		.file 15 "../../DaisySP//Source/Filters/tone.h"
   1:../../DaisySP//Source/Filters/tone.h **** #pragma once
   2:../../DaisySP//Source/Filters/tone.h **** #ifndef DSY_TONE_H
   3:../../DaisySP//Source/Filters/tone.h **** #define DSY_TONE_H
   4:../../DaisySP//Source/Filters/tone.h **** 
   5:../../DaisySP//Source/Filters/tone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/tone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/tone.h **** 
   8:../../DaisySP//Source/Filters/tone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/tone.h **** {
  10:../../DaisySP//Source/Filters/tone.h **** /** A first-order recursive low-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/tone.h **** */
  12:../../DaisySP//Source/Filters/tone.h **** class Tone
  13:../../DaisySP//Source/Filters/tone.h **** {
  14:../../DaisySP//Source/Filters/tone.h ****   public:
  15:../../DaisySP//Source/Filters/tone.h ****     Tone() {}
  16:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 249              		.loc 15 16 5 is_stmt 1 view .LVU27
 250              		.loc 15 16 5 is_stmt 0 view .LVU28
 251              	.LBE173:
 252              		.loc 13 9 7 view .LVU29
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE5361:
 257              		.weak	_ZN10ToneFilterD1Ev
 258              		.thumb_set _ZN10ToneFilterD1Ev,_ZN10ToneFilterD2Ev
 259 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 260              		.align	1
 261              		.p2align 2,,3
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	__tcf_0:
 268              	.LFB5363:
 269              		.file 16 "MyNewProject.cpp"
   1:MyNewProject.cpp **** 
   2:MyNewProject.cpp **** #include "Delay.h"
   3:MyNewProject.cpp **** #include "ToneFilter.h"
   4:MyNewProject.cpp **** 
   5:MyNewProject.cpp **** 
   6:MyNewProject.cpp **** using namespace daisysp;
   7:MyNewProject.cpp **** using namespace daisy;
   8:MyNewProject.cpp **** using namespace daisy::seed;
   9:MyNewProject.cpp **** 
  10:MyNewProject.cpp **** Delayy delay;
  11:MyNewProject.cpp **** ToneFilter tone(48000.f);
  12:MyNewProject.cpp **** static Balance balance;
  13:MyNewProject.cpp **** 
  14:MyNewProject.cpp **** Switch ON_BUTTON;                 // The on/off button
  15:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 17


  16:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
 270              		.loc 16 16 8 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              		.loc 16 16 8 is_stmt 0 view .LVU31
 276 0000 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE5363:
 280 0002 00BF     		.section	.text._Z10CheckTempov,"ax",%progbits
 281              		.align	1
 282              		.p2align 2,,3
 283              		.global	_Z10CheckTempov
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-d16
 289              	_Z10CheckTempov:
 290              	.LFB4791:
  17:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
  18:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
  19:MyNewProject.cpp **** 
  20:MyNewProject.cpp **** 
  21:MyNewProject.cpp **** float MAX_FEEDBACK = 1.1f;        // Max value of feedback knob, maxFeedback=1 -> forever repeats b
  22:MyNewProject.cpp **** float drywet_ratio = 0.5f;        // Drywet_ratio=0.0 is effect off
  23:MyNewProject.cpp **** const float MAX_DELAY_SEC = 3.0f; // Max amount of seconds allowed to get 20 bpm
  24:MyNewProject.cpp **** const float MIN_DELAY_SEC = 0.6f; // Min amount of seconds allowed to get 100 bpm
  25:MyNewProject.cpp **** bool onButtonWasPressed = false;  // Flag for turning on/off delays, replace with onButton.risingEd
  26:MyNewProject.cpp **** volatile float BPM = 20.0f;       // The BPM of delays
  27:MyNewProject.cpp **** volatile bool TAPPING = false;    // True when user is TAPPING
  28:MyNewProject.cpp **** TimerHandle TIMER;                // Timer that will be used to calculate bpm
  29:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
  30:MyNewProject.cpp **** Parameter feedbackKnob;
  31:MyNewProject.cpp **** Parameter toneKnob;
  32:MyNewProject.cpp **** 
  33:MyNewProject.cpp **** // Sets the delays when there is a change
  34:MyNewProject.cpp **** void CheckTempo();
  35:MyNewProject.cpp **** // Initialize buttons for the delay heads to the pins we want
  36:MyNewProject.cpp **** void InitHeadButtons();
  37:MyNewProject.cpp **** // Processes the controls and updates values that changed
  38:MyNewProject.cpp **** void ProcessControls();
  39:MyNewProject.cpp **** 
  40:MyNewProject.cpp **** 
  41:MyNewProject.cpp **** static void AudioCallback(AudioHandle::InputBuffer  in,
  42:MyNewProject.cpp ****                           AudioHandle::OutputBuffer out,
  43:MyNewProject.cpp ****                           size_t                    size)
  44:MyNewProject.cpp **** {
  45:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
  46:MyNewProject.cpp ****     {
  47:MyNewProject.cpp ****         // 
  48:MyNewProject.cpp ****         ProcessControls();
  49:MyNewProject.cpp ****         // Check for tempo change
  50:MyNewProject.cpp ****         CheckTempo();
  51:MyNewProject.cpp ****         // Set delays with new bpm
  52:MyNewProject.cpp ****         delay.setBPM(BPM);       
  53:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 18


  54:MyNewProject.cpp **** 
  55:MyNewProject.cpp ****         ON_BUTTON.Debounce();
  56:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
  57:MyNewProject.cpp ****         if(ON_BUTTON.Pressed() && !onButtonWasPressed)
  58:MyNewProject.cpp ****         {
  59:MyNewProject.cpp ****             onButtonWasPressed = true; // set the flag to indicate that the button was pressed
  60:MyNewProject.cpp ****             delay.stopAll();
  61:MyNewProject.cpp ****         }
  62:MyNewProject.cpp **** 
  63:MyNewProject.cpp ****         // Check if the button was released
  64:MyNewProject.cpp ****         if(!ON_BUTTON.Pressed() && onButtonWasPressed)
  65:MyNewProject.cpp ****         {
  66:MyNewProject.cpp ****             onButtonWasPressed = false; // reset the flag
  67:MyNewProject.cpp ****         }
  68:MyNewProject.cpp **** 
  69:MyNewProject.cpp ****         float final_mix = 0;         // The final float value that will be outputted
  70:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
  71:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
  72:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
  73:MyNewProject.cpp **** 
  74:MyNewProject.cpp ****     
  75:MyNewProject.cpp **** 
  76:MyNewProject.cpp ****         all_delay_signals = delay.process(in[0][i]);
  77:MyNewProject.cpp ****         float preFilter = all_delay_signals;
  78:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
  79:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter);
  80:MyNewProject.cpp **** 
  81:MyNewProject.cpp **** 
  82:MyNewProject.cpp **** 
  83:MyNewProject.cpp **** 
  84:MyNewProject.cpp ****         nonConstInput = in[0][i];
  85:MyNewProject.cpp **** 
  86:MyNewProject.cpp **** 		// Use a crossfade object to maintain a constant power while mixing the delayed/raw audio mix
  87:MyNewProject.cpp **** 		cfade.SetPos(drywet_ratio);
  88:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
  89:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
  90:MyNewProject.cpp ****     }
  91:MyNewProject.cpp **** }
  92:MyNewProject.cpp **** 
  93:MyNewProject.cpp **** int main(void)
  94:MyNewProject.cpp **** {
  95:MyNewProject.cpp ****     // Initialize seed hardware.
  96:MyNewProject.cpp ****     hw.Init();
  97:MyNewProject.cpp **** 
  98:MyNewProject.cpp ****     // Setting up serial and printing
  99:MyNewProject.cpp ****     hw.StartLog();
 100:MyNewProject.cpp **** 
 101:MyNewProject.cpp ****     // Initialize the button to D28, Pin 35 to be the on/off button
 102:MyNewProject.cpp ****     ON_BUTTON.Init(hw.GetPin(28),1000);
 103:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 104:MyNewProject.cpp ****     TEMPO_BUTTON.Init(hw.GetPin(25),1000);
 105:MyNewProject.cpp ****     // Init the head on/off buttons
 106:MyNewProject.cpp ****     InitHeadButtons();
 107:MyNewProject.cpp **** 
 108:MyNewProject.cpp **** 
 109:MyNewProject.cpp ****     //set blocksize.
 110:MyNewProject.cpp ****     hw.SetAudioBlockSize(4);
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 19


 111:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 112:MyNewProject.cpp **** 
 113:MyNewProject.cpp ****     // Set params for CrossFade object
 114:MyNewProject.cpp ****     cfade.Init();
 115:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 116:MyNewProject.cpp ****     cfade.SetCurve(CROSSFADE_CPOW);
 117:MyNewProject.cpp **** 
 118:MyNewProject.cpp ****     // Start callback
 119:MyNewProject.cpp ****     hw.StartAudio(AudioCallback);
 120:MyNewProject.cpp **** 
 121:MyNewProject.cpp ****     //TIMER****************************************************************************************
 122:MyNewProject.cpp ****     TimerHandle::Config config;                             // Config for the timer
 123:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 124:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 125:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 126:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 127:MyNewProject.cpp **** 
 128:MyNewProject.cpp ****     // Init the timer with our config
 129:MyNewProject.cpp ****     TIMER.Init(config);
 130:MyNewProject.cpp ****     // Make sure the timer is off
 131:MyNewProject.cpp ****     TIMER.Stop();
 132:MyNewProject.cpp ****     //*********************************************************************************************
 133:MyNewProject.cpp **** 
 134:MyNewProject.cpp **** 
 135:MyNewProject.cpp ****     //FEEDBACK KNOB INIT*************************************************************
 136:MyNewProject.cpp ****     // Configure the knob to pin D15
 137:MyNewProject.cpp ****     AdcChannelConfig adcConfig;
 138:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 139:MyNewProject.cpp ****     //hw.adc.Init(&adcConfig,1);
 140:MyNewProject.cpp ****     
 141:MyNewProject.cpp ****     
 142:MyNewProject.cpp ****     //*******************************************************************************
 143:MyNewProject.cpp **** 
 144:MyNewProject.cpp ****     //Tone Knob INIT*****************************************************************
 145:MyNewProject.cpp ****     AdcChannelConfig toneConfig;
 146:MyNewProject.cpp ****     
 147:MyNewProject.cpp ****     toneConfig.InitSingle(A1);
 148:MyNewProject.cpp ****     AdcChannelConfig configs [2] = {adcConfig,toneConfig};
 149:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 150:MyNewProject.cpp **** 
 151:MyNewProject.cpp ****     AnalogControl tne;
 152:MyNewProject.cpp ****     tne.Init(hw.adc.GetPtr(1),hw.AudioSampleRate());
 153:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 154:MyNewProject.cpp **** 
 155:MyNewProject.cpp ****     AnalogControl fbk;
 156:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 157:MyNewProject.cpp ****     fbk.Init(hw.adc.GetPtr(0),hw.AudioSampleRate());
 158:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 159:MyNewProject.cpp ****     //*******************************************************************************
 160:MyNewProject.cpp **** 
 161:MyNewProject.cpp **** 
 162:MyNewProject.cpp ****     balance.Init(48000);
 163:MyNewProject.cpp ****     hw.adc.Start();
 164:MyNewProject.cpp **** 
 165:MyNewProject.cpp ****     while(1) 
 166:MyNewProject.cpp ****     {
 167:MyNewProject.cpp ****         //Not sure why the delay, taken from the Daisy petal MultiDelay.cpp example
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 20


 168:MyNewProject.cpp ****         System::Delay(6);
 169:MyNewProject.cpp **** 
 170:MyNewProject.cpp ****     }
 171:MyNewProject.cpp **** }
 172:MyNewProject.cpp **** 
 173:MyNewProject.cpp **** void CheckTempo()
 174:MyNewProject.cpp **** {
 291              		.loc 16 174 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 175:MyNewProject.cpp ****     
 176:MyNewProject.cpp **** 
 177:MyNewProject.cpp ****     uint32_t tick;    // The position of the counter when the second tap occurs
 295              		.loc 16 177 5 view .LVU33
 178:MyNewProject.cpp ****     uint32_t freq;    // The frequency of each tick of the timer in Hz.
 296              		.loc 16 178 5 view .LVU34
 179:MyNewProject.cpp ****     float seconds;    // The seconds elapsed between first and second tap
 297              		.loc 16 179 5 view .LVU35
 180:MyNewProject.cpp **** 
 181:MyNewProject.cpp **** 
 182:MyNewProject.cpp ****     tick = TIMER.GetTick();            
 298              		.loc 16 182 5 view .LVU36
 174:MyNewProject.cpp ****     
 299              		.loc 16 174 1 is_stmt 0 view .LVU37
 300 0000 10B5     		push	{r4, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 304              		.loc 16 182 25 view .LVU38
 305 0002 3148     		ldr	r0, .L27
 174:MyNewProject.cpp ****     
 306              		.loc 16 174 1 view .LVU39
 307 0004 2DED028B 		vpush.64	{d8}
 308              		.cfi_def_cfa_offset 16
 309              		.cfi_offset 80, -16
 310              		.cfi_offset 81, -12
 311              		.loc 16 182 25 view .LVU40
 312 0008 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetTickEv
 313              	.LVL8:
 314 000c 0346     		mov	r3, r0
 183:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 315              		.loc 16 183 25 view .LVU41
 316 000e 2E48     		ldr	r0, .L27
 182:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 317              		.loc 16 182 25 view .LVU42
 318 0010 08EE103A 		vmov	s16, r3	@ int
 319              	.LVL9:
 320              		.loc 16 183 5 is_stmt 1 view .LVU43
 321              		.loc 16 183 25 is_stmt 0 view .LVU44
 322 0014 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetFreqEv
 323              	.LVL10:
 184:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 324              		.loc 16 184 5 is_stmt 1 view .LVU45
 325              		.loc 16 184 29 is_stmt 0 view .LVU46
 326 0018 07EE900A 		vmov	s15, r0	@ int
 185:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 21


 186:MyNewProject.cpp ****     //Check if the timer has gone past our max delay, if so, abandon this tap tempo and keep the ol
 187:MyNewProject.cpp ****     if(seconds > MAX_DELAY_SEC && TAPPING)
 327              		.loc 16 187 32 view .LVU47
 328 001c B0EE087A 		vmov.f32	s14, #3.0e+0
 184:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 329              		.loc 16 184 15 view .LVU48
 330 0020 B8EE488A 		vcvt.f32.u32	s16, s16
 331              	.LVL11:
 184:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 332              		.loc 16 184 29 view .LVU49
 333 0024 F8EE677A 		vcvt.f32.u32	s15, s15
 184:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 334              		.loc 16 184 13 view .LVU50
 335 0028 C8EE278A 		vdiv.f32	s17, s16, s15
 336              	.LVL12:
 337              		.loc 16 187 5 is_stmt 1 view .LVU51
 338              		.loc 16 187 32 is_stmt 0 view .LVU52
 339 002c F4EEC78A 		vcmpe.f32	s17, s14
 340 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 341 0034 02DD     		ble	.L12
 342              		.loc 16 187 35 discriminator 1 view .LVU53
 343 0036 254C     		ldr	r4, .L27+4
 344 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 345              		.loc 16 187 32 discriminator 1 view .LVU54
 346 003a 73BB     		cbnz	r3, .L25
 347              	.LVL13:
 348              	.L12:
 188:MyNewProject.cpp ****     {
 189:MyNewProject.cpp ****         //hw.PrintLine("Over 3 sec");
 190:MyNewProject.cpp ****         TIMER.DeInit();
 191:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 192:MyNewProject.cpp **** 
 193:MyNewProject.cpp ****         // Turn the timer off
 194:MyNewProject.cpp ****         TIMER.Stop();
 195:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 196:MyNewProject.cpp ****     }
 197:MyNewProject.cpp **** 
 198:MyNewProject.cpp ****     // Check if the button was clicked
 199:MyNewProject.cpp ****     TEMPO_BUTTON.Debounce();
 349              		.loc 16 199 5 is_stmt 1 view .LVU55
 350              		.loc 16 199 26 is_stmt 0 view .LVU56
 351 003c 244C     		ldr	r4, .L27+8
 352 003e 2046     		mov	r0, r4
 353 0040 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 354              	.LVL14:
 200:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 355              		.loc 16 200 5 is_stmt 1 view .LVU57
 356              	.LBB174:
 357              	.LBI174:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 22


  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 358              		.loc 4 70 17 view .LVU58
 359              	.LBB175:
 360              		.loc 4 70 38 view .LVU59
 361              		.loc 4 70 54 is_stmt 0 view .LVU60
 362 0044 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 363 0046 2BB3     		cbz	r3, .L11
 364              	.LVL15:
 365              		.loc 4 70 54 view .LVU61
 366              	.LBE175:
 367              	.LBE174:
 368              		.loc 16 200 5 view .LVU62
 369 0048 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 370 004a 7F2B     		cmp	r3, #127
 371 004c 22D1     		bne	.L11
 201:MyNewProject.cpp ****     {
 202:MyNewProject.cpp ****         // The first tap
 203:MyNewProject.cpp ****         if(TAPPING == false)
 372              		.loc 16 203 9 is_stmt 1 view .LVU63
 373              		.loc 16 203 20 is_stmt 0 view .LVU64
 374 004e 1F4B     		ldr	r3, .L27+4
 375 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 376              		.loc 16 203 9 view .LVU65
 377 0052 82B3     		cbz	r2, .L26
 204:MyNewProject.cpp ****         {
 205:MyNewProject.cpp ****             TAPPING = true; // Set the TAPPING flag
 206:MyNewProject.cpp **** 
 207:MyNewProject.cpp ****             // Start the timer and begin counting
 208:MyNewProject.cpp ****             TIMER.Start(); 
 209:MyNewProject.cpp **** 
 210:MyNewProject.cpp **** 
 211:MyNewProject.cpp ****         }
 212:MyNewProject.cpp ****         // The second tap
 213:MyNewProject.cpp ****         else 
 214:MyNewProject.cpp ****         {
 215:MyNewProject.cpp ****             TAPPING = false; // Reset TAPPING flag
 378              		.loc 16 215 13 is_stmt 1 view .LVU66
 379              		.loc 16 215 21 is_stmt 0 view .LVU67
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 23


 380 0054 0022     		movs	r2, #0
 216:MyNewProject.cpp **** 
 217:MyNewProject.cpp ****             // Stop the timer
 218:MyNewProject.cpp ****             TIMER.Stop();
 381              		.loc 16 218 23 view .LVU68
 382 0056 1C48     		ldr	r0, .L27
 215:MyNewProject.cpp **** 
 383              		.loc 16 215 21 view .LVU69
 384 0058 1A70     		strb	r2, [r3]
 385              		.loc 16 218 13 is_stmt 1 view .LVU70
 386              		.loc 16 218 23 is_stmt 0 view .LVU71
 387 005a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 388              	.LVL16:
 219:MyNewProject.cpp ****             TIMER.DeInit();
 389              		.loc 16 219 13 is_stmt 1 view .LVU72
 390              		.loc 16 219 25 is_stmt 0 view .LVU73
 391 005e 1A48     		ldr	r0, .L27
 392 0060 FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 393              	.LVL17:
 220:MyNewProject.cpp ****             TIMER.Init(*configPtr);
 394              		.loc 16 220 13 is_stmt 1 view .LVU74
 395              		.loc 16 220 23 is_stmt 0 view .LVU75
 396 0064 1B4B     		ldr	r3, .L27+12
 397 0066 1848     		ldr	r0, .L27
 398 0068 1968     		ldr	r1, [r3]
 399 006a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 400              	.LVL18:
 221:MyNewProject.cpp ****             // Turn the timer off
 222:MyNewProject.cpp ****             TIMER.Stop();
 401              		.loc 16 222 13 is_stmt 1 view .LVU76
 402              		.loc 16 222 23 is_stmt 0 view .LVU77
 403 006e 1648     		ldr	r0, .L27
 404 0070 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 405              	.LVL19:
 223:MyNewProject.cpp **** 
 224:MyNewProject.cpp ****             // Only set new BPM if its greater than our minimum
 225:MyNewProject.cpp ****             if(seconds > MIN_DELAY_SEC )
 406              		.loc 16 225 13 is_stmt 1 view .LVU78
 407 0074 DFED187A 		vldr.32	s15, .L27+16
 408 0078 F4EEE78A 		vcmpe.f32	s17, s15
 409 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 410 0080 08DD     		ble	.L11
 226:MyNewProject.cpp ****             {
 227:MyNewProject.cpp ****                 BPM = -33.3333f*(seconds)+120; // Set the BPM for the delays 
 411              		.loc 16 227 17 view .LVU79
 412              		.loc 16 227 42 is_stmt 0 view .LVU80
 413 0082 9FED167A 		vldr.32	s14, .L27+20
 414 0086 DFED167A 		vldr.32	s15, .L27+24
 415              		.loc 16 227 21 view .LVU81
 416 008a 164B     		ldr	r3, .L27+28
 417              		.loc 16 227 42 view .LVU82
 418 008c E8EE877A 		vfma.f32	s15, s17, s14
 419              		.loc 16 227 21 view .LVU83
 420 0090 C3ED007A 		vstr.32	s15, [r3]
 421              	.L11:
 228:MyNewProject.cpp ****                 // Set all delays to new bpm
 229:MyNewProject.cpp ****             }
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 24


 230:MyNewProject.cpp ****             //else
 231:MyNewProject.cpp ****                 //hw.PrintLine("Under .6");
 232:MyNewProject.cpp **** 
 233:MyNewProject.cpp **** 
 234:MyNewProject.cpp ****             
 235:MyNewProject.cpp ****         }
 236:MyNewProject.cpp ****     
 237:MyNewProject.cpp **** 
 238:MyNewProject.cpp ****     }
 239:MyNewProject.cpp **** 
 240:MyNewProject.cpp **** 
 241:MyNewProject.cpp **** }
 422              		.loc 16 241 1 view .LVU84
 423 0094 BDEC028B 		vldm	sp!, {d8}
 424              		.cfi_remember_state
 425              		.cfi_restore 80
 426              		.cfi_restore 81
 427              		.cfi_def_cfa_offset 8
 428 0098 10BD     		pop	{r4, pc}
 429              	.LVL20:
 430              	.L25:
 431              		.cfi_restore_state
 190:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 432              		.loc 16 190 9 is_stmt 1 view .LVU85
 190:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 433              		.loc 16 190 21 is_stmt 0 view .LVU86
 434 009a 0B48     		ldr	r0, .L27
 435              	.LVL21:
 190:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 436              		.loc 16 190 21 view .LVU87
 437 009c FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 438              	.LVL22:
 191:MyNewProject.cpp **** 
 439              		.loc 16 191 9 is_stmt 1 view .LVU88
 191:MyNewProject.cpp **** 
 440              		.loc 16 191 19 is_stmt 0 view .LVU89
 441 00a0 0C4B     		ldr	r3, .L27+12
 442 00a2 0948     		ldr	r0, .L27
 443 00a4 1968     		ldr	r1, [r3]
 444 00a6 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 445              	.LVL23:
 194:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 446              		.loc 16 194 9 is_stmt 1 view .LVU90
 194:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 447              		.loc 16 194 19 is_stmt 0 view .LVU91
 448 00aa 0748     		ldr	r0, .L27
 449 00ac FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 450              	.LVL24:
 195:MyNewProject.cpp ****     }
 451              		.loc 16 195 9 is_stmt 1 view .LVU92
 195:MyNewProject.cpp ****     }
 452              		.loc 16 195 17 is_stmt 0 view .LVU93
 453 00b0 0023     		movs	r3, #0
 454 00b2 2370     		strb	r3, [r4]
 455 00b4 C2E7     		b	.L12
 456              	.L26:
 205:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 25


 457              		.loc 16 205 13 is_stmt 1 view .LVU94
 458              		.loc 16 241 1 is_stmt 0 view .LVU95
 459 00b6 BDEC028B 		vldm	sp!, {d8}
 460              		.cfi_restore 80
 461              		.cfi_restore 81
 462              		.cfi_def_cfa_offset 8
 205:MyNewProject.cpp **** 
 463              		.loc 16 205 21 view .LVU96
 464 00ba 0122     		movs	r2, #1
 208:MyNewProject.cpp **** 
 465              		.loc 16 208 24 view .LVU97
 466 00bc 0248     		ldr	r0, .L27
 467              		.loc 16 241 1 view .LVU98
 468 00be BDE81040 		pop	{r4, lr}
 469              		.cfi_restore 14
 470              		.cfi_restore 4
 471              		.cfi_def_cfa_offset 0
 205:MyNewProject.cpp **** 
 472              		.loc 16 205 21 view .LVU99
 473 00c2 1A70     		strb	r2, [r3]
 208:MyNewProject.cpp **** 
 474              		.loc 16 208 13 is_stmt 1 view .LVU100
 208:MyNewProject.cpp **** 
 475              		.loc 16 208 24 is_stmt 0 view .LVU101
 476 00c4 FFF7FEBF 		b	_ZN5daisy11TimerHandle5StartEv
 477              	.LVL25:
 478              	.L28:
 479              		.align	2
 480              	.L27:
 481 00c8 00000000 		.word	.LANCHOR0
 482 00cc 00000000 		.word	.LANCHOR1
 483 00d0 00000000 		.word	.LANCHOR3
 484 00d4 00000000 		.word	.LANCHOR2
 485 00d8 9A99193F 		.word	1058642330
 486 00dc 4D5505C2 		.word	-1039837875
 487 00e0 0000F042 		.word	1123024896
 488 00e4 00000000 		.word	.LANCHOR4
 489              		.cfi_endproc
 490              	.LFE4791:
 492              		.section	.text._Z15InitHeadButtonsv,"ax",%progbits
 493              		.align	1
 494              		.p2align 2,,3
 495              		.global	_Z15InitHeadButtonsv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv5-d16
 501              	_Z15InitHeadButtonsv:
 502              	.LFB4792:
 242:MyNewProject.cpp **** 
 243:MyNewProject.cpp **** void InitHeadButtons()
 244:MyNewProject.cpp **** {
 503              		.loc 16 244 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 245:MyNewProject.cpp ****     // Iterate through head switch array
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 26


 246:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 507              		.loc 16 246 5 view .LVU103
 508              	.LVL26:
 509              	.LBB176:
 510              		.loc 16 246 22 view .LVU104
 511              	.LBE176:
 244:MyNewProject.cpp ****     // Iterate through head switch array
 512              		.loc 16 244 1 is_stmt 0 view .LVU105
 513 0000 30B5     		push	{r4, r5, lr}
 514              		.cfi_def_cfa_offset 12
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 518 0002 0B4D     		ldr	r5, .L33
 519 0004 83B0     		sub	sp, sp, #12
 520              		.cfi_def_cfa_offset 24
 244:MyNewProject.cpp ****     // Iterate through head switch array
 521              		.loc 16 244 1 view .LVU106
 522 0006 1524     		movs	r4, #21
 523              	.LVL27:
 524              	.L30:
 525              	.LBB177:
 247:MyNewProject.cpp ****     {
 248:MyNewProject.cpp ****         // Init buttons to D21 - D24
 249:MyNewProject.cpp ****         headSwitches[i].Init(hw.GetPin(21+i),1000);
 526              		.loc 16 249 9 is_stmt 1 discriminator 2 view .LVU107
 527              		.loc 16 249 29 is_stmt 0 discriminator 2 view .LVU108
 528 0008 2046     		mov	r0, r4
 246:MyNewProject.cpp ****     {
 529              		.loc 16 246 22 discriminator 2 view .LVU109
 530 000a 0134     		adds	r4, r4, #1
 531              		.loc 16 249 29 discriminator 2 view .LVU110
 532 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 533              	.LVL28:
 534 0010 0346     		mov	r3, r0	@ movhi
 246:MyNewProject.cpp ****     {
 535              		.loc 16 246 22 discriminator 2 view .LVU111
 536 0012 E4B2     		uxtb	r4, r4
 537              		.loc 16 249 29 discriminator 2 view .LVU112
 538 0014 2846     		mov	r0, r5
 539 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
 246:MyNewProject.cpp ****     {
 540              		.loc 16 246 22 discriminator 2 view .LVU113
 541 001a 1035     		adds	r5, r5, #16
 542              		.loc 16 249 29 discriminator 2 view .LVU114
 543 001c 9FED050A 		vldr.32	s0, .L33+4
 544 0020 0199     		ldr	r1, [sp, #4]
 545 0022 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 546              	.LVL29:
 246:MyNewProject.cpp ****     {
 547              		.loc 16 246 5 is_stmt 1 discriminator 2 view .LVU115
 246:MyNewProject.cpp ****     {
 548              		.loc 16 246 22 discriminator 2 view .LVU116
 549 0026 192C     		cmp	r4, #25
 550 0028 EED1     		bne	.L30
 551              	.LBE177:
 250:MyNewProject.cpp ****     }
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 27


 251:MyNewProject.cpp **** }
 552              		.loc 16 251 1 is_stmt 0 view .LVU117
 553 002a 03B0     		add	sp, sp, #12
 554              		.cfi_def_cfa_offset 12
 555              		@ sp needed
 556 002c 30BD     		pop	{r4, r5, pc}
 557              	.L34:
 558 002e 00BF     		.align	2
 559              	.L33:
 560 0030 00000000 		.word	.LANCHOR5
 561 0034 00007A44 		.word	1148846080
 562              		.cfi_endproc
 563              	.LFE4792:
 565              		.section	.text.startup.main,"ax",%progbits
 566              		.align	1
 567              		.p2align 2,,3
 568              		.global	main
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	main:
 575              	.LFB4790:
  94:MyNewProject.cpp ****     // Initialize seed hardware.
 576              		.loc 16 94 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ Volatile: function does not return.
 579              		@ args = 0, pretend = 0, frame = 216
 580              		@ frame_needed = 0, uses_anonymous_args = 0
  96:MyNewProject.cpp **** 
 581              		.loc 16 96 5 view .LVU119
  94:MyNewProject.cpp ****     // Initialize seed hardware.
 582              		.loc 16 94 1 is_stmt 0 view .LVU120
 583 0000 80B5     		push	{r7, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
  96:MyNewProject.cpp **** 
 587              		.loc 16 96 12 view .LVU121
 588 0002 0021     		movs	r1, #0
  94:MyNewProject.cpp ****     // Initialize seed hardware.
 589              		.loc 16 94 1 view .LVU122
 590 0004 B6B0     		sub	sp, sp, #216
 591              		.cfi_def_cfa_offset 224
  96:MyNewProject.cpp **** 
 592              		.loc 16 96 12 view .LVU123
 593 0006 6348     		ldr	r0, .L38
 594              	.LBB178:
 595              	.LBB179:
  38:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../../DaisySP//Source/Dynamics/crossfade.h ****         Defaults
  40:../../DaisySP//Source/Dynamics/crossfade.h ****         - current position = .5
  41:../../DaisySP//Source/Dynamics/crossfade.h ****         - curve = linear
  42:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../../DaisySP//Source/Dynamics/crossfade.h ****     {
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 28


  46:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../../DaisySP//Source/Dynamics/crossfade.h ****     }
  48:../../DaisySP//Source/Dynamics/crossfade.h **** 
  49:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  54:../../DaisySP//Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../../DaisySP//Source/Dynamics/crossfade.h **** 
  56:../../DaisySP//Source/Dynamics/crossfade.h **** 
  57:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../../DaisySP//Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
  61:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../../DaisySP//Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  64:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 596              		.loc 2 64 50 view .LVU124
 597 0008 0127     		movs	r7, #1
 598              	.LBE179:
 599              	.LBE178:
  96:MyNewProject.cpp **** 
 600              		.loc 16 96 12 view .LVU125
 601 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 602              	.LVL30:
  99:MyNewProject.cpp **** 
 603              		.loc 16 99 5 is_stmt 1 view .LVU126
 604              	.LBB181:
 605              	.LBI181:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 29


  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 30


 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 122:../../libDaisy//src/daisy_seed.h ****     }
 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 606              		.loc 7 126 17 view .LVU127
 607              	.LBB182:
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 608              		.loc 7 128 9 view .LVU128
 609              		.loc 7 128 22 is_stmt 0 view .LVU129
 610 000e 0020     		movs	r0, #0
 611 0010 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 612              	.LVL31:
 613              		.loc 7 128 22 view .LVU130
 614              	.LBE182:
 615              	.LBE181:
 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 616              		.loc 16 102 5 is_stmt 1 view .LVU131
 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 617              		.loc 16 102 19 is_stmt 0 view .LVU132
 618 0014 1C20     		movs	r0, #28
 619 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 620              	.LVL32:
 621 001a 0346     		mov	r3, r0	@ movhi
 622 001c 9FED5E0A 		vldr.32	s0, .L38+4
 623              	.LBB183:
 624              	.LBB184:
 625              	.LBB185:
  79:../../libDaisy//src/per/tim.h ****         {
 626              		.loc 3 79 27 view .LVU133
 627 0020 0025     		movs	r5, #0
 628              	.LBE185:
 629              	.LBE184:
 630              	.LBE183:
 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 631              		.loc 16 102 19 view .LVU134
 632 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 633              		.loc 16 148 57 view .LVU135
 634 0026 2DAE     		add	r6, sp, #180
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 31


 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 635              		.loc 16 102 19 view .LVU136
 636 0028 0399     		ldr	r1, [sp, #12]
 153:MyNewProject.cpp **** 
 637              		.loc 16 153 18 view .LVU137
 638 002a 25AC     		add	r4, sp, #148
 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 639              		.loc 16 102 19 view .LVU138
 640 002c 5B48     		ldr	r0, .L38+8
 641 002e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 642              	.LVL33:
 104:MyNewProject.cpp ****     // Init the head on/off buttons
 643              		.loc 16 104 5 is_stmt 1 view .LVU139
 104:MyNewProject.cpp ****     // Init the head on/off buttons
 644              		.loc 16 104 22 is_stmt 0 view .LVU140
 645 0032 1920     		movs	r0, #25
 646 0034 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 647              	.LVL34:
 648 0038 0346     		mov	r3, r0	@ movhi
 649 003a 9FED570A 		vldr.32	s0, .L38+4
 650 003e ADF81030 		strh	r3, [sp, #16]	@ movhi
 651 0042 5748     		ldr	r0, .L38+12
 652 0044 0499     		ldr	r1, [sp, #16]
 653 0046 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 654              	.LVL35:
 106:MyNewProject.cpp **** 
 655              		.loc 16 106 5 is_stmt 1 view .LVU141
 106:MyNewProject.cpp **** 
 656              		.loc 16 106 20 is_stmt 0 view .LVU142
 657 004a FFF7FEFF 		bl	_Z15InitHeadButtonsv
 658              	.LVL36:
 110:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 659              		.loc 16 110 5 is_stmt 1 view .LVU143
 110:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 660              		.loc 16 110 25 is_stmt 0 view .LVU144
 661 004e 0421     		movs	r1, #4
 662 0050 5048     		ldr	r0, .L38
 663 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 664              	.LVL37:
 111:MyNewProject.cpp **** 
 665              		.loc 16 111 5 is_stmt 1 view .LVU145
 111:MyNewProject.cpp **** 
 666              		.loc 16 111 26 is_stmt 0 view .LVU146
 667 0056 0321     		movs	r1, #3
 668 0058 4E48     		ldr	r0, .L38
 669 005a FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 670              	.LVL38:
 114:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 671              		.loc 16 114 5 is_stmt 1 view .LVU147
 672              	.LBB192:
 673              	.LBI192:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 674              		.loc 2 51 17 view .LVU148
 675              	.LBE192:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 676              		.loc 2 51 26 view .LVU149
 677              	.LBB197:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 32


 678              	.LBB193:
 679              	.LBI193:
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     {
 680              		.loc 2 43 17 view .LVU150
 681              	.LBB194:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 682              		.loc 2 45 9 view .LVU151
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 683              		.loc 2 45 16 is_stmt 0 view .LVU152
 684 005e 514B     		ldr	r3, .L38+16
 685 0060 4FF07C52 		mov	r2, #1056964608
 686              	.LBE194:
 687              	.LBE193:
 688              	.LBE197:
 119:MyNewProject.cpp **** 
 689              		.loc 16 119 18 view .LVU153
 690 0064 5049     		ldr	r1, .L38+20
 691 0066 4B48     		ldr	r0, .L38
 692              	.LBB198:
 693              	.LBB196:
 694              	.LBB195:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 695              		.loc 2 45 16 view .LVU154
 696 0068 1A60     		str	r2, [r3]	@ float
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 697              		.loc 2 46 9 is_stmt 1 view .LVU155
 698              	.LVL39:
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 699              		.loc 2 46 9 is_stmt 0 view .LVU156
 700              	.LBE195:
 701              	.LBE196:
 702              	.LBE198:
 116:MyNewProject.cpp **** 
 703              		.loc 16 116 5 is_stmt 1 view .LVU157
 704              	.LBB199:
 705              	.LBI178:
 706              		.loc 2 64 17 view .LVU158
 707              	.LBB180:
 708              		.loc 2 64 43 view .LVU159
 709              		.loc 2 64 50 is_stmt 0 view .LVU160
 710 006a 1F71     		strb	r7, [r3, #4]
 711              	.LVL40:
 712              		.loc 2 64 50 view .LVU161
 713              	.LBE180:
 714              	.LBE199:
 119:MyNewProject.cpp **** 
 715              		.loc 16 119 5 is_stmt 1 view .LVU162
 119:MyNewProject.cpp **** 
 716              		.loc 16 119 18 is_stmt 0 view .LVU163
 717 006c FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 718              	.LVL41:
 122:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 719              		.loc 16 122 5 is_stmt 1 view .LVU164
 720              	.LBB200:
 721              	.LBI183:
  75:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
 722              		.loc 3 75 9 view .LVU165
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 33


 723              	.LBB189:
 724              	.LBB186:
  79:../../libDaisy//src/per/tim.h ****         {
 725              		.loc 3 79 27 is_stmt 0 view .LVU166
 726 0070 4FF0FF32 		mov	r2, #-1
 727              	.LBE186:
 728              	.LBE189:
 729              	.LBE200:
 126:MyNewProject.cpp **** 
 730              		.loc 16 126 15 view .LVU167
 731 0074 4D4B     		ldr	r3, .L38+24
 732 0076 07A9     		add	r1, sp, #28
 733              	.LVL42:
 129:MyNewProject.cpp ****     // Make sure the timer is off
 734              		.loc 16 129 15 view .LVU168
 735 0078 4D48     		ldr	r0, .L38+28
 736              	.LBB201:
 737              	.LBB190:
 738              	.LBB187:
  79:../../libDaisy//src/per/tim.h ****         {
 739              		.loc 3 79 27 view .LVU169
 740 007a 0992     		str	r2, [sp, #36]
 741              	.LVL43:
  79:../../libDaisy//src/per/tim.h ****         {
 742              		.loc 3 79 27 view .LVU170
 743              	.LBE187:
 744              	.LBE190:
 745              	.LBE201:
 123:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 746              		.loc 16 123 5 is_stmt 1 view .LVU171
 124:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 747              		.loc 16 124 5 view .LVU172
 125:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 748              		.loc 16 125 5 view .LVU173
 126:MyNewProject.cpp **** 
 749              		.loc 16 126 15 is_stmt 0 view .LVU174
 750 007c 1960     		str	r1, [r3]
 125:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 751              		.loc 16 125 23 view .LVU175
 752 007e 8DF82870 		strb	r7, [sp, #40]
 126:MyNewProject.cpp **** 
 753              		.loc 16 126 5 is_stmt 1 view .LVU176
 129:MyNewProject.cpp ****     // Make sure the timer is off
 754              		.loc 16 129 5 view .LVU177
 755              	.LBB202:
 756              	.LBB191:
 757              	.LBB188:
  79:../../libDaisy//src/per/tim.h ****         {
 758              		.loc 3 79 27 is_stmt 0 view .LVU178
 759 0082 CDE90755 		strd	r5, r5, [sp, #28]
 760              	.LBE188:
 761              	.LBE191:
 762              	.LBE202:
 129:MyNewProject.cpp ****     // Make sure the timer is off
 763              		.loc 16 129 15 view .LVU179
 764 0086 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 765              	.LVL44:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 34


 131:MyNewProject.cpp ****     //*********************************************************************************************
 766              		.loc 16 131 5 is_stmt 1 view .LVU180
 131:MyNewProject.cpp ****     //*********************************************************************************************
 767              		.loc 16 131 15 is_stmt 0 view .LVU181
 768 008a 4948     		ldr	r0, .L38+28
 769 008c FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 770              	.LVL45:
 137:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 771              		.loc 16 137 5 is_stmt 1 view .LVU182
 138:MyNewProject.cpp ****     //hw.adc.Init(&adcConfig,1);
 772              		.loc 16 138 5 view .LVU183
 138:MyNewProject.cpp ****     //hw.adc.Init(&adcConfig,1);
 773              		.loc 16 138 25 is_stmt 0 view .LVU184
 774 0090 0F20     		movs	r0, #15
 775 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 776              	.LVL46:
 777 0096 ADF81400 		strh	r0, [sp, #20]	@ movhi
 778 009a 0599     		ldr	r1, [sp, #20]
 779 009c 0BA8     		add	r0, sp, #44
 780 009e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 781              	.LVL47:
 145:MyNewProject.cpp ****     
 782              		.loc 16 145 5 is_stmt 1 view .LVU185
 147:MyNewProject.cpp ****     AdcChannelConfig configs [2] = {adcConfig,toneConfig};
 783              		.loc 16 147 5 view .LVU186
 784              	.LBB203:
 785              	.LBI203:
 786              		.file 17 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 35


  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 36


  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 37


 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 38


 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 39


 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 787              		.loc 17 294 5 view .LVU187
 788              	.LBE203:
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 789              		.loc 17 296 9 view .LVU188
 790              	.LBB205:
 791              	.LBB204:
 792              	.LBI204:
 217:../../libDaisy//src/daisy_core.h **** {
 793              		.loc 17 217 27 view .LVU189
 794              	.LBE204:
 795              	.LBE205:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 796              		.loc 17 219 5 view .LVU190
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 797              		.loc 17 220 5 view .LVU191
 221:../../libDaisy//src/daisy_core.h ****     return p;
 798              		.loc 17 221 5 view .LVU192
 222:../../libDaisy//src/daisy_core.h **** }
 799              		.loc 17 222 5 view .LVU193
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 40


 222:../../libDaisy//src/daisy_core.h **** }
 800              		.loc 17 222 5 is_stmt 0 view .LVU194
 801 00a2 0323     		movs	r3, #3
 802 00a4 8DF81850 		strb	r5, [sp, #24]
 147:MyNewProject.cpp ****     AdcChannelConfig configs [2] = {adcConfig,toneConfig};
 803              		.loc 16 147 26 view .LVU195
 804 00a8 10A8     		add	r0, sp, #64
 805 00aa 8DF81930 		strb	r3, [sp, #25]
 806              	.LVL48:
 147:MyNewProject.cpp ****     AdcChannelConfig configs [2] = {adcConfig,toneConfig};
 807              		.loc 16 147 26 view .LVU196
 808 00ae 0699     		ldr	r1, [sp, #24]
 809 00b0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 810              	.LVL49:
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 811              		.loc 16 148 5 is_stmt 1 view .LVU197
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 812              		.loc 16 148 57 is_stmt 0 view .LVU198
 813 00b4 0DF12C0E 		add	lr, sp, #44
 814 00b8 0DF1400C 		add	ip, sp, #64
 815 00bc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 816 00c0 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 817 00c2 DEF80030 		ldr	r3, [lr]
 818 00c6 3370     		strb	r3, [r6]
 158:MyNewProject.cpp ****     //*******************************************************************************
 819              		.loc 16 158 22 view .LVU199
 820 00c8 25AE     		add	r6, sp, #148
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 821              		.loc 16 148 57 view .LVU200
 822 00ca BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 823 00ce CDF8D130 		str	r3, [sp, #209]	@ unaligned
 824 00d2 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
 825 00d6 CDF8C500 		str	r0, [sp, #197]	@ unaligned
 826 00da CDF8C910 		str	r1, [sp, #201]	@ unaligned
 149:MyNewProject.cpp **** 
 827              		.loc 16 149 16 view .LVU201
 828 00de 2DA9     		add	r1, sp, #180
 829 00e0 3448     		ldr	r0, .L38+32
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 830              		.loc 16 148 57 view .LVU202
 831 00e2 CDF8CD20 		str	r2, [sp, #205]	@ unaligned
 149:MyNewProject.cpp **** 
 832              		.loc 16 149 16 view .LVU203
 833 00e6 0222     		movs	r2, #2
 148:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 834              		.loc 16 148 57 view .LVU204
 835 00e8 8DF8D530 		strb	r3, [sp, #213]
 149:MyNewProject.cpp **** 
 836              		.loc 16 149 5 is_stmt 1 view .LVU205
 149:MyNewProject.cpp **** 
 837              		.loc 16 149 16 is_stmt 0 view .LVU206
 838 00ec 0423     		movs	r3, #4
 839 00ee FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 840              	.LVL50:
 151:MyNewProject.cpp ****     tne.Init(hw.adc.GetPtr(1),hw.AudioSampleRate());
 841              		.loc 16 151 5 is_stmt 1 view .LVU207
 842              	.LBB206:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 41


 843              	.LBI206:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 844              		.loc 6 21 5 view .LVU208
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 845              		.loc 6 21 5 is_stmt 0 view .LVU209
 846              	.LBE206:
 152:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 847              		.loc 16 152 5 is_stmt 1 view .LVU210
 152:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 848              		.loc 16 152 13 is_stmt 0 view .LVU211
 849 00f2 3946     		mov	r1, r7
 850 00f4 2F48     		ldr	r0, .L38+32
 851 00f6 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 852              	.LVL51:
 853 00fa 0190     		str	r0, [sp, #4]
 854 00fc 2548     		ldr	r0, .L38
 855 00fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 856              	.LVL52:
 857 0102 DFED2D0A 		vldr.32	s1, .L38+36
 858 0106 0199     		ldr	r1, [sp, #4]
 859 0108 2B46     		mov	r3, r5
 860 010a 2A46     		mov	r2, r5
 861 010c 15A8     		add	r0, sp, #84
 862 010e FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 863              	.LVL53:
 153:MyNewProject.cpp **** 
 864              		.loc 16 153 5 is_stmt 1 view .LVU212
 153:MyNewProject.cpp **** 
 865              		.loc 16 153 18 is_stmt 0 view .LVU213
 866 0112 0DF1540C 		add	ip, sp, #84
 867 0116 F7EE000A 		vmov.f32	s1, #1.0e+0
 868 011a BFEE000A 		vmov.f32	s0, #-1.0e+0
 869 011e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 870 0122 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 871 0124 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 872 0128 84E80F00 		stm	r4, {r0, r1, r2, r3}
 873 012c 2A46     		mov	r2, r5
 874 012e 2348     		ldr	r0, .L38+40
 875 0130 25A9     		add	r1, sp, #148
 876 0132 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 877              	.LVL54:
 878              	.LBB207:
 879              	.LBI207:
 880              		.loc 6 23 5 is_stmt 1 view .LVU214
 881              		.loc 6 23 5 is_stmt 0 view .LVU215
 882              	.LBE207:
 155:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 883              		.loc 16 155 5 is_stmt 1 view .LVU216
 884              	.LBB208:
 885              	.LBI208:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 886              		.loc 6 21 5 view .LVU217
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 887              		.loc 6 21 5 is_stmt 0 view .LVU218
 888              	.LBE208:
 157:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 889              		.loc 16 157 5 is_stmt 1 view .LVU219
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 42


 157:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 890              		.loc 16 157 13 is_stmt 0 view .LVU220
 891 0136 2946     		mov	r1, r5
 892 0138 1E48     		ldr	r0, .L38+32
 893 013a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 894              	.LVL55:
 895 013e 0190     		str	r0, [sp, #4]
 896 0140 1448     		ldr	r0, .L38
 897 0142 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 898              	.LVL56:
 899 0146 DFED1C0A 		vldr.32	s1, .L38+36
 900 014a 0199     		ldr	r1, [sp, #4]
 901 014c 2B46     		mov	r3, r5
 902 014e 2A46     		mov	r2, r5
 903 0150 1DA8     		add	r0, sp, #116
 904 0152 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 905              	.LVL57:
 158:MyNewProject.cpp ****     //*******************************************************************************
 906              		.loc 16 158 5 is_stmt 1 view .LVU221
 158:MyNewProject.cpp ****     //*******************************************************************************
 907              		.loc 16 158 22 is_stmt 0 view .LVU222
 908 0156 1A4B     		ldr	r3, .L38+44
 909 0158 0DF1740C 		add	ip, sp, #116
 910 015c 9FED190A 		vldr.32	s0, .L38+48
 911 0160 D3ED000A 		vldr.32	s1, [r3]
 912 0164 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 913 0168 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 914 016a 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 915 016e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 916 0172 2A46     		mov	r2, r5
 917 0174 25A9     		add	r1, sp, #148
 918 0176 1448     		ldr	r0, .L38+52
 919 0178 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 920              	.LVL58:
 921              	.LBB209:
 922              	.LBI209:
 923              		.loc 6 23 5 is_stmt 1 view .LVU223
 924              		.loc 6 23 5 is_stmt 0 view .LVU224
 925              	.LBE209:
 162:MyNewProject.cpp ****     hw.adc.Start();
 926              		.loc 16 162 5 is_stmt 1 view .LVU225
 162:MyNewProject.cpp ****     hw.adc.Start();
 927              		.loc 16 162 17 is_stmt 0 view .LVU226
 928 017c 1348     		ldr	r0, .L38+56
 929 017e 9FED140A 		vldr.32	s0, .L38+60
 930 0182 FFF7FEFF 		bl	_ZN7daisysp7Balance4InitEf
 931              	.LVL59:
 163:MyNewProject.cpp **** 
 932              		.loc 16 163 5 is_stmt 1 view .LVU227
 163:MyNewProject.cpp **** 
 933              		.loc 16 163 17 is_stmt 0 view .LVU228
 934 0186 0B48     		ldr	r0, .L38+32
 935 0188 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 936              	.LVL60:
 937              	.L36:
 165:MyNewProject.cpp ****     {
 938              		.loc 16 165 5 is_stmt 1 discriminator 1 view .LVU229
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 43


 168:MyNewProject.cpp **** 
 939              		.loc 16 168 9 discriminator 1 view .LVU230
 168:MyNewProject.cpp **** 
 940              		.loc 16 168 22 is_stmt 0 discriminator 1 view .LVU231
 941 018c 0620     		movs	r0, #6
 942 018e FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 943              	.LVL61:
 165:MyNewProject.cpp ****     {
 944              		.loc 16 165 5 is_stmt 1 discriminator 1 view .LVU232
 945 0192 FBE7     		b	.L36
 946              	.L39:
 947              		.align	2
 948              	.L38:
 949 0194 00000000 		.word	.LANCHOR6
 950 0198 00007A44 		.word	1148846080
 951 019c 00000000 		.word	.LANCHOR7
 952 01a0 00000000 		.word	.LANCHOR3
 953 01a4 00000000 		.word	.LANCHOR8
 954 01a8 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 955 01ac 00000000 		.word	.LANCHOR2
 956 01b0 00000000 		.word	.LANCHOR0
 957 01b4 18000000 		.word	.LANCHOR6+24
 958 01b8 6F12033B 		.word	990057071
 959 01bc 00000000 		.word	.LANCHOR9
 960 01c0 00000000 		.word	.LANCHOR10
 961 01c4 00000000 		.word	0
 962 01c8 00000000 		.word	.LANCHOR11
 963 01cc 00000000 		.word	.LANCHOR12
 964 01d0 00803B47 		.word	1195081728
 965              		.cfi_endproc
 966              	.LFE4790:
 968              		.section	.rodata._Z15ProcessControlsv.str1.4,"aMS",%progbits,1
 969              		.align	2
 970              	.LC0:
 971 0000 746F6E65 		.ascii	"tone knob val: %f\000"
 971      206B6E6F 
 971      62207661 
 971      6C3A2025 
 971      6600
 972              		.section	.text._Z15ProcessControlsv,"ax",%progbits
 973              		.align	1
 974              		.p2align 2,,3
 975              		.global	_Z15ProcessControlsv
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv5-d16
 981              	_Z15ProcessControlsv:
 982              	.LFB4793:
 252:MyNewProject.cpp **** 
 253:MyNewProject.cpp **** void ProcessControls()
 254:MyNewProject.cpp **** {
 983              		.loc 16 254 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 255:MyNewProject.cpp ****     delay.setFeedback(feedbackKnob.Process());
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 44


 987              		.loc 16 255 5 view .LVU234
 254:MyNewProject.cpp ****     delay.setFeedback(feedbackKnob.Process());
 988              		.loc 16 254 1 is_stmt 0 view .LVU235
 989 0000 10B5     		push	{r4, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 4, -8
 992              		.cfi_offset 14, -4
 993 0002 82B0     		sub	sp, sp, #8
 994              		.cfi_def_cfa_offset 16
 995              		.loc 16 255 43 view .LVU236
 996 0004 1C48     		ldr	r0, .L49
 997 0006 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 998              	.LVL62:
 999              		.loc 16 255 22 view .LVU237
 1000 000a 1C48     		ldr	r0, .L49+4
 1001 000c 01A9     		add	r1, sp, #4
 1002              		.loc 16 255 43 view .LVU238
 1003 000e 8DED010A 		vstr.32	s0, [sp, #4]
 1004              		.loc 16 255 22 view .LVU239
 1005 0012 FFF7FEFF 		bl	_ZN6Delayy11setFeedbackERKf
 1006              	.LVL63:
 256:MyNewProject.cpp ****     tone.setFreq(toneKnob.Process());
 1007              		.loc 16 256 5 is_stmt 1 view .LVU240
 1008              		.loc 16 256 17 is_stmt 0 view .LVU241
 1009 0016 1A48     		ldr	r0, .L49+8
 1010 0018 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1011              	.LVL64:
 1012 001c 1948     		ldr	r0, .L49+12
 1013 001e FFF7FEFF 		bl	_ZN10ToneFilter7setFreqEf
 1014              	.LVL65:
 257:MyNewProject.cpp **** 
 258:MyNewProject.cpp **** 
 259:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 1015              		.loc 16 259 5 is_stmt 1 view .LVU242
 1016              	.LBB210:
 1017              		.loc 16 259 13 is_stmt 0 view .LVU243
 1018 0022 0023     		movs	r3, #0
 1019 0024 184C     		ldr	r4, .L49+16
 1020              		.loc 16 259 22 view .LVU244
 1021 0026 1846     		mov	r0, r3
 1022              		.loc 16 259 13 view .LVU245
 1023 0028 0193     		str	r3, [sp, #4]
 1024              		.loc 16 259 22 is_stmt 1 view .LVU246
 1025 002a 03E0     		b	.L42
 1026              	.LVL66:
 1027              	.L41:
 1028              		.loc 16 259 5 discriminator 2 view .LVU247
 1029 002c 0130     		adds	r0, r0, #1
 1030              		.loc 16 259 22 is_stmt 0 discriminator 2 view .LVU248
 1031 002e 0328     		cmp	r0, #3
 1032              		.loc 16 259 5 discriminator 2 view .LVU249
 1033 0030 0190     		str	r0, [sp, #4]
 1034              		.loc 16 259 22 is_stmt 1 discriminator 2 view .LVU250
 1035 0032 1FDC     		bgt	.L48
 1036              	.L42:
 260:MyNewProject.cpp ****     {
 261:MyNewProject.cpp ****         headSwitches[i].Debounce();
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 45


 1037              		.loc 16 261 9 view .LVU251
 1038              		.loc 16 261 33 is_stmt 0 view .LVU252
 1039 0034 04EB0010 		add	r0, r4, r0, lsl #4
 1040 0038 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 1041              	.LVL67:
 262:MyNewProject.cpp ****         if(headSwitches[i].RisingEdge())
 1042              		.loc 16 262 9 is_stmt 1 view .LVU253
 1043              		.loc 16 262 26 is_stmt 0 view .LVU254
 1044 003c 0198     		ldr	r0, [sp, #4]
 1045              	.LVL68:
 1046              	.LBB211:
 1047              	.LBI211:
 1048              		.loc 4 70 17 is_stmt 1 view .LVU255
 1049              	.LBB212:
 1050              		.loc 4 70 38 view .LVU256
 1051              		.loc 4 70 45 is_stmt 0 view .LVU257
 1052 003e 04EB0013 		add	r3, r4, r0, lsl #4
 1053              		.loc 4 70 54 view .LVU258
 1054 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1055 0044 002A     		cmp	r2, #0
 1056 0046 F1D0     		beq	.L41
 1057              	.LBE212:
 1058              	.LBE211:
 1059              		.loc 16 262 9 view .LVU259
 1060 0048 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1061 004a 7F2B     		cmp	r3, #127
 1062 004c EED1     		bne	.L41
 263:MyNewProject.cpp ****         {            
 264:MyNewProject.cpp ****             hw.PrintLine("tone knob val: %f",toneKnob.Process());
 1063              		.loc 16 264 13 is_stmt 1 view .LVU260
 1064              		.loc 16 264 25 is_stmt 0 view .LVU261
 1065 004e 0C48     		ldr	r0, .L49+8
 1066              	.LVL69:
 1067              		.loc 16 264 25 view .LVU262
 1068 0050 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1069              	.LVL70:
 1070              	.LBB213:
 1071              	.LBI213:
 119:../../libDaisy//src/daisy_seed.h ****     {
 1072              		.loc 7 119 17 is_stmt 1 view .LVU263
 1073              	.LBB214:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1074              		.loc 7 121 23 is_stmt 0 view .LVU264
 1075 0054 B7EEC07A 		vcvt.f64.f32	d7, s0
 1076 0058 0C48     		ldr	r0, .L49+20
 1077 005a 53EC172B 		vmov	r2, r3, d7
 1078 005e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1079              	.LVL71:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1080              		.loc 7 121 23 view .LVU265
 1081              	.LBE214:
 1082              	.LBE213:
 265:MyNewProject.cpp ****             delay.toggleHead(i);
 1083              		.loc 16 265 13 is_stmt 1 view .LVU266
 1084              		.loc 16 265 29 is_stmt 0 view .LVU267
 1085 0062 0648     		ldr	r0, .L49+4
 1086 0064 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 46


 1087 0066 FFF7FEFF 		bl	_ZN6Delayy10toggleHeadERKi
 1088              	.LVL72:
 259:MyNewProject.cpp ****     {
 1089              		.loc 16 259 5 view .LVU268
 1090 006a 0198     		ldr	r0, [sp, #4]
 259:MyNewProject.cpp ****     {
 1091              		.loc 16 259 5 is_stmt 1 view .LVU269
 1092 006c 0130     		adds	r0, r0, #1
 259:MyNewProject.cpp ****     {
 1093              		.loc 16 259 22 is_stmt 0 view .LVU270
 1094 006e 0328     		cmp	r0, #3
 259:MyNewProject.cpp ****     {
 1095              		.loc 16 259 5 view .LVU271
 1096 0070 0190     		str	r0, [sp, #4]
 259:MyNewProject.cpp ****     {
 1097              		.loc 16 259 22 is_stmt 1 view .LVU272
 1098 0072 DFDD     		ble	.L42
 1099              	.L48:
 1100              	.LBE210:
 266:MyNewProject.cpp ****         }
 267:MyNewProject.cpp ****     }
 268:MyNewProject.cpp **** }
 1101              		.loc 16 268 1 is_stmt 0 view .LVU273
 1102 0074 02B0     		add	sp, sp, #8
 1103              		.cfi_def_cfa_offset 8
 1104              		@ sp needed
 1105 0076 10BD     		pop	{r4, pc}
 1106              	.L50:
 1107              		.align	2
 1108              	.L49:
 1109 0078 00000000 		.word	.LANCHOR11
 1110 007c 00000000 		.word	delay
 1111 0080 00000000 		.word	.LANCHOR9
 1112 0084 00000000 		.word	.LANCHOR13
 1113 0088 00000000 		.word	.LANCHOR5
 1114 008c 00000000 		.word	.LC0
 1115              		.cfi_endproc
 1116              	.LFE4793:
 1118              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 1119              		.align	1
 1120              		.p2align 2,,3
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv5-d16
 1126              	_ZL13AudioCallbackPKPKfPPfj:
 1127              	.LVL73:
 1128              	.LFB4789:
  44:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1129              		.loc 16 44 1 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 8
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
  45:MyNewProject.cpp ****     {
 1133              		.loc 16 45 5 view .LVU275
 1134              	.LBB215:
  45:MyNewProject.cpp ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 47


 1135              		.loc 16 45 25 view .LVU276
 1136 0000 002A     		cmp	r2, #0
 1137 0002 6ED0     		beq	.L65
 1138              	.LBE215:
  44:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1139              		.loc 16 44 1 is_stmt 0 view .LVU277
 1140 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1141              		.cfi_def_cfa_offset 36
 1142              		.cfi_offset 4, -36
 1143              		.cfi_offset 5, -32
 1144              		.cfi_offset 6, -28
 1145              		.cfi_offset 7, -24
 1146              		.cfi_offset 8, -20
 1147              		.cfi_offset 9, -16
 1148              		.cfi_offset 10, -12
 1149              		.cfi_offset 11, -8
 1150              		.cfi_offset 14, -4
 1151 0008 0546     		mov	r5, r0
 1152 000a 0E46     		mov	r6, r1
 1153 000c 9046     		mov	r8, r2
 1154              	.LBB228:
  45:MyNewProject.cpp ****     {
 1155              		.loc 16 45 16 view .LVU278
 1156 000e 0024     		movs	r4, #0
 1157 0010 DFF8E890 		ldr	r9, .L69+24
 1158 0014 334F     		ldr	r7, .L69
 1159 0016 DFF8E8A0 		ldr	r10, .L69+28
 1160              	.LBE228:
  44:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1161              		.loc 16 44 1 view .LVU279
 1162 001a 2DED028B 		vpush.64	{d8}
 1163              		.cfi_def_cfa_offset 44
 1164              		.cfi_offset 80, -44
 1165              		.cfi_offset 81, -40
 1166 001e 83B0     		sub	sp, sp, #12
 1167              		.cfi_def_cfa_offset 56
 1168 0020 37E0     		b	.L59
 1169              	.LVL74:
 1170              	.L58:
 1171              	.LBB229:
 1172              	.LBB216:
  66:MyNewProject.cpp ****         }
 1173              		.loc 16 66 13 is_stmt 1 view .LVU280
  64:MyNewProject.cpp ****         {
 1174              		.loc 16 64 33 is_stmt 0 view .LVU281
 1175 0022 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  66:MyNewProject.cpp ****         }
 1176              		.loc 16 66 32 view .LVU282
 1177 0024 0022     		movs	r2, #0
  64:MyNewProject.cpp ****         {
 1178              		.loc 16 64 33 view .LVU283
 1179 0026 03B1     		cbz	r3, .L57
  66:MyNewProject.cpp ****         }
 1180              		.loc 16 66 32 view .LVU284
 1181 0028 3A70     		strb	r2, [r7]
 1182              	.L57:
  69:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 48


 1183              		.loc 16 69 9 is_stmt 1 discriminator 2 view .LVU285
 1184              	.LVL75:
  70:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1185              		.loc 16 70 6 discriminator 2 view .LVU286
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1186              		.loc 16 76 42 is_stmt 0 discriminator 2 view .LVU287
 1187 002a 2B68     		ldr	r3, [r5]
  70:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1188              		.loc 16 70 12 discriminator 2 view .LVU288
 1189 002c 0022     		movs	r2, #0
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1190              		.loc 16 76 42 discriminator 2 view .LVU289
 1191 002e 2E48     		ldr	r0, .L69+4
 1192 0030 4FEA840B 		lsl	fp, r4, #2
 1193 0034 03EB8403 		add	r3, r3, r4, lsl #2
  70:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1194              		.loc 16 70 12 discriminator 2 view .LVU290
 1195 0038 0092     		str	r2, [sp]	@ float
  71:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
 1196              		.loc 16 71 9 is_stmt 1 discriminator 2 view .LVU291
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1197              		.loc 16 76 9 discriminator 2 view .LVU292
 1198              	.LBE216:
  45:MyNewProject.cpp ****     {
 1199              		.loc 16 45 5 is_stmt 0 discriminator 2 view .LVU293
 1200 003a 0134     		adds	r4, r4, #1
 1201              	.LVL76:
 1202              	.LBB225:
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1203              		.loc 16 76 42 discriminator 2 view .LVU294
 1204 003c 93ED000A 		vldr.32	s0, [r3]
 1205 0040 FFF7FEFF 		bl	_ZN6Delayy7processEf
 1206              	.LVL77:
 1207 0044 B0EE408A 		vmov.f32	s16, s0
  78:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter);
 1208              		.loc 16 78 41 discriminator 2 view .LVU295
 1209 0048 2848     		ldr	r0, .L69+8
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1210              		.loc 16 76 27 discriminator 2 view .LVU296
 1211 004a 8DED000A 		vstr.32	s0, [sp]
  77:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
 1212              		.loc 16 77 9 is_stmt 1 discriminator 2 view .LVU297
 1213              	.LVL78:
  78:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter);
 1214              		.loc 16 78 9 discriminator 2 view .LVU298
  78:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter);
 1215              		.loc 16 78 41 is_stmt 0 discriminator 2 view .LVU299
 1216 004e FFF7FEFF 		bl	_ZN10ToneFilter7processEf
 1217              	.LVL79:
  79:MyNewProject.cpp **** 
 1218              		.loc 16 79 44 discriminator 2 view .LVU300
 1219 0052 F0EE480A 		vmov.f32	s1, s16
 1220 0056 2648     		ldr	r0, .L69+12
  78:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter);
 1221              		.loc 16 78 27 discriminator 2 view .LVU301
 1222 0058 8DED000A 		vstr.32	s0, [sp]
  79:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 49


 1223              		.loc 16 79 9 is_stmt 1 discriminator 2 view .LVU302
  79:MyNewProject.cpp **** 
 1224              		.loc 16 79 44 is_stmt 0 discriminator 2 view .LVU303
 1225 005c FFF7FEFF 		bl	_ZN7daisysp7Balance7ProcessEff
 1226              	.LVL80:
  84:MyNewProject.cpp **** 
 1227              		.loc 16 84 32 discriminator 2 view .LVU304
 1228 0060 2B68     		ldr	r3, [r5]
  88:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1229              		.loc 16 88 28 discriminator 2 view .LVU305
 1230 0062 6A46     		mov	r2, sp
  79:MyNewProject.cpp **** 
 1231              		.loc 16 79 27 discriminator 2 view .LVU306
 1232 0064 8DED000A 		vstr.32	s0, [sp]
  84:MyNewProject.cpp **** 
 1233              		.loc 16 84 9 is_stmt 1 discriminator 2 view .LVU307
  84:MyNewProject.cpp **** 
 1234              		.loc 16 84 32 is_stmt 0 discriminator 2 view .LVU308
 1235 0068 5B44     		add	r3, r3, fp
 1236              	.LBB217:
 1237              	.LBB218:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1238              		.loc 2 60 42 discriminator 2 view .LVU309
 1239 006a 2249     		ldr	r1, .L69+16
 1240              	.LBE218:
 1241              	.LBE217:
  88:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1242              		.loc 16 88 28 discriminator 2 view .LVU310
 1243 006c 2148     		ldr	r0, .L69+16
  84:MyNewProject.cpp **** 
 1244              		.loc 16 84 32 discriminator 2 view .LVU311
 1245 006e 1B68     		ldr	r3, [r3]	@ float
  84:MyNewProject.cpp **** 
 1246              		.loc 16 84 23 discriminator 2 view .LVU312
 1247 0070 0193     		str	r3, [sp, #4]	@ float
  87:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
 1248              		.loc 16 87 3 is_stmt 1 discriminator 2 view .LVU313
 1249              	.LVL81:
 1250              	.LBB220:
 1251              	.LBI217:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1252              		.loc 2 60 17 discriminator 2 view .LVU314
 1253              	.LBB219:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1254              		.loc 2 60 37 discriminator 2 view .LVU315
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1255              		.loc 2 60 42 is_stmt 0 discriminator 2 view .LVU316
 1256 0072 DAF80030 		ldr	r3, [r10]	@ float
 1257 0076 0B60     		str	r3, [r1]	@ float
 1258              	.LVL82:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1259              		.loc 2 60 42 discriminator 2 view .LVU317
 1260              	.LBE219:
 1261              	.LBE220:
  88:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1262              		.loc 16 88 3 is_stmt 1 discriminator 2 view .LVU318
  88:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 50


 1263              		.loc 16 88 28 is_stmt 0 discriminator 2 view .LVU319
 1264 0078 01A9     		add	r1, sp, #4
 1265 007a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 1266              	.LVL83:
  89:MyNewProject.cpp ****     }
 1267              		.loc 16 89 27 discriminator 2 view .LVU320
 1268 007e 7368     		ldr	r3, [r6, #4]
 1269              	.LVL84:
  89:MyNewProject.cpp ****     }
 1270              		.loc 16 89 3 is_stmt 1 discriminator 2 view .LVU321
 1271              	.LBE225:
  45:MyNewProject.cpp ****     {
 1272              		.loc 16 45 25 is_stmt 0 discriminator 2 view .LVU322
 1273 0080 A045     		cmp	r8, r4
 1274              	.LBB226:
  89:MyNewProject.cpp ****     }
 1275              		.loc 16 89 27 discriminator 2 view .LVU323
 1276 0082 5B44     		add	r3, r3, fp
 1277 0084 83ED000A 		vstr.32	s0, [r3]
  89:MyNewProject.cpp ****     }
 1278              		.loc 16 89 14 discriminator 2 view .LVU324
 1279 0088 3368     		ldr	r3, [r6]
 1280 008a 5B44     		add	r3, r3, fp
 1281 008c 83ED000A 		vstr.32	s0, [r3]
 1282              	.LBE226:
  45:MyNewProject.cpp ****     {
 1283              		.loc 16 45 5 is_stmt 1 discriminator 2 view .LVU325
 1284              	.LVL85:
  45:MyNewProject.cpp ****     {
 1285              		.loc 16 45 25 discriminator 2 view .LVU326
 1286 0090 22D0     		beq	.L68
 1287              	.LVL86:
 1288              	.L59:
 1289              	.LBB227:
  48:MyNewProject.cpp ****         // Check for tempo change
 1290              		.loc 16 48 9 view .LVU327
  48:MyNewProject.cpp ****         // Check for tempo change
 1291              		.loc 16 48 24 is_stmt 0 view .LVU328
 1292 0092 FFF7FEFF 		bl	_Z15ProcessControlsv
 1293              	.LVL87:
  50:MyNewProject.cpp ****         // Set delays with new bpm
 1294              		.loc 16 50 9 is_stmt 1 view .LVU329
  50:MyNewProject.cpp ****         // Set delays with new bpm
 1295              		.loc 16 50 19 is_stmt 0 view .LVU330
 1296 0096 FFF7FEFF 		bl	_Z10CheckTempov
 1297              	.LVL88:
  52:MyNewProject.cpp **** 
 1298              		.loc 16 52 9 is_stmt 1 view .LVU331
  52:MyNewProject.cpp **** 
 1299              		.loc 16 52 21 is_stmt 0 view .LVU332
 1300 009a 174B     		ldr	r3, .L69+20
 1301 009c 01A9     		add	r1, sp, #4
 1302 009e 1248     		ldr	r0, .L69+4
 1303 00a0 D3ED007A 		vldr.32	s15, [r3]
 1304 00a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1305 00a8 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1306 00ac FFF7FEFF 		bl	_ZN6Delayy6setBPMERKi
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 51


 1307              	.LVL89:
  55:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 1308              		.loc 16 55 9 is_stmt 1 view .LVU333
  55:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 1309              		.loc 16 55 27 is_stmt 0 view .LVU334
 1310 00b0 1248     		ldr	r0, .L69+24
 1311 00b2 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 1312              	.LVL90:
  57:MyNewProject.cpp ****         {
 1313              		.loc 16 57 9 is_stmt 1 view .LVU335
 1314              	.LBB221:
 1315              	.LBI221:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 1316              		.loc 4 79 17 view .LVU336
 1317              	.LBB222:
 1318              		.loc 4 79 35 view .LVU337
 1319              		.loc 4 79 35 is_stmt 0 view .LVU338
 1320              	.LBE222:
 1321              	.LBE221:
  57:MyNewProject.cpp ****         {
 1322              		.loc 16 57 32 view .LVU339
 1323 00b6 99F80A30 		ldrb	r3, [r9, #10]	@ zero_extendqisi2
 1324 00ba FF2B     		cmp	r3, #255
 1325 00bc B1D1     		bne	.L58
  57:MyNewProject.cpp ****         {
 1326              		.loc 16 57 32 discriminator 1 view .LVU340
 1327 00be 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1328 00c0 002B     		cmp	r3, #0
 1329 00c2 B2D1     		bne	.L57
  59:MyNewProject.cpp ****             delay.stopAll();
 1330              		.loc 16 59 13 is_stmt 1 view .LVU341
  59:MyNewProject.cpp ****             delay.stopAll();
 1331              		.loc 16 59 32 is_stmt 0 view .LVU342
 1332 00c4 0123     		movs	r3, #1
  60:MyNewProject.cpp ****         }
 1333              		.loc 16 60 26 view .LVU343
 1334 00c6 0848     		ldr	r0, .L69+4
  59:MyNewProject.cpp ****             delay.stopAll();
 1335              		.loc 16 59 32 view .LVU344
 1336 00c8 3B70     		strb	r3, [r7]
  60:MyNewProject.cpp ****         }
 1337              		.loc 16 60 13 is_stmt 1 view .LVU345
  60:MyNewProject.cpp ****         }
 1338              		.loc 16 60 26 is_stmt 0 view .LVU346
 1339 00ca FFF7FEFF 		bl	_ZN6Delayy7stopAllEv
 1340              	.LVL91:
  64:MyNewProject.cpp ****         {
 1341              		.loc 16 64 9 is_stmt 1 view .LVU347
 1342              	.LBB223:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 52


 1343              	.LBI223:
 1344              		.loc 4 79 17 view .LVU348
 1345              	.LBB224:
 1346              		.loc 4 79 35 view .LVU349
 1347              		.loc 4 79 35 is_stmt 0 view .LVU350
 1348              	.LBE224:
 1349              	.LBE223:
  64:MyNewProject.cpp ****         {
 1350              		.loc 16 64 33 view .LVU351
 1351 00ce 99F80A30 		ldrb	r3, [r9, #10]	@ zero_extendqisi2
 1352 00d2 FF2B     		cmp	r3, #255
 1353 00d4 A9D0     		beq	.L57
 1354 00d6 A4E7     		b	.L58
 1355              	.LVL92:
 1356              	.L68:
  64:MyNewProject.cpp ****         {
 1357              		.loc 16 64 33 view .LVU352
 1358              	.LBE227:
 1359              	.LBE229:
  91:MyNewProject.cpp **** 
 1360              		.loc 16 91 1 view .LVU353
 1361 00d8 03B0     		add	sp, sp, #12
 1362              		.cfi_def_cfa_offset 44
 1363              		@ sp needed
 1364 00da BDEC028B 		vldm	sp!, {d8}
 1365              		.cfi_restore 80
 1366              		.cfi_restore 81
 1367              		.cfi_def_cfa_offset 36
 1368              	.LVL93:
  91:MyNewProject.cpp **** 
 1369              		.loc 16 91 1 view .LVU354
 1370 00de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1371              	.LVL94:
 1372              	.L65:
 1373              		.cfi_def_cfa_offset 0
 1374              		.cfi_restore 4
 1375              		.cfi_restore 5
 1376              		.cfi_restore 6
 1377              		.cfi_restore 7
 1378              		.cfi_restore 8
 1379              		.cfi_restore 9
 1380              		.cfi_restore 10
 1381              		.cfi_restore 11
 1382              		.cfi_restore 14
  91:MyNewProject.cpp **** 
 1383              		.loc 16 91 1 view .LVU355
 1384 00e2 7047     		bx	lr
 1385              	.L70:
 1386              		.align	2
 1387              	.L69:
 1388 00e4 00000000 		.word	.LANCHOR14
 1389 00e8 00000000 		.word	delay
 1390 00ec 00000000 		.word	.LANCHOR13
 1391 00f0 00000000 		.word	.LANCHOR12
 1392 00f4 00000000 		.word	.LANCHOR8
 1393 00f8 00000000 		.word	.LANCHOR4
 1394 00fc 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 53


 1395 0100 00000000 		.word	.LANCHOR15
 1396              		.cfi_endproc
 1397              	.LFE4789:
 1399              		.section	.text.startup._GLOBAL__sub_I_delay,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv5-d16
 1407              	_GLOBAL__sub_I_delay:
 1408              	.LFB5367:
 1409              		.loc 16 268 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              	.LBB268:
 1414              	.LBI268:
 1415              		.loc 16 268 1 view .LVU357
 1416              	.LVL95:
 1417              		.loc 16 268 1 is_stmt 0 view .LVU358
 1418              	.LBE268:
 1419 0000 70B5     		push	{r4, r5, r6, lr}
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -16
 1422              		.cfi_offset 5, -12
 1423              		.cfi_offset 6, -8
 1424              		.cfi_offset 14, -4
 1425              	.LBB306:
 1426              	.LBB269:
  10:MyNewProject.cpp **** ToneFilter tone(48000.f);
 1427              		.loc 16 10 8 view .LVU359
 1428 0002 254D     		ldr	r5, .L73
 1429 0004 254C     		ldr	r4, .L73+4
  11:MyNewProject.cpp **** static Balance balance;
 1430              		.loc 16 11 24 view .LVU360
 1431 0006 264E     		ldr	r6, .L73+8
  10:MyNewProject.cpp **** ToneFilter tone(48000.f);
 1432              		.loc 16 10 8 view .LVU361
 1433 0008 2846     		mov	r0, r5
 1434 000a FFF7FEFF 		bl	_ZN6DelayyC1Ev
 1435              	.LVL96:
 1436 000e 2246     		mov	r2, r4
 1437 0010 2449     		ldr	r1, .L73+12
 1438 0012 2846     		mov	r0, r5
 1439 0014 FFF7FEFF 		bl	__aeabi_atexit
 1440              	.LVL97:
  11:MyNewProject.cpp **** static Balance balance;
 1441              		.loc 16 11 24 view .LVU362
 1442 0018 9FED230A 		vldr.32	s0, .L73+16
 1443 001c 3046     		mov	r0, r6
  14:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1444              		.loc 16 14 8 view .LVU363
 1445 001e 234D     		ldr	r5, .L73+20
  11:MyNewProject.cpp **** static Balance balance;
 1446              		.loc 16 11 24 view .LVU364
 1447 0020 FFF7FEFF 		bl	_ZN10ToneFilterC1Ef
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 54


 1448              	.LVL98:
  11:MyNewProject.cpp **** static Balance balance;
 1449              		.loc 16 11 12 view .LVU365
 1450 0024 2246     		mov	r2, r4
 1451 0026 2249     		ldr	r1, .L73+24
 1452 0028 3046     		mov	r0, r6
 1453 002a FFF7FEFF 		bl	__aeabi_atexit
 1454              	.LVL99:
 1455              	.LBB270:
 1456              	.LBI270:
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1457              		.loc 1 22 5 is_stmt 1 view .LVU366
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1458              		.loc 1 22 5 is_stmt 0 view .LVU367
 1459              	.LBE270:
  12:MyNewProject.cpp **** 
 1460              		.loc 16 12 16 view .LVU368
 1461 002e 2246     		mov	r2, r4
 1462 0030 2049     		ldr	r1, .L73+28
 1463 0032 2148     		ldr	r0, .L73+32
 1464 0034 FFF7FEFF 		bl	__aeabi_atexit
 1465              	.LVL100:
 1466              	.LBB271:
 1467              	.LBI271:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1468              		.loc 4 41 5 is_stmt 1 view .LVU369
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1469              		.loc 4 41 5 is_stmt 0 view .LVU370
 1470              	.LBE271:
  14:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1471              		.loc 16 14 8 view .LVU371
 1472 0038 2246     		mov	r2, r4
 1473 003a 2946     		mov	r1, r5
 1474 003c 1F48     		ldr	r0, .L73+36
 1475 003e FFF7FEFF 		bl	__aeabi_atexit
 1476              	.LVL101:
 1477              	.LBB272:
 1478              	.LBI272:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1479              		.loc 4 41 5 is_stmt 1 view .LVU372
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1480              		.loc 4 41 5 is_stmt 0 view .LVU373
 1481              	.LBE272:
  15:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
 1482              		.loc 16 15 8 view .LVU374
 1483 0042 2246     		mov	r2, r4
 1484 0044 2946     		mov	r1, r5
 1485 0046 1E48     		ldr	r0, .L73+40
 1486 0048 FFF7FEFF 		bl	__aeabi_atexit
 1487              	.LVL102:
  16:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1488              		.loc 16 16 22 is_stmt 1 view .LVU375
  16:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1489              		.loc 16 16 8 is_stmt 0 view .LVU376
 1490 004c 2246     		mov	r2, r4
 1491 004e 1D49     		ldr	r1, .L73+44
 1492 0050 0020     		movs	r0, #0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 55


 1493 0052 FFF7FEFF 		bl	__aeabi_atexit
 1494              	.LVL103:
 1495              	.LBB273:
 1496              	.LBI273:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1497              		.loc 7 21 5 is_stmt 1 view .LVU377
 1498              	.LBB274:
 1499              	.LBB275:
 1500              	.LBI275:
 1501              		.file 18 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 56


  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 57


 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 58


 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1502              		.loc 18 166 5 view .LVU378
 1503              	.LBB276:
 1504              	.LBB277:
 1505              		.loc 18 166 34 is_stmt 0 view .LVU379
 1506 0056 0025     		movs	r5, #0
 1507 0058 1B48     		ldr	r0, .L73+48
 1508              	.LBE277:
 1509              	.LBE276:
 1510              	.LBE275:
 1511              	.LBE274:
 1512              	.LBE273:
  17:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1513              		.loc 16 17 18 view .LVU380
 1514 005a 2246     		mov	r2, r4
 1515 005c 1B49     		ldr	r1, .L73+52
 1516              	.LBB291:
 1517              	.LBB290:
 1518              	.LBB280:
 1519              	.LBB279:
 1520              	.LBB278:
 1521              		.loc 18 166 34 view .LVU381
 1522 005e 0560     		str	r5, [r0]
 1523              	.LVL104:
 1524              		.loc 18 166 34 view .LVU382
 1525              	.LBE278:
 1526              	.LBE279:
 1527              	.LBE280:
 1528              	.LBB281:
 1529              	.LBI281:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1530              		.loc 11 95 5 is_stmt 1 view .LVU383
 1531              	.LBB282:
 1532              	.LBB283:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1533              		.loc 11 95 35 is_stmt 0 view .LVU384
 1534 0060 4561     		str	r5, [r0, #20]
 1535              	.LVL105:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1536              		.loc 11 95 35 view .LVU385
 1537              	.LBE283:
 1538              	.LBE282:
 1539              	.LBE281:
 1540              	.LBB284:
 1541              	.LBI284:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1542              		.loc 10 92 5 is_stmt 1 view .LVU386
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1543              		.loc 10 92 5 is_stmt 0 view .LVU387
 1544              	.LBE284:
 1545              	.LBB285:
 1546              	.LBI285:
 1547              		.file 19 "../../libDaisy//src/per/dac.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 59


   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 60


  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1548              		.loc 19 84 5 is_stmt 1 view .LVU388
 1549              	.LBB286:
 1550              	.LBB287:
 1551              		.loc 19 84 33 is_stmt 0 view .LVU389
 1552 0062 0562     		str	r5, [r0, #32]
 1553              	.LVL106:
 1554              		.loc 19 84 33 view .LVU390
 1555              	.LBE287:
 1556              	.LBE286:
 1557              	.LBE285:
 1558              	.LBB288:
 1559              	.LBI288:
  40:../../libDaisy//src/hid/usb.h **** 
 1560              		.loc 9 40 5 is_stmt 1 view .LVU391
  40:../../libDaisy//src/hid/usb.h **** 
 1561              		.loc 9 40 5 is_stmt 0 view .LVU392
 1562              	.LBE288:
 1563              	.LBB289:
 1564              	.LBI289:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1565              		.loc 8 77 5 is_stmt 1 view .LVU393
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1566              		.loc 8 77 5 is_stmt 0 view .LVU394
 1567              	.LBE289:
 1568              	.LBE290:
 1569              	.LBE291:
  17:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1570              		.loc 16 17 18 view .LVU395
 1571 0064 FFF7FEFF 		bl	__aeabi_atexit
 1572              	.LVL107:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 61


 1573              	.LBB292:
 1574              	.LBI292:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1575              		.loc 2 36 5 is_stmt 1 view .LVU396
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1576              		.loc 2 36 5 is_stmt 0 view .LVU397
 1577              	.LBE292:
  18:MyNewProject.cpp **** 
 1578              		.loc 16 18 18 view .LVU398
 1579 0068 2246     		mov	r2, r4
 1580 006a 1949     		ldr	r1, .L73+56
 1581 006c 1948     		ldr	r0, .L73+60
 1582 006e FFF7FEFF 		bl	__aeabi_atexit
 1583              	.LVL108:
 1584              	.LBB293:
 1585              	.LBI293:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1586              		.loc 3 97 5 is_stmt 1 view .LVU399
 1587              	.LBB294:
 1588              	.LBB295:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1589              		.loc 3 97 35 is_stmt 0 view .LVU400
 1590 0072 1948     		ldr	r0, .L73+64
 1591              	.LBE295:
 1592              	.LBE294:
 1593              	.LBE293:
  28:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1594              		.loc 16 28 13 view .LVU401
 1595 0074 2246     		mov	r2, r4
 1596 0076 1949     		ldr	r1, .L73+68
 1597              	.LBB298:
 1598              	.LBB297:
 1599              	.LBB296:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1600              		.loc 3 97 35 view .LVU402
 1601 0078 0560     		str	r5, [r0]
 1602              	.LVL109:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1603              		.loc 3 97 35 view .LVU403
 1604              	.LBE296:
 1605              	.LBE297:
 1606              	.LBE298:
  28:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1607              		.loc 16 28 13 view .LVU404
 1608 007a FFF7FEFF 		bl	__aeabi_atexit
 1609              	.LVL110:
 1610              	.LBB299:
 1611              	.LBI299:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1612              		.loc 5 25 5 is_stmt 1 view .LVU405
 1613              	.LBB300:
 1614              	.LBB301:
 1615              	.LBI301:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1616              		.loc 6 21 5 view .LVU406
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1617              		.loc 6 21 5 is_stmt 0 view .LVU407
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 62


 1618              	.LBE301:
 1619              	.LBE300:
 1620              	.LBE299:
  30:MyNewProject.cpp **** Parameter toneKnob;
 1621              		.loc 16 30 11 view .LVU408
 1622 007e 2246     		mov	r2, r4
 1623 0080 1749     		ldr	r1, .L73+72
 1624 0082 1848     		ldr	r0, .L73+76
 1625 0084 FFF7FEFF 		bl	__aeabi_atexit
 1626              	.LVL111:
 1627              	.LBB302:
 1628              	.LBI302:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1629              		.loc 5 25 5 is_stmt 1 view .LVU409
 1630              	.LBB303:
 1631              	.LBB304:
 1632              	.LBI304:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1633              		.loc 6 21 5 view .LVU410
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1634              		.loc 6 21 5 is_stmt 0 view .LVU411
 1635              	.LBE304:
 1636              	.LBE303:
 1637              	.LBE302:
  31:MyNewProject.cpp **** 
 1638              		.loc 16 31 11 view .LVU412
 1639 0088 2246     		mov	r2, r4
 1640 008a 1549     		ldr	r1, .L73+72
 1641 008c 1648     		ldr	r0, .L73+80
 1642              	.LBE269:
 1643              	.LBE306:
 1644              		.loc 16 268 1 view .LVU413
 1645 008e BDE87040 		pop	{r4, r5, r6, lr}
 1646              		.cfi_restore 14
 1647              		.cfi_restore 6
 1648              		.cfi_restore 5
 1649              		.cfi_restore 4
 1650              		.cfi_def_cfa_offset 0
 1651              	.LBB307:
 1652              	.LBB305:
  31:MyNewProject.cpp **** 
 1653              		.loc 16 31 11 view .LVU414
 1654 0092 FFF7FEBF 		b	__aeabi_atexit
 1655              	.LVL112:
 1656              	.L74:
 1657 0096 00BF     		.align	2
 1658              	.L73:
 1659 0098 00000000 		.word	delay
 1660 009c 00000000 		.word	__dso_handle
 1661 00a0 00000000 		.word	.LANCHOR13
 1662 00a4 00000000 		.word	_ZN6DelayyD1Ev
 1663 00a8 00803B47 		.word	1195081728
 1664 00ac 00000000 		.word	_ZN5daisy6SwitchD1Ev
 1665 00b0 00000000 		.word	_ZN10ToneFilterD1Ev
 1666 00b4 00000000 		.word	_ZN7daisysp7BalanceD1Ev
 1667 00b8 00000000 		.word	.LANCHOR12
 1668 00bc 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 63


 1669 00c0 00000000 		.word	.LANCHOR3
 1670 00c4 00000000 		.word	__tcf_0
 1671 00c8 00000000 		.word	.LANCHOR6
 1672 00cc 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1673 00d0 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 1674 00d4 00000000 		.word	.LANCHOR8
 1675 00d8 00000000 		.word	.LANCHOR0
 1676 00dc 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 1677 00e0 00000000 		.word	_ZN5daisy9ParameterD1Ev
 1678 00e4 00000000 		.word	.LANCHOR11
 1679 00e8 00000000 		.word	.LANCHOR9
 1680              	.LBE305:
 1681              	.LBE307:
 1682              		.cfi_endproc
 1683              	.LFE5367:
 1685              		.section	.init_array,"aw",%init_array
 1686              		.align	2
 1687 0000 00000000 		.word	_GLOBAL__sub_I_delay(target1)
 1688              		.global	toneKnob
 1689              		.global	feedbackKnob
 1690              		.global	configPtr
 1691              		.global	TIMER
 1692              		.global	TAPPING
 1693              		.global	BPM
 1694              		.global	onButtonWasPressed
 1695              		.global	drywet_ratio
 1696              		.global	MAX_FEEDBACK
 1697              		.global	headSwitches
 1698              		.global	TEMPO_BUTTON
 1699              		.global	ON_BUTTON
 1700              		.global	tone
 1701              		.global	delay
 1702              		.section	.bss.ON_BUTTON,"aw",%nobits
 1703              		.align	2
 1704              		.set	.LANCHOR7,. + 0
 1707              	ON_BUTTON:
 1708 0000 00000000 		.space	16
 1708      00000000 
 1708      00000000 
 1708      00000000 
 1709              		.section	.bss.TAPPING,"aw",%nobits
 1710              		.set	.LANCHOR1,. + 0
 1713              	TAPPING:
 1714 0000 00       		.space	1
 1715              		.section	.bss.TEMPO_BUTTON,"aw",%nobits
 1716              		.align	2
 1717              		.set	.LANCHOR3,. + 0
 1720              	TEMPO_BUTTON:
 1721 0000 00000000 		.space	16
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1722              		.section	.bss.TIMER,"aw",%nobits
 1723              		.align	2
 1724              		.set	.LANCHOR0,. + 0
 1727              	TIMER:
 1728 0000 00000000 		.space	4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 64


 1729              		.section	.bss._ZL2hw,"aw",%nobits
 1730              		.align	2
 1731              		.set	.LANCHOR6,. + 0
 1734              	_ZL2hw:
 1735 0000 00000000 		.space	60
 1735      00000000 
 1735      00000000 
 1735      00000000 
 1735      00000000 
 1736              		.section	.bss._ZL5cfade,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR8,. + 0
 1741              	_ZL5cfade:
 1742 0000 00000000 		.space	8
 1742      00000000 
 1743              		.section	.bss._ZL7balance,"aw",%nobits
 1744              		.align	2
 1745              		.set	.LANCHOR12,. + 0
 1748              	_ZL7balance:
 1749 0000 00000000 		.space	28
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1750              		.section	.bss.configPtr,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR2,. + 0
 1755              	configPtr:
 1756 0000 00000000 		.space	4
 1757              		.section	.bss.delay,"aw",%nobits
 1758              		.align	2
 1761              	delay:
 1762 0000 00000000 		.space	384120
 1762      00000000 
 1762      00000000 
 1762      00000000 
 1762      00000000 
 1763              		.section	.bss.feedbackKnob,"aw",%nobits
 1764              		.align	2
 1765              		.set	.LANCHOR11,. + 0
 1768              	feedbackKnob:
 1769 0000 00000000 		.space	56
 1769      00000000 
 1769      00000000 
 1769      00000000 
 1769      00000000 
 1770              		.section	.bss.headSwitches,"aw",%nobits
 1771              		.align	2
 1772              		.set	.LANCHOR5,. + 0
 1775              	headSwitches:
 1776 0000 00000000 		.space	64
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1777              		.section	.bss.onButtonWasPressed,"aw",%nobits
 1778              		.set	.LANCHOR14,. + 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 65


 1781              	onButtonWasPressed:
 1782 0000 00       		.space	1
 1783              		.section	.bss.tone,"aw",%nobits
 1784              		.align	2
 1785              		.set	.LANCHOR13,. + 0
 1788              	tone:
 1789 0000 00000000 		.space	56
 1789      00000000 
 1789      00000000 
 1789      00000000 
 1789      00000000 
 1790              		.section	.bss.toneKnob,"aw",%nobits
 1791              		.align	2
 1792              		.set	.LANCHOR9,. + 0
 1795              	toneKnob:
 1796 0000 00000000 		.space	56
 1796      00000000 
 1796      00000000 
 1796      00000000 
 1796      00000000 
 1797              		.section	.data.BPM,"aw"
 1798              		.align	2
 1799              		.set	.LANCHOR4,. + 0
 1802              	BPM:
 1803 0000 0000A041 		.word	1101004800
 1804              		.section	.data.MAX_FEEDBACK,"aw"
 1805              		.align	2
 1806              		.set	.LANCHOR10,. + 0
 1809              	MAX_FEEDBACK:
 1810 0000 CDCC8C3F 		.word	1066192077
 1811              		.section	.data.drywet_ratio,"aw"
 1812              		.align	2
 1813              		.set	.LANCHOR15,. + 0
 1816              	drywet_ratio:
 1817 0000 0000003F 		.word	1056964608
 1818              		.text
 1819              	.Letext0:
 1820              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1821              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1822              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1823              		.file 23 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1824              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1825              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1826              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1827              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1828              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1829              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1830              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1831              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1832              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1833              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1834              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1835              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1836              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1837              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1838              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1839              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 66


 1840              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1841              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1842              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1843              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1844              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1845              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1846              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1847              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1848              		.file 48 "../../DaisySP//Source/Control/adenv.h"
 1849              		.file 49 "../../DaisySP//Source/Utility/dsp.h"
 1850              		.file 50 "../../DaisySP//Source/Utility/delayline.h"
 1851              		.file 51 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1852              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1853              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1854              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1855              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1856              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1857              		.file 57 "../../libDaisy//src/per/sai.h"
 1858              		.file 58 "../../libDaisy//src/hid/logger_impl.h"
 1859              		.file 59 "../../libDaisy//src/util/wav_format.h"
 1860              		.file 60 "../../libDaisy//src/dev/max11300.h"
 1861              		.file 61 "../../libDaisy//src/hid/logger.h"
 1862              		.file 62 "../../libDaisy//src/per/gpio.h"
 1863              		.file 63 "../../libDaisy//src/dev/sdram.h"
 1864              		.file 64 "../../libDaisy//src/dev/sr_595.h"
 1865              		.file 65 "<built-in>"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 MyNewProject.cpp
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:17     .text._ZN7daisysp7BalanceD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:43     .text._ZN7daisysp9CrossFadeD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:68     .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:93     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:118    .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:149    .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:198    .text._ZN6DelayyD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:206    .text._ZN6DelayyD2Ev:00000000 _ZN6DelayyD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:206    .text._ZN6DelayyD2Ev:00000000 _ZN6DelayyD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:223    .text._ZN10ToneFilterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:231    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD2Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:231    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD1Ev
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:260    .text.__tcf_0:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:267    .text.__tcf_0:00000000 __tcf_0
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:281    .text._Z10CheckTempov:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:289    .text._Z10CheckTempov:00000000 _Z10CheckTempov
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:481    .text._Z10CheckTempov:000000c8 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:493    .text._Z15InitHeadButtonsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:501    .text._Z15InitHeadButtonsv:00000000 _Z15InitHeadButtonsv
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:560    .text._Z15InitHeadButtonsv:00000030 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:566    .text.startup.main:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:574    .text.startup.main:00000000 main
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:949    .text.startup.main:00000194 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1126   .text._ZL13AudioCallbackPKPKfPPfj:00000000 _ZL13AudioCallbackPKPKfPPfj
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:969    .rodata._Z15ProcessControlsv.str1.4:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:973    .text._Z15ProcessControlsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:981    .text._Z15ProcessControlsv:00000000 _Z15ProcessControlsv
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1109   .text._Z15ProcessControlsv:00000078 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1761   .bss.delay:00000000 delay
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1119   .text._ZL13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1388   .text._ZL13AudioCallbackPKPKfPPfj:000000e4 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1400   .text.startup._GLOBAL__sub_I_delay:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1407   .text.startup._GLOBAL__sub_I_delay:00000000 _GLOBAL__sub_I_delay
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1659   .text.startup._GLOBAL__sub_I_delay:00000098 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1686   .init_array:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1795   .bss.toneKnob:00000000 toneKnob
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1768   .bss.feedbackKnob:00000000 feedbackKnob
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1755   .bss.configPtr:00000000 configPtr
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1727   .bss.TIMER:00000000 TIMER
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1713   .bss.TAPPING:00000000 TAPPING
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1802   .data.BPM:00000000 BPM
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1781   .bss.onButtonWasPressed:00000000 onButtonWasPressed
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1816   .data.drywet_ratio:00000000 drywet_ratio
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 68


C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1809   .data.MAX_FEEDBACK:00000000 MAX_FEEDBACK
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1775   .bss.headSwitches:00000000 headSwitches
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1720   .bss.TEMPO_BUTTON:00000000 TEMPO_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1707   .bss.ON_BUTTON:00000000 ON_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1788   .bss.tone:00000000 tone
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1703   .bss.ON_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1714   .bss.TAPPING:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1716   .bss.TEMPO_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1723   .bss.TIMER:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1730   .bss._ZL2hw:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1734   .bss._ZL2hw:00000000 _ZL2hw
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1737   .bss._ZL5cfade:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1741   .bss._ZL5cfade:00000000 _ZL5cfade
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1744   .bss._ZL7balance:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1748   .bss._ZL7balance:00000000 _ZL7balance
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1751   .bss.configPtr:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1758   .bss.delay:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1764   .bss.feedbackKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1771   .bss.headSwitches:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1782   .bss.onButtonWasPressed:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1784   .bss.tone:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1791   .bss.toneKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1798   .data.BPM:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1805   .data.MAX_FEEDBACK:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s:1812   .data.drywet_ratio:00000000 $d
                           .group:00000000 _ZN7daisysp7BalanceD5Ev
                           .group:00000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN6DelayyD5Ev
                           .group:00000000 _ZN10ToneFilterD5Ev

UNDEFINED SYMBOLS
_ZN5daisy11TimerHandle7GetTickEv
_ZN5daisy11TimerHandle7GetFreqEv
_ZN5daisy6Switch8DebounceEv
_ZN5daisy11TimerHandle4StopEv
_ZN5daisy11TimerHandle6DeInitEv
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle5StartEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZNK5daisy9AdcHandle6GetPtrEh
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy13AnalogControl4InitEPtfbbf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN7daisysp7Balance4InitEf
_ZN5daisy9AdcHandle5StartEv
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccwG3X5H.s 			page 69


_ZN5daisy6System5DelayEm
_ZN5daisy9Parameter7ProcessEv
_ZN6Delayy11setFeedbackERKf
_ZN10ToneFilter7setFreqEf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN6Delayy10toggleHeadERKi
_ZN6Delayy7processEf
_ZN10ToneFilter7processEf
_ZN7daisysp7Balance7ProcessEff
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN6Delayy6setBPMERKi
_ZN6Delayy7stopAllEv
_ZN6DelayyC1Ev
__aeabi_atexit
_ZN10ToneFilterC1Ef
__dso_handle
