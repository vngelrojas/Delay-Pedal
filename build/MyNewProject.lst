ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MyNewProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp7BalanceD2Ev,"axG",%progbits,_ZN7daisysp7BalanceD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp7BalanceD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp7BalanceD2Ev:
  27              	.LVL0:
  28              	.LFB2920:
  29              		.file 1 "../../DaisySP//Source/Dynamics/balance.h"
   1:../../DaisySP//Source/Dynamics/balance.h **** 
   2:../../DaisySP//Source/Dynamics/balance.h **** #pragma once
   3:../../DaisySP//Source/Dynamics/balance.h **** #ifndef DSY_BALANCE_H
   4:../../DaisySP//Source/Dynamics/balance.h **** #define DSY_BALANCE_H
   5:../../DaisySP//Source/Dynamics/balance.h **** 
   6:../../DaisySP//Source/Dynamics/balance.h **** #include <stdint.h>
   7:../../DaisySP//Source/Dynamics/balance.h **** #ifdef __cplusplus
   8:../../DaisySP//Source/Dynamics/balance.h **** 
   9:../../DaisySP//Source/Dynamics/balance.h **** namespace daisysp
  10:../../DaisySP//Source/Dynamics/balance.h **** {
  11:../../DaisySP//Source/Dynamics/balance.h **** /** Balances two sound sources. Sig is boosted to the level of comp.
  12:../../DaisySP//Source/Dynamics/balance.h **** 
  13:../../DaisySP//Source/Dynamics/balance.h ****     *Original author(s) : Barry Vercoe, john ffitch, Gabriel Maldonado
  14:../../DaisySP//Source/Dynamics/balance.h **** 
  15:../../DaisySP//Source/Dynamics/balance.h ****     *Year: 1991
  16:../../DaisySP//Source/Dynamics/balance.h **** 
  17:../../DaisySP//Source/Dynamics/balance.h ****     *Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Dynamics/balance.h **** */
  19:../../DaisySP//Source/Dynamics/balance.h **** class Balance
  20:../../DaisySP//Source/Dynamics/balance.h **** {
  21:../../DaisySP//Source/Dynamics/balance.h ****   public:
  22:../../DaisySP//Source/Dynamics/balance.h ****     Balance() {}
  23:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
  30              		.loc 1 23 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 23 17 is_stmt 0 view .LVU1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 2


  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE2920:
  40              		.weak	_ZN7daisysp7BalanceD1Ev
  41              		.thumb_set _ZN7daisysp7BalanceD1Ev,_ZN7daisysp7BalanceD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp9CrossFadeD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN7daisysp9CrossFadeD2Ev:
  52              	.LVL1:
  53              	.LFB2952:
  54              		.file 2 "../../DaisySP//Source/Dynamics/crossfade.h"
   1:../../DaisySP//Source/Dynamics/crossfade.h **** #pragma once
   2:../../DaisySP//Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../../DaisySP//Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../../DaisySP//Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../../DaisySP//Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../../DaisySP//Source/Dynamics/crossfade.h **** 
   7:../../DaisySP//Source/Dynamics/crossfade.h **** namespace daisysp
   8:../../DaisySP//Source/Dynamics/crossfade.h **** {
   9:../../DaisySP//Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../../DaisySP//Source/Dynamics/crossfade.h **** - LIN = linear
  11:../../DaisySP//Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../../DaisySP//Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../../DaisySP//Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../../DaisySP//Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../../DaisySP//Source/Dynamics/crossfade.h **** */
  16:../../DaisySP//Source/Dynamics/crossfade.h **** enum
  17:../../DaisySP//Source/Dynamics/crossfade.h **** {
  18:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../../DaisySP//Source/Dynamics/crossfade.h **** };
  24:../../DaisySP//Source/Dynamics/crossfade.h **** 
  25:../../DaisySP//Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../../DaisySP//Source/Dynamics/crossfade.h **** 
  27:../../DaisySP//Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../../DaisySP//Source/Dynamics/crossfade.h **** 
  29:../../DaisySP//Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../../DaisySP//Source/Dynamics/crossfade.h **** 
  31:../../DaisySP//Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../../DaisySP//Source/Dynamics/crossfade.h **** */
  33:../../DaisySP//Source/Dynamics/crossfade.h **** class CrossFade
  34:../../DaisySP//Source/Dynamics/crossfade.h **** {
  35:../../DaisySP//Source/Dynamics/crossfade.h ****   public:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  55              		.loc 2 37 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 3


  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 37 19 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE2952:
  65              		.weak	_ZN7daisysp9CrossFadeD1Ev
  66              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
  67              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy11TimerHandleD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy11TimerHandleD2Ev:
  77              	.LVL2:
  78              	.LFB3673:
  79              		.file 3 "../../libDaisy//src/per/tim.h"
   1:../../libDaisy//src/per/tim.h **** #pragma once
   2:../../libDaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy//src/per/tim.h **** 
   5:../../libDaisy//src/per/tim.h **** #include <cstdint>
   6:../../libDaisy//src/per/tim.h **** 
   7:../../libDaisy//src/per/tim.h **** namespace daisy
   8:../../libDaisy//src/per/tim.h **** {
   9:../../libDaisy//src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy//src/per/tim.h ****  ** 
  11:../../libDaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy//src/per/tim.h ****  **
  14:../../libDaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy//src/per/tim.h ****  **
  18:../../libDaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy//src/per/tim.h ****  **
  23:../../libDaisy//src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy//src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy//src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy//src/per/tim.h ****  **
  27:../../libDaisy//src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy//src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy//src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy//src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy//src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../../libDaisy//src/per/tim.h ****  ** @todo HRTIM
  35:../../libDaisy//src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy//src/per/tim.h ****  ** */
  37:../../libDaisy//src/per/tim.h **** class TimerHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 4


  38:../../libDaisy//src/per/tim.h **** {
  39:../../libDaisy//src/per/tim.h ****   public:
  40:../../libDaisy//src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy//src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy//src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy//src/per/tim.h ****      */
  44:../../libDaisy//src/per/tim.h ****     struct Config
  45:../../libDaisy//src/per/tim.h ****     {
  46:../../libDaisy//src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy//src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy//src/per/tim.h ****         {
  49:../../libDaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy//src/per/tim.h ****         };
  54:../../libDaisy//src/per/tim.h **** 
  55:../../libDaisy//src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy//src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy//src/per/tim.h ****          ** */
  59:../../libDaisy//src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy//src/per/tim.h ****         {
  61:../../libDaisy//src/per/tim.h ****             UP = 0,
  62:../../libDaisy//src/per/tim.h ****             DOWN,
  63:../../libDaisy//src/per/tim.h ****         };
  64:../../libDaisy//src/per/tim.h **** 
  65:../../libDaisy//src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy//src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy//src/per/tim.h **** 
  68:../../libDaisy//src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy//src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy//src/per/tim.h ****         */
  71:../../libDaisy//src/per/tim.h ****         uint32_t period;
  72:../../libDaisy//src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy//src/per/tim.h **** 
  74:../../libDaisy//src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy//src/per/tim.h ****         Config()
  76:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../../libDaisy//src/per/tim.h ****           dir(CounterDir::UP),
  78:../../libDaisy//src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy//src/per/tim.h ****           enable_irq(false)
  80:../../libDaisy//src/per/tim.h ****         {
  81:../../libDaisy//src/per/tim.h ****         }
  82:../../libDaisy//src/per/tim.h ****     };
  83:../../libDaisy//src/per/tim.h **** 
  84:../../libDaisy//src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy//src/per/tim.h ****     enum class Result
  86:../../libDaisy//src/per/tim.h ****     {
  87:../../libDaisy//src/per/tim.h ****         OK,
  88:../../libDaisy//src/per/tim.h ****         ERR,
  89:../../libDaisy//src/per/tim.h ****     };
  90:../../libDaisy//src/per/tim.h **** 
  91:../../libDaisy//src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy//src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy//src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy//src/per/tim.h ****     */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 5


  95:../../libDaisy//src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../../libDaisy//src/per/tim.h **** 
  97:../../libDaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy//src/per/tim.h ****     ~TimerHandle() {}
  80              		.loc 3 100 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 100 21 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE3673:
  90              		.weak	_ZN5daisy11TimerHandleD1Ev
  91              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
  92              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy6SwitchD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy6SwitchD2Ev:
 102              	.LVL3:
 103              	.LFB3866:
 104              		.file 4 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 6


  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 105              		.loc 4 42 5 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              		.loc 4 42 16 is_stmt 0 view .LVU7
 111 0000 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE3866:
 115              		.weak	_ZN5daisy6SwitchD1Ev
 116              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
 117              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
 118              		.align	1
 119              		.p2align 2,,3
 120              		.weak	_ZN5daisy9ParameterD2Ev
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	_ZN5daisy9ParameterD2Ev:
 127              	.LVL4:
 128              	.LFB3915:
 129              		.file 5 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 7


  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
 130              		.loc 5 27 5 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LBB183:
 136              	.LBI183:
 137              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
 138              		.loc 6 23 5 view .LVU9
 139              		.loc 6 23 5 is_stmt 0 view .LVU10
 140              	.LBE183:
 141              		.loc 5 27 19 view .LVU11
 142 0000 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE3915:
 146              		.weak	_ZN5daisy9ParameterD1Ev
 147              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
 148 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 149              		.align	1
 150              		.p2align 2,,3
 151              		.weak	_ZN5daisy9DaisySeedD2Ev
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-d16
 157              	_ZN5daisy9DaisySeedD2Ev:
 158              	.LVL5:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 8


 159              	.LFB4783:
 160              		.file 7 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 161              		.loc 7 22 5 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LBB184:
 167              	.LBI184:
 168              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 9


  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 169              		.loc 8 78 5 view .LVU13
 170              		.loc 8 78 5 is_stmt 0 view .LVU14
 171              	.LBE184:
 172              	.LBB185:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 10


 173              	.LBI185:
 174              		.file 9 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 175              		.loc 9 42 5 is_stmt 1 view .LVU15
 176              		.loc 9 42 5 is_stmt 0 view .LVU16
 177              	.LBE185:
 178              	.LBB186:
 179              	.LBI186:
 180              		.file 10 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 11


   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 12


  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 181              		.loc 10 93 5 is_stmt 1 view .LVU17
 182              		.loc 10 93 5 is_stmt 0 view .LVU18
 183              	.LBE186:
 184              	.LBB187:
 185              	.LBI187:
 186              		.file 11 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 13


  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 14


  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 187              		.loc 11 96 5 is_stmt 1 view .LVU19
 188              		.loc 11 96 5 is_stmt 0 view .LVU20
 189              	.LBE187:
 190              		.loc 7 22 19 view .LVU21
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE4783:
 195              		.weak	_ZN5daisy9DaisySeedD1Ev
 196              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 197 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 198              		.align	1
 199              		.p2align 2,,3
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv5-d16
 205              	__tcf_0:
 206              	.LFB5374:
 207              		.file 12 "MyNewProject.cpp"
   1:MyNewProject.cpp **** #include "Delay.h"
   2:MyNewProject.cpp **** #include "ToneFilter.h"
   3:MyNewProject.cpp **** #include "TapTempo.h"
   4:MyNewProject.cpp **** 
   5:MyNewProject.cpp **** using namespace daisysp;
   6:MyNewProject.cpp **** using namespace daisy;
   7:MyNewProject.cpp **** using namespace daisy::seed;
   8:MyNewProject.cpp **** 
   9:MyNewProject.cpp **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delayMems[4];
 208              		.loc 12 9 43 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              		.loc 12 9 43 is_stmt 0 view .LVU23
 214 0000 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE5374:
 218 0002 00BF     		.section	.text._ZN10ToneFilterD2Ev,"axG",%progbits,_ZN10ToneFilterD5Ev,comdat
 219              		.align	1
 220              		.p2align 2,,3
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 15


 221              		.weak	_ZN10ToneFilterD2Ev
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv5-d16
 227              	_ZN10ToneFilterD2Ev:
 228              	.LVL6:
 229              	.LFB5376:
 230              		.file 13 "ToneFilter.h"
   1:ToneFilter.h  **** #pragma once
   2:ToneFilter.h  **** #include "daisysp.h"
   3:ToneFilter.h  **** #include "daisy_seed.h"
   4:ToneFilter.h  **** 
   5:ToneFilter.h  **** using namespace daisysp;
   6:ToneFilter.h  **** using namespace daisy;
   7:ToneFilter.h  **** using namespace daisy::seed;
   8:ToneFilter.h  **** 
   9:ToneFilter.h  **** class ToneFilter
 231              		.loc 13 9 7 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LBB189:
 237              	.LBI189:
 238              		.file 14 "../../DaisySP//Source/Filters/atone.h"
   1:../../DaisySP//Source/Filters/atone.h **** #pragma once
   2:../../DaisySP//Source/Filters/atone.h **** #ifndef DSY_ATONE_H
   3:../../DaisySP//Source/Filters/atone.h **** #define DSY_ATONE_H
   4:../../DaisySP//Source/Filters/atone.h **** 
   5:../../DaisySP//Source/Filters/atone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/atone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/atone.h **** 
   8:../../DaisySP//Source/Filters/atone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/atone.h **** {
  10:../../DaisySP//Source/Filters/atone.h **** /** A first-order recursive high-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/atone.h ****      Original Author(s): Barry Vercoe, John FFitch, Gabriel Maldonado
  12:../../DaisySP//Source/Filters/atone.h **** 
  13:../../DaisySP//Source/Filters/atone.h ****      Year: 1991
  14:../../DaisySP//Source/Filters/atone.h **** 
  15:../../DaisySP//Source/Filters/atone.h ****      Original Location: Csound -- OOps/ugens5.c
  16:../../DaisySP//Source/Filters/atone.h **** 
  17:../../DaisySP//Source/Filters/atone.h ****      Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Filters/atone.h ****     */
  19:../../DaisySP//Source/Filters/atone.h **** class ATone
  20:../../DaisySP//Source/Filters/atone.h **** {
  21:../../DaisySP//Source/Filters/atone.h ****   public:
  22:../../DaisySP//Source/Filters/atone.h ****     ATone() {}
  23:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
 239              		.loc 14 23 5 view .LVU25
 240              		.loc 14 23 5 is_stmt 0 view .LVU26
 241              	.LBE189:
 242              	.LBB190:
 243              	.LBI190:
 244              		.file 15 "../../DaisySP//Source/Filters/tone.h"
   1:../../DaisySP//Source/Filters/tone.h **** #pragma once
   2:../../DaisySP//Source/Filters/tone.h **** #ifndef DSY_TONE_H
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 16


   3:../../DaisySP//Source/Filters/tone.h **** #define DSY_TONE_H
   4:../../DaisySP//Source/Filters/tone.h **** 
   5:../../DaisySP//Source/Filters/tone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/tone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/tone.h **** 
   8:../../DaisySP//Source/Filters/tone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/tone.h **** {
  10:../../DaisySP//Source/Filters/tone.h **** /** A first-order recursive low-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/tone.h **** */
  12:../../DaisySP//Source/Filters/tone.h **** class Tone
  13:../../DaisySP//Source/Filters/tone.h **** {
  14:../../DaisySP//Source/Filters/tone.h ****   public:
  15:../../DaisySP//Source/Filters/tone.h ****     Tone() {}
  16:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 245              		.loc 15 16 5 is_stmt 1 view .LVU27
 246              		.loc 15 16 5 is_stmt 0 view .LVU28
 247              	.LBE190:
 248              		.loc 13 9 7 view .LVU29
 249 0000 7047     		bx	lr
 250              		.cfi_endproc
 251              	.LFE5376:
 253              		.weak	_ZN10ToneFilterD1Ev
 254              		.thumb_set _ZN10ToneFilterD1Ev,_ZN10ToneFilterD2Ev
 255 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 256              		.align	1
 257              		.p2align 2,,3
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv5-d16
 263              	__tcf_1:
 264              	.LFB5384:
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE5384:
 273 0002 00BF     		.section	.text._Z10CheckTempov,"ax",%progbits
 274              		.align	1
 275              		.p2align 2,,3
 276              		.global	_Z10CheckTempov
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv5-d16
 282              	_Z10CheckTempov:
 283              	.LFB4802:
  10:MyNewProject.cpp **** 
  11:MyNewProject.cpp **** Delayy delay;
  12:MyNewProject.cpp **** ToneFilter tone(48000.f);
  13:MyNewProject.cpp **** static Balance balance;
  14:MyNewProject.cpp **** TapTempo tapTempo;
  15:MyNewProject.cpp **** 
  16:MyNewProject.cpp **** Switch ON_BUTTON;                 // The on/off button
  17:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 17


  18:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
  19:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
  20:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
  21:MyNewProject.cpp **** 
  22:MyNewProject.cpp **** 
  23:MyNewProject.cpp **** float MAX_FEEDBACK = 1.1f;        // Max value of feedback knob, maxFeedback=1 -> forever repeats b
  24:MyNewProject.cpp **** float drywet_ratio = 0.5f;        // Drywet_ratio=0.0 is effect off
  25:MyNewProject.cpp **** const float MAX_DELAY_SEC = 3.0f; // Max amount of seconds allowed to get 20 bpm
  26:MyNewProject.cpp **** const float MIN_DELAY_SEC = 0.6f; // Min amount of seconds allowed to get 100 bpm
  27:MyNewProject.cpp **** bool onButtonWasPressed = false;  // Flag for turning on/off delays, replace with onButton.risingEd
  28:MyNewProject.cpp **** volatile float BPM = 20.0f;       // The BPM of delays
  29:MyNewProject.cpp **** volatile bool TAPPING = false;    // True when user is TAPPING
  30:MyNewProject.cpp **** TimerHandle TIMER;                // Timer that will be used to calculate bpm
  31:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
  32:MyNewProject.cpp **** Parameter feedbackKnob;
  33:MyNewProject.cpp **** Parameter toneKnob;
  34:MyNewProject.cpp **** 
  35:MyNewProject.cpp **** // Sets the delays when there is a change
  36:MyNewProject.cpp **** void CheckTempo();
  37:MyNewProject.cpp **** // Initialize buttons for the delay heads to the pins we want
  38:MyNewProject.cpp **** void InitHeadButtons();
  39:MyNewProject.cpp **** // Processes the controls and updates values that changed
  40:MyNewProject.cpp **** void ProcessControls();
  41:MyNewProject.cpp **** // Will point the delay heads in class to the global delay lines
  42:MyNewProject.cpp **** void initDelay();
  43:MyNewProject.cpp **** 
  44:MyNewProject.cpp **** static void AudioCallback(AudioHandle::InputBuffer  in,
  45:MyNewProject.cpp ****                           AudioHandle::OutputBuffer out,
  46:MyNewProject.cpp ****                           size_t                    size)
  47:MyNewProject.cpp **** {
  48:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
  49:MyNewProject.cpp ****     {
  50:MyNewProject.cpp ****         // 
  51:MyNewProject.cpp ****         ProcessControls();
  52:MyNewProject.cpp ****         // Check for tempo change
  53:MyNewProject.cpp ****         CheckTempo();
  54:MyNewProject.cpp ****         // Set delays with new bpm
  55:MyNewProject.cpp ****         delay.setBPM(tapTempo.getBPM());       
  56:MyNewProject.cpp **** 
  57:MyNewProject.cpp **** 
  58:MyNewProject.cpp ****         ON_BUTTON.Debounce();
  59:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
  60:MyNewProject.cpp ****         if(ON_BUTTON.Pressed() && !onButtonWasPressed)
  61:MyNewProject.cpp ****         {
  62:MyNewProject.cpp ****             onButtonWasPressed = true; // set the flag to indicate that the button was pressed
  63:MyNewProject.cpp ****             delay.stopAll();
  64:MyNewProject.cpp ****             hw.PrintLine("BPM is %f",tapTempo.getBPM());
  65:MyNewProject.cpp ****         }
  66:MyNewProject.cpp **** 
  67:MyNewProject.cpp ****         // Check if the button was released
  68:MyNewProject.cpp ****         if(!ON_BUTTON.Pressed() && onButtonWasPressed)
  69:MyNewProject.cpp ****         {
  70:MyNewProject.cpp ****             onButtonWasPressed = false; // reset the flag
  71:MyNewProject.cpp ****         }
  72:MyNewProject.cpp **** 
  73:MyNewProject.cpp ****         float final_mix = 0;         // The final float value that will be outputted
  74:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 18


  75:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
  76:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
  77:MyNewProject.cpp **** 
  78:MyNewProject.cpp ****     
  79:MyNewProject.cpp **** 
  80:MyNewProject.cpp ****         all_delay_signals = delay.process(in[0][i]);
  81:MyNewProject.cpp ****         float preFilter = all_delay_signals;
  82:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
  83:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
  84:MyNewProject.cpp **** 
  85:MyNewProject.cpp **** 
  86:MyNewProject.cpp **** 
  87:MyNewProject.cpp **** 
  88:MyNewProject.cpp ****         nonConstInput = in[0][i];
  89:MyNewProject.cpp **** 
  90:MyNewProject.cpp **** 		// Use a crossfade object to maintain a constant power while mixing the delayed/raw audio mix
  91:MyNewProject.cpp **** 		cfade.SetPos(drywet_ratio);
  92:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
  93:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
  94:MyNewProject.cpp ****     }
  95:MyNewProject.cpp **** }
  96:MyNewProject.cpp **** 
  97:MyNewProject.cpp **** int main(void)
  98:MyNewProject.cpp **** {
  99:MyNewProject.cpp ****     // Initialize seed hardware.
 100:MyNewProject.cpp ****     hw.Init();
 101:MyNewProject.cpp **** 
 102:MyNewProject.cpp ****     // Setting up serial and printing
 103:MyNewProject.cpp ****     hw.StartLog();
 104:MyNewProject.cpp **** 
 105:MyNewProject.cpp ****     // Initialize the button to D28, Pin 35 to be the on/off button
 106:MyNewProject.cpp ****     ON_BUTTON.Init(hw.GetPin(28),1000);
 107:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 108:MyNewProject.cpp ****     TEMPO_BUTTON.Init(hw.GetPin(25),1000);
 109:MyNewProject.cpp ****     // Init the head on/off buttons
 110:MyNewProject.cpp ****     InitHeadButtons();
 111:MyNewProject.cpp **** 
 112:MyNewProject.cpp **** 
 113:MyNewProject.cpp ****     //set blocksize.
 114:MyNewProject.cpp ****     hw.SetAudioBlockSize(4);
 115:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 116:MyNewProject.cpp **** 
 117:MyNewProject.cpp ****     // Set params for CrossFade object
 118:MyNewProject.cpp ****     cfade.Init();
 119:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 120:MyNewProject.cpp ****     cfade.SetCurve(CROSSFADE_CPOW);
 121:MyNewProject.cpp **** 
 122:MyNewProject.cpp ****     // Start callback
 123:MyNewProject.cpp ****     hw.StartAudio(AudioCallback);
 124:MyNewProject.cpp **** 
 125:MyNewProject.cpp ****     //TIMER****************************************************************************************
 126:MyNewProject.cpp ****     TimerHandle::Config config;                             // Config for the timer
 127:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 128:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 129:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 130:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 131:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 19


 132:MyNewProject.cpp ****     // Init the timer with our config
 133:MyNewProject.cpp ****     TIMER.Init(config);
 134:MyNewProject.cpp ****     // Make sure the timer is off
 135:MyNewProject.cpp ****     TIMER.Stop();
 136:MyNewProject.cpp ****     //*********************************************************************************************
 137:MyNewProject.cpp **** 
 138:MyNewProject.cpp **** 
 139:MyNewProject.cpp ****     //KNOB INIT************************************************************************
 140:MyNewProject.cpp ****     AdcChannelConfig fbkConfig;
 141:MyNewProject.cpp ****     fbkConfig.InitSingle(A0);
 142:MyNewProject.cpp ****     AdcChannelConfig toneConfig;
 143:MyNewProject.cpp ****     toneConfig.InitSingle(A1);
 144:MyNewProject.cpp **** 
 145:MyNewProject.cpp ****     // If adding more knobs, create config above, and update  array and # of configs
 146:MyNewProject.cpp ****     AdcChannelConfig configs [2] = {fbkConfig,toneConfig};
 147:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 148:MyNewProject.cpp **** 
 149:MyNewProject.cpp ****     AnalogControl fbk;
 150:MyNewProject.cpp ****     fbk.Init(hw.adc.GetPtr(0),hw.AudioSampleRate());
 151:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 152:MyNewProject.cpp **** 
 153:MyNewProject.cpp ****     AnalogControl tne;
 154:MyNewProject.cpp ****     tne.Init(hw.adc.GetPtr(1),hw.AudioSampleRate());
 155:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 156:MyNewProject.cpp **** 
 157:MyNewProject.cpp **** 
 158:MyNewProject.cpp ****     //*******************************************************************************
 159:MyNewProject.cpp **** 
 160:MyNewProject.cpp **** 
 161:MyNewProject.cpp ****     balance.Init(48000);
 162:MyNewProject.cpp ****     hw.adc.Start();
 163:MyNewProject.cpp **** 
 164:MyNewProject.cpp ****     initDelay();
 165:MyNewProject.cpp ****     
 166:MyNewProject.cpp ****     
 167:MyNewProject.cpp **** 
 168:MyNewProject.cpp ****     //delayMems[1].Init();
 169:MyNewProject.cpp **** 
 170:MyNewProject.cpp ****     while(1) 
 171:MyNewProject.cpp ****     {
 172:MyNewProject.cpp ****         //Not sure why the delay, taken from the Daisy petal MultiDelay.cpp example
 173:MyNewProject.cpp ****         System::Delay(6);
 174:MyNewProject.cpp **** 
 175:MyNewProject.cpp ****     }
 176:MyNewProject.cpp **** }
 177:MyNewProject.cpp **** 
 178:MyNewProject.cpp **** void CheckTempo()
 179:MyNewProject.cpp **** {
 284              		.loc 12 179 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 180:MyNewProject.cpp ****     
 181:MyNewProject.cpp **** 
 182:MyNewProject.cpp ****     // uint32_t tick;    // The position of the counter when the second tap occurs
 183:MyNewProject.cpp ****     // uint32_t freq;    // The frequency of each tick of the timer in Hz.
 184:MyNewProject.cpp ****     // float seconds;    // The seconds elapsed between first and second tap
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 20


 185:MyNewProject.cpp **** 
 186:MyNewProject.cpp **** 
 187:MyNewProject.cpp ****     // tick = TIMER.GetTick();            
 188:MyNewProject.cpp ****     // freq = TIMER.GetFreq();    
 189:MyNewProject.cpp ****     // seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by docu
 190:MyNewProject.cpp **** 
 191:MyNewProject.cpp ****     // //Check if the timer has gone past our max delay, if so, abandon this tap tempo and keep the
 192:MyNewProject.cpp ****     // if(seconds > MAX_DELAY_SEC && TAPPING)
 193:MyNewProject.cpp ****     // {
 194:MyNewProject.cpp ****     //     //hw.PrintLine("Over 3 sec");
 195:MyNewProject.cpp ****     //     TIMER.DeInit();
 196:MyNewProject.cpp ****     //     TIMER.Init(*configPtr);
 197:MyNewProject.cpp **** 
 198:MyNewProject.cpp ****     //     // Turn the timer off
 199:MyNewProject.cpp ****     //     TIMER.Stop();
 200:MyNewProject.cpp ****     //     TAPPING = false;         // Reset the TAPPING flag 
 201:MyNewProject.cpp ****     // }
 202:MyNewProject.cpp **** 
 203:MyNewProject.cpp ****     // Check if the button was clicked
 204:MyNewProject.cpp ****     bool tap = false;
 288              		.loc 12 204 5 view .LVU31
 289              	.LVL7:
 205:MyNewProject.cpp ****     TEMPO_BUTTON.Debounce();
 290              		.loc 12 205 5 view .LVU32
 179:MyNewProject.cpp ****     
 291              		.loc 12 179 1 is_stmt 0 view .LVU33
 292 0000 10B5     		push	{r4, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 296              		.loc 12 205 26 view .LVU34
 297 0002 084C     		ldr	r4, .L17
 298 0004 2046     		mov	r0, r4
 299 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 300              	.LVL8:
 206:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 301              		.loc 12 206 5 is_stmt 1 view .LVU35
 302              	.LBB193:
 303              	.LBI193:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 21


  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 304              		.loc 4 70 17 view .LVU36
 305              	.LBB194:
 306              		.loc 4 70 38 view .LVU37
 307              		.loc 4 70 45 is_stmt 0 view .LVU38
 308 000a 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 309              		.loc 4 70 54 view .LVU39
 310 000c 29B1     		cbz	r1, .L12
 311              	.LVL9:
 312              		.loc 4 70 54 view .LVU40
 313              	.LBE194:
 314              	.LBE193:
 315              		.loc 12 206 5 view .LVU41
 316 000e A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 317 0010 A1F17F01 		sub	r1, #127
 318 0014 B1FA81F1 		clz	r1, r1
 319 0018 4909     		lsrs	r1, r1, #5
 320              	.L12:
 321              	.LVL10:
 207:MyNewProject.cpp ****     {
 208:MyNewProject.cpp ****         // // The first tap
 209:MyNewProject.cpp ****         // if(TAPPING == false)
 210:MyNewProject.cpp ****         // {
 211:MyNewProject.cpp ****         //     // Start the timer and begin counting
 212:MyNewProject.cpp ****         //     TIMER.Start(); 
 213:MyNewProject.cpp **** 
 214:MyNewProject.cpp ****         //     TAPPING = true; // Set the TAPPING flag
 215:MyNewProject.cpp **** 
 216:MyNewProject.cpp ****         // }
 217:MyNewProject.cpp ****         // // The second tap
 218:MyNewProject.cpp ****         // else 
 219:MyNewProject.cpp ****         // {
 220:MyNewProject.cpp ****         //     TAPPING = false; // Reset TAPPING flag
 221:MyNewProject.cpp **** 
 222:MyNewProject.cpp ****         //     // Stop the timer
 223:MyNewProject.cpp ****         //     TIMER.Stop();
 224:MyNewProject.cpp ****         //     TIMER.DeInit();
 225:MyNewProject.cpp ****         //     TIMER.Init(*configPtr);
 226:MyNewProject.cpp ****         //     // Turn the timer off
 227:MyNewProject.cpp ****         //     TIMER.Stop();
 228:MyNewProject.cpp **** 
 229:MyNewProject.cpp ****         //     // Only set new BPM if its greater than our minimum
 230:MyNewProject.cpp ****         //     if(seconds > MIN_DELAY_SEC )
 231:MyNewProject.cpp ****         //     {
 232:MyNewProject.cpp ****         //         BPM = -33.3333f*(seconds)+120; // Set the BPM for the delays 
 233:MyNewProject.cpp ****         //         // Set all delays to new bpm
 234:MyNewProject.cpp ****         //     }
 235:MyNewProject.cpp ****         //     //else
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 22


 236:MyNewProject.cpp ****         //         //hw.PrintLine("Under .6");
 237:MyNewProject.cpp **** 
 238:MyNewProject.cpp **** 
 239:MyNewProject.cpp ****             
 240:MyNewProject.cpp ****         // }
 241:MyNewProject.cpp **** 
 242:MyNewProject.cpp ****         tap = true;
 243:MyNewProject.cpp **** 
 244:MyNewProject.cpp ****     }
 245:MyNewProject.cpp **** 
 246:MyNewProject.cpp ****     tapTempo.update(tap);
 322              		.loc 12 246 5 is_stmt 1 view .LVU42
 323              		.loc 12 246 20 is_stmt 0 view .LVU43
 324 001a 0348     		ldr	r0, .L17+4
 247:MyNewProject.cpp **** 
 248:MyNewProject.cpp ****     
 249:MyNewProject.cpp **** }
 325              		.loc 12 249 1 view .LVU44
 326 001c BDE81040 		pop	{r4, lr}
 327              		.cfi_restore 14
 328              		.cfi_restore 4
 329              		.cfi_def_cfa_offset 0
 246:MyNewProject.cpp **** 
 330              		.loc 12 246 20 view .LVU45
 331 0020 FFF7FEBF 		b	_ZN8TapTempo6updateEb
 332              	.LVL11:
 333              	.L18:
 246:MyNewProject.cpp **** 
 334              		.loc 12 246 20 view .LVU46
 335              		.align	2
 336              	.L17:
 337 0024 00000000 		.word	.LANCHOR0
 338 0028 00000000 		.word	.LANCHOR1
 339              		.cfi_endproc
 340              	.LFE4802:
 342              		.section	.text._Z15InitHeadButtonsv,"ax",%progbits
 343              		.align	1
 344              		.p2align 2,,3
 345              		.global	_Z15InitHeadButtonsv
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv5-d16
 351              	_Z15InitHeadButtonsv:
 352              	.LFB4803:
 250:MyNewProject.cpp **** 
 251:MyNewProject.cpp **** void InitHeadButtons()
 252:MyNewProject.cpp **** {
 353              		.loc 12 252 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 253:MyNewProject.cpp ****     // Iterate through head switch array
 254:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 357              		.loc 12 254 5 view .LVU48
 358              	.LVL12:
 359              	.LBB195:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 23


 360              		.loc 12 254 22 view .LVU49
 361              	.LBE195:
 252:MyNewProject.cpp ****     // Iterate through head switch array
 362              		.loc 12 252 1 is_stmt 0 view .LVU50
 363 0000 30B5     		push	{r4, r5, lr}
 364              		.cfi_def_cfa_offset 12
 365              		.cfi_offset 4, -12
 366              		.cfi_offset 5, -8
 367              		.cfi_offset 14, -4
 368 0002 0B4D     		ldr	r5, .L23
 369 0004 83B0     		sub	sp, sp, #12
 370              		.cfi_def_cfa_offset 24
 252:MyNewProject.cpp ****     // Iterate through head switch array
 371              		.loc 12 252 1 view .LVU51
 372 0006 1524     		movs	r4, #21
 373              	.LVL13:
 374              	.L20:
 375              	.LBB196:
 255:MyNewProject.cpp ****     {
 256:MyNewProject.cpp ****         // Init buttons to D21 - D24
 257:MyNewProject.cpp ****         headSwitches[i].Init(hw.GetPin(21+i),1000);
 376              		.loc 12 257 9 is_stmt 1 discriminator 2 view .LVU52
 377              		.loc 12 257 29 is_stmt 0 discriminator 2 view .LVU53
 378 0008 2046     		mov	r0, r4
 254:MyNewProject.cpp ****     {
 379              		.loc 12 254 22 discriminator 2 view .LVU54
 380 000a 0134     		adds	r4, r4, #1
 381              		.loc 12 257 29 discriminator 2 view .LVU55
 382 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 383              	.LVL14:
 384 0010 0346     		mov	r3, r0	@ movhi
 254:MyNewProject.cpp ****     {
 385              		.loc 12 254 22 discriminator 2 view .LVU56
 386 0012 E4B2     		uxtb	r4, r4
 387              		.loc 12 257 29 discriminator 2 view .LVU57
 388 0014 2846     		mov	r0, r5
 389 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
 254:MyNewProject.cpp ****     {
 390              		.loc 12 254 22 discriminator 2 view .LVU58
 391 001a 1035     		adds	r5, r5, #16
 392              		.loc 12 257 29 discriminator 2 view .LVU59
 393 001c 9FED050A 		vldr.32	s0, .L23+4
 394 0020 0199     		ldr	r1, [sp, #4]
 395 0022 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 396              	.LVL15:
 254:MyNewProject.cpp ****     {
 397              		.loc 12 254 5 is_stmt 1 discriminator 2 view .LVU60
 254:MyNewProject.cpp ****     {
 398              		.loc 12 254 22 discriminator 2 view .LVU61
 399 0026 192C     		cmp	r4, #25
 400 0028 EED1     		bne	.L20
 401              	.LBE196:
 258:MyNewProject.cpp ****     }
 259:MyNewProject.cpp **** }
 402              		.loc 12 259 1 is_stmt 0 view .LVU62
 403 002a 03B0     		add	sp, sp, #12
 404              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 24


 405              		@ sp needed
 406 002c 30BD     		pop	{r4, r5, pc}
 407              	.L24:
 408 002e 00BF     		.align	2
 409              	.L23:
 410 0030 00000000 		.word	.LANCHOR2
 411 0034 00007A44 		.word	1148846080
 412              		.cfi_endproc
 413              	.LFE4803:
 415              		.section	.rodata._Z15ProcessControlsv.str1.4,"aMS",%progbits,1
 416              		.align	2
 417              	.LC0:
 418 0000 746F6E65 		.ascii	"tone knob val: %f\000"
 418      206B6E6F 
 418      62207661 
 418      6C3A2025 
 418      6600
 419              		.section	.text._Z15ProcessControlsv,"ax",%progbits
 420              		.align	1
 421              		.p2align 2,,3
 422              		.global	_Z15ProcessControlsv
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv5-d16
 428              	_Z15ProcessControlsv:
 429              	.LFB4804:
 260:MyNewProject.cpp **** 
 261:MyNewProject.cpp **** void ProcessControls()
 262:MyNewProject.cpp **** {
 430              		.loc 12 262 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 263:MyNewProject.cpp ****     delay.setFeedback(feedbackKnob.Process());
 434              		.loc 12 263 5 view .LVU64
 262:MyNewProject.cpp ****     delay.setFeedback(feedbackKnob.Process());
 435              		.loc 12 262 1 is_stmt 0 view .LVU65
 436 0000 10B5     		push	{r4, lr}
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 440 0002 82B0     		sub	sp, sp, #8
 441              		.cfi_def_cfa_offset 16
 442              		.loc 12 263 43 view .LVU66
 443 0004 1C48     		ldr	r0, .L34
 444 0006 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 445              	.LVL16:
 446              		.loc 12 263 22 view .LVU67
 447 000a 1C48     		ldr	r0, .L34+4
 448 000c 01A9     		add	r1, sp, #4
 449              		.loc 12 263 43 view .LVU68
 450 000e 8DED010A 		vstr.32	s0, [sp, #4]
 451              		.loc 12 263 22 view .LVU69
 452 0012 FFF7FEFF 		bl	_ZN6Delayy11setFeedbackERKf
 453              	.LVL17:
 264:MyNewProject.cpp ****     tone.setFreq(toneKnob.Process());
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 25


 454              		.loc 12 264 5 is_stmt 1 view .LVU70
 455              		.loc 12 264 17 is_stmt 0 view .LVU71
 456 0016 1A48     		ldr	r0, .L34+8
 457 0018 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 458              	.LVL18:
 459 001c 1948     		ldr	r0, .L34+12
 460 001e FFF7FEFF 		bl	_ZN10ToneFilter7setFreqEf
 461              	.LVL19:
 265:MyNewProject.cpp **** 
 266:MyNewProject.cpp **** 
 267:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 462              		.loc 12 267 5 is_stmt 1 view .LVU72
 463              	.LBB197:
 464              		.loc 12 267 13 is_stmt 0 view .LVU73
 465 0022 0023     		movs	r3, #0
 466 0024 184C     		ldr	r4, .L34+16
 467              		.loc 12 267 22 view .LVU74
 468 0026 1846     		mov	r0, r3
 469              		.loc 12 267 13 view .LVU75
 470 0028 0193     		str	r3, [sp, #4]
 471              		.loc 12 267 22 is_stmt 1 view .LVU76
 472 002a 03E0     		b	.L27
 473              	.LVL20:
 474              	.L26:
 475              		.loc 12 267 5 discriminator 2 view .LVU77
 476 002c 0130     		adds	r0, r0, #1
 477              		.loc 12 267 22 is_stmt 0 discriminator 2 view .LVU78
 478 002e 0328     		cmp	r0, #3
 479              		.loc 12 267 5 discriminator 2 view .LVU79
 480 0030 0190     		str	r0, [sp, #4]
 481              		.loc 12 267 22 is_stmt 1 discriminator 2 view .LVU80
 482 0032 1FDC     		bgt	.L33
 483              	.L27:
 268:MyNewProject.cpp ****     {
 269:MyNewProject.cpp ****         headSwitches[i].Debounce();
 484              		.loc 12 269 9 view .LVU81
 485              		.loc 12 269 33 is_stmt 0 view .LVU82
 486 0034 04EB0010 		add	r0, r4, r0, lsl #4
 487 0038 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 488              	.LVL21:
 270:MyNewProject.cpp ****         if(headSwitches[i].RisingEdge())
 489              		.loc 12 270 9 is_stmt 1 view .LVU83
 490              		.loc 12 270 26 is_stmt 0 view .LVU84
 491 003c 0198     		ldr	r0, [sp, #4]
 492              	.LVL22:
 493              	.LBB198:
 494              	.LBI198:
 495              		.loc 4 70 17 is_stmt 1 view .LVU85
 496              	.LBB199:
 497              		.loc 4 70 38 view .LVU86
 498              		.loc 4 70 45 is_stmt 0 view .LVU87
 499 003e 04EB0013 		add	r3, r4, r0, lsl #4
 500              		.loc 4 70 54 view .LVU88
 501 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 502 0044 002A     		cmp	r2, #0
 503 0046 F1D0     		beq	.L26
 504              	.LBE199:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 26


 505              	.LBE198:
 506              		.loc 12 270 9 view .LVU89
 507 0048 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 508 004a 7F2B     		cmp	r3, #127
 509 004c EED1     		bne	.L26
 271:MyNewProject.cpp ****         {            
 272:MyNewProject.cpp ****             hw.PrintLine("tone knob val: %f",toneKnob.Process());
 510              		.loc 12 272 13 is_stmt 1 view .LVU90
 511              		.loc 12 272 25 is_stmt 0 view .LVU91
 512 004e 0C48     		ldr	r0, .L34+8
 513              	.LVL23:
 514              		.loc 12 272 25 view .LVU92
 515 0050 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 516              	.LVL24:
 517              	.LBB200:
 518              	.LBI200:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 27


  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 519              		.loc 7 119 17 is_stmt 1 view .LVU93
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 28


 520              	.LBB201:
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 521              		.loc 7 121 23 is_stmt 0 view .LVU94
 522 0054 B7EEC07A 		vcvt.f64.f32	d7, s0
 523 0058 0C48     		ldr	r0, .L34+20
 524 005a 53EC172B 		vmov	r2, r3, d7
 525 005e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 526              	.LVL25:
 527              		.loc 7 121 23 view .LVU95
 528              	.LBE201:
 529              	.LBE200:
 273:MyNewProject.cpp ****             delay.toggleHead(i);
 530              		.loc 12 273 13 is_stmt 1 view .LVU96
 531              		.loc 12 273 29 is_stmt 0 view .LVU97
 532 0062 0648     		ldr	r0, .L34+4
 533 0064 01A9     		add	r1, sp, #4
 534 0066 FFF7FEFF 		bl	_ZN6Delayy10toggleHeadERKi
 535              	.LVL26:
 267:MyNewProject.cpp ****     {
 536              		.loc 12 267 5 view .LVU98
 537 006a 0198     		ldr	r0, [sp, #4]
 267:MyNewProject.cpp ****     {
 538              		.loc 12 267 5 is_stmt 1 view .LVU99
 539 006c 0130     		adds	r0, r0, #1
 267:MyNewProject.cpp ****     {
 540              		.loc 12 267 22 is_stmt 0 view .LVU100
 541 006e 0328     		cmp	r0, #3
 267:MyNewProject.cpp ****     {
 542              		.loc 12 267 5 view .LVU101
 543 0070 0190     		str	r0, [sp, #4]
 267:MyNewProject.cpp ****     {
 544              		.loc 12 267 22 is_stmt 1 view .LVU102
 545 0072 DFDD     		ble	.L27
 546              	.L33:
 547              	.LBE197:
 274:MyNewProject.cpp ****         }
 275:MyNewProject.cpp ****     }
 276:MyNewProject.cpp **** }
 548              		.loc 12 276 1 is_stmt 0 view .LVU103
 549 0074 02B0     		add	sp, sp, #8
 550              		.cfi_def_cfa_offset 8
 551              		@ sp needed
 552 0076 10BD     		pop	{r4, pc}
 553              	.L35:
 554              		.align	2
 555              	.L34:
 556 0078 00000000 		.word	.LANCHOR3
 557 007c 00000000 		.word	.LANCHOR4
 558 0080 00000000 		.word	.LANCHOR5
 559 0084 00000000 		.word	.LANCHOR6
 560 0088 00000000 		.word	.LANCHOR2
 561 008c 00000000 		.word	.LC0
 562              		.cfi_endproc
 563              	.LFE4804:
 565              		.section	.rodata._ZL13AudioCallbackPKPKfPPfj.str1.4,"aMS",%progbits,1
 566              		.align	2
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 29


 567              	.LC1:
 568 0000 42504D20 		.ascii	"BPM is %f\000"
 568      69732025 
 568      6600
 569              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 570              		.align	1
 571              		.p2align 2,,3
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv5-d16
 577              	_ZL13AudioCallbackPKPKfPPfj:
 578              	.LVL27:
 579              	.LFB4800:
  47:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 580              		.loc 12 47 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 8
 583              		@ frame_needed = 0, uses_anonymous_args = 0
  48:MyNewProject.cpp ****     {
 584              		.loc 12 48 5 view .LVU105
 585              	.LBB216:
  48:MyNewProject.cpp ****     {
 586              		.loc 12 48 25 view .LVU106
 587 0000 002A     		cmp	r2, #0
 588 0002 00F08D80 		beq	.L54
 589              	.LBE216:
  47:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 590              		.loc 12 47 1 is_stmt 0 view .LVU107
 591 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 592              		.cfi_def_cfa_offset 36
 593              		.cfi_offset 4, -36
 594              		.cfi_offset 5, -32
 595              		.cfi_offset 6, -28
 596              		.cfi_offset 7, -24
 597              		.cfi_offset 8, -20
 598              		.cfi_offset 9, -16
 599              		.cfi_offset 10, -12
 600              		.cfi_offset 11, -8
 601              		.cfi_offset 14, -4
 602 000a 0546     		mov	r5, r0
 603 000c 0E46     		mov	r6, r1
 604 000e 9146     		mov	r9, r2
 605              	.LBB237:
  48:MyNewProject.cpp ****     {
 606              		.loc 12 48 16 view .LVU108
 607 0010 0024     		movs	r4, #0
 608 0012 444F     		ldr	r7, .L58
 609 0014 DFF82C81 		ldr	r8, .L58+32
 610 0018 DFF82CB1 		ldr	fp, .L58+36
 611              	.LBE237:
  47:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 612              		.loc 12 47 1 view .LVU109
 613 001c 2DED028B 		vpush.64	{d8}
 614              		.cfi_def_cfa_offset 44
 615              		.cfi_offset 80, -44
 616              		.cfi_offset 81, -40
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 30


 617 0020 83B0     		sub	sp, sp, #12
 618              		.cfi_def_cfa_offset 56
 619 0022 42E0     		b	.L45
 620              	.LVL28:
 621              	.L44:
 622              	.LBB238:
 623              	.LBB217:
  70:MyNewProject.cpp ****         }
 624              		.loc 12 70 13 is_stmt 1 view .LVU110
  68:MyNewProject.cpp ****         {
 625              		.loc 12 68 33 is_stmt 0 view .LVU111
 626 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
  70:MyNewProject.cpp ****         }
 627              		.loc 12 70 32 view .LVU112
 628 0028 0022     		movs	r2, #0
  68:MyNewProject.cpp ****         {
 629              		.loc 12 68 33 view .LVU113
 630 002a 0BB1     		cbz	r3, .L43
  70:MyNewProject.cpp ****         }
 631              		.loc 12 70 32 view .LVU114
 632 002c 88F80020 		strb	r2, [r8]
 633              	.L43:
  73:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
 634              		.loc 12 73 9 is_stmt 1 discriminator 2 view .LVU115
 635              	.LVL29:
  74:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 636              		.loc 12 74 6 discriminator 2 view .LVU116
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 637              		.loc 12 80 42 is_stmt 0 discriminator 2 view .LVU117
 638 0030 2B68     		ldr	r3, [r5]
  74:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 639              		.loc 12 74 12 discriminator 2 view .LVU118
 640 0032 0022     		movs	r2, #0
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 641              		.loc 12 80 42 discriminator 2 view .LVU119
 642 0034 3C48     		ldr	r0, .L58+4
 643 0036 4FEA840A 		lsl	r10, r4, #2
 644 003a 03EB8403 		add	r3, r3, r4, lsl #2
  74:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 645              		.loc 12 74 12 discriminator 2 view .LVU120
 646 003e 0092     		str	r2, [sp]	@ float
  75:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
 647              		.loc 12 75 9 is_stmt 1 discriminator 2 view .LVU121
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 648              		.loc 12 80 9 discriminator 2 view .LVU122
 649              	.LBE217:
  48:MyNewProject.cpp ****     {
 650              		.loc 12 48 5 is_stmt 0 discriminator 2 view .LVU123
 651 0040 0134     		adds	r4, r4, #1
 652              	.LVL30:
 653              	.LBB234:
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 654              		.loc 12 80 42 discriminator 2 view .LVU124
 655 0042 93ED000A 		vldr.32	s0, [r3]
 656 0046 FFF7FEFF 		bl	_ZN6Delayy7processEf
 657              	.LVL31:
  82:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 31


 658              		.loc 12 82 41 discriminator 2 view .LVU125
 659 004a 3848     		ldr	r0, .L58+8
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 660              		.loc 12 80 42 discriminator 2 view .LVU126
 661 004c B0EE408A 		vmov.f32	s16, s0
  80:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 662              		.loc 12 80 27 discriminator 2 view .LVU127
 663 0050 8DED000A 		vstr.32	s0, [sp]
  81:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
 664              		.loc 12 81 9 is_stmt 1 discriminator 2 view .LVU128
 665              	.LVL32:
  82:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
 666              		.loc 12 82 9 discriminator 2 view .LVU129
  82:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
 667              		.loc 12 82 41 is_stmt 0 discriminator 2 view .LVU130
 668 0054 FFF7FEFF 		bl	_ZN10ToneFilter7processEf
 669              	.LVL33:
  83:MyNewProject.cpp **** 
 670              		.loc 12 83 87 discriminator 2 view .LVU131
 671 0058 3448     		ldr	r0, .L58+8
  82:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
 672              		.loc 12 82 41 discriminator 2 view .LVU132
 673 005a F0EE408A 		vmov.f32	s17, s0
  82:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*tone.getFactor());
 674              		.loc 12 82 27 discriminator 2 view .LVU133
 675 005e 8DED000A 		vstr.32	s0, [sp]
  83:MyNewProject.cpp **** 
 676              		.loc 12 83 9 is_stmt 1 discriminator 2 view .LVU134
  83:MyNewProject.cpp **** 
 677              		.loc 12 83 87 is_stmt 0 discriminator 2 view .LVU135
 678 0062 FFF7FEFF 		bl	_ZN10ToneFilter9getFactorEv
 679              	.LVL34:
 680 0066 F0EE400A 		vmov.f32	s1, s0
  83:MyNewProject.cpp **** 
 681              		.loc 12 83 44 discriminator 2 view .LVU136
 682 006a 3148     		ldr	r0, .L58+12
 683 006c B0EE680A 		vmov.f32	s0, s17
 684 0070 68EE200A 		vmul.f32	s1, s16, s1
 685 0074 FFF7FEFF 		bl	_ZN7daisysp7Balance7ProcessEff
 686              	.LVL35:
  88:MyNewProject.cpp **** 
 687              		.loc 12 88 32 discriminator 2 view .LVU137
 688 0078 2B68     		ldr	r3, [r5]
  83:MyNewProject.cpp **** 
 689              		.loc 12 83 27 discriminator 2 view .LVU138
 690 007a 8DED000A 		vstr.32	s0, [sp]
  88:MyNewProject.cpp **** 
 691              		.loc 12 88 9 is_stmt 1 discriminator 2 view .LVU139
  92:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 692              		.loc 12 92 28 is_stmt 0 discriminator 2 view .LVU140
 693 007e 6A46     		mov	r2, sp
  88:MyNewProject.cpp **** 
 694              		.loc 12 88 32 discriminator 2 view .LVU141
 695 0080 5344     		add	r3, r3, r10
 696              	.LBB218:
 697              	.LBB219:
  38:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 32


  39:../../DaisySP//Source/Dynamics/crossfade.h ****         Defaults
  40:../../DaisySP//Source/Dynamics/crossfade.h ****         - current position = .5
  41:../../DaisySP//Source/Dynamics/crossfade.h ****         - curve = linear
  42:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../../DaisySP//Source/Dynamics/crossfade.h ****     {
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../../DaisySP//Source/Dynamics/crossfade.h ****     }
  48:../../DaisySP//Source/Dynamics/crossfade.h **** 
  49:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  54:../../DaisySP//Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../../DaisySP//Source/Dynamics/crossfade.h **** 
  56:../../DaisySP//Source/Dynamics/crossfade.h **** 
  57:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../../DaisySP//Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 698              		.loc 2 60 42 discriminator 2 view .LVU142
 699 0082 2C49     		ldr	r1, .L58+16
 700              	.LBE219:
 701              	.LBE218:
  92:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 702              		.loc 12 92 28 discriminator 2 view .LVU143
 703 0084 2B48     		ldr	r0, .L58+16
  88:MyNewProject.cpp **** 
 704              		.loc 12 88 32 discriminator 2 view .LVU144
 705 0086 1B68     		ldr	r3, [r3]	@ float
  88:MyNewProject.cpp **** 
 706              		.loc 12 88 23 discriminator 2 view .LVU145
 707 0088 0193     		str	r3, [sp, #4]	@ float
  91:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
 708              		.loc 12 91 3 is_stmt 1 discriminator 2 view .LVU146
 709              	.LVL36:
 710              	.LBB221:
 711              	.LBI218:
 712              		.loc 2 60 17 discriminator 2 view .LVU147
 713              	.LBB220:
 714              		.loc 2 60 37 discriminator 2 view .LVU148
 715              		.loc 2 60 42 is_stmt 0 discriminator 2 view .LVU149
 716 008a DBF80030 		ldr	r3, [fp]	@ float
 717 008e 0B60     		str	r3, [r1]	@ float
 718              	.LVL37:
 719              		.loc 2 60 42 discriminator 2 view .LVU150
 720              	.LBE220:
 721              	.LBE221:
  92:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 722              		.loc 12 92 3 is_stmt 1 discriminator 2 view .LVU151
  92:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 723              		.loc 12 92 28 is_stmt 0 discriminator 2 view .LVU152
 724 0090 01A9     		add	r1, sp, #4
 725 0092 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 726              	.LVL38:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 33


  93:MyNewProject.cpp ****     }
 727              		.loc 12 93 27 discriminator 2 view .LVU153
 728 0096 7368     		ldr	r3, [r6, #4]
 729              	.LVL39:
  93:MyNewProject.cpp ****     }
 730              		.loc 12 93 3 is_stmt 1 discriminator 2 view .LVU154
 731              	.LBE234:
  48:MyNewProject.cpp ****     {
 732              		.loc 12 48 25 is_stmt 0 discriminator 2 view .LVU155
 733 0098 A145     		cmp	r9, r4
 734              	.LBB235:
  93:MyNewProject.cpp ****     }
 735              		.loc 12 93 27 discriminator 2 view .LVU156
 736 009a 5344     		add	r3, r3, r10
 737 009c 83ED000A 		vstr.32	s0, [r3]
  93:MyNewProject.cpp ****     }
 738              		.loc 12 93 14 discriminator 2 view .LVU157
 739 00a0 3368     		ldr	r3, [r6]
 740 00a2 5344     		add	r3, r3, r10
 741 00a4 83ED000A 		vstr.32	s0, [r3]
 742              	.LBE235:
  48:MyNewProject.cpp ****     {
 743              		.loc 12 48 5 is_stmt 1 discriminator 2 view .LVU158
 744              	.LVL40:
  48:MyNewProject.cpp ****     {
 745              		.loc 12 48 25 discriminator 2 view .LVU159
 746 00a8 35D0     		beq	.L57
 747              	.LVL41:
 748              	.L45:
 749              	.LBB236:
  51:MyNewProject.cpp ****         // Check for tempo change
 750              		.loc 12 51 9 view .LVU160
  51:MyNewProject.cpp ****         // Check for tempo change
 751              		.loc 12 51 24 is_stmt 0 view .LVU161
 752 00aa FFF7FEFF 		bl	_Z15ProcessControlsv
 753              	.LVL42:
  53:MyNewProject.cpp ****         // Set delays with new bpm
 754              		.loc 12 53 9 is_stmt 1 view .LVU162
 755              	.LBB222:
 756              	.LBI222:
 178:MyNewProject.cpp **** {
 757              		.loc 12 178 6 view .LVU163
 758              	.LBB223:
 204:MyNewProject.cpp ****     TEMPO_BUTTON.Debounce();
 759              		.loc 12 204 5 view .LVU164
 205:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 760              		.loc 12 205 5 view .LVU165
 205:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 761              		.loc 12 205 26 is_stmt 0 view .LVU166
 762 00ae 1D48     		ldr	r0, .L58
 763 00b0 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 764              	.LVL43:
 206:MyNewProject.cpp ****     {
 765              		.loc 12 206 5 is_stmt 1 view .LVU167
 766              	.LBB224:
 767              	.LBI224:
 768              		.loc 4 70 17 view .LVU168
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 34


 769              	.LBB225:
 770              		.loc 4 70 38 view .LVU169
 771              		.loc 4 70 45 is_stmt 0 view .LVU170
 772 00b4 3979     		ldrb	r1, [r7, #4]	@ zero_extendqisi2
 773              	.LBE225:
 774              	.LBE224:
 246:MyNewProject.cpp **** 
 775              		.loc 12 246 20 view .LVU171
 776 00b6 2048     		ldr	r0, .L58+20
 777              	.LBB227:
 778              	.LBB226:
 779              		.loc 4 70 54 view .LVU172
 780 00b8 29B1     		cbz	r1, .L38
 781              	.LBE226:
 782              	.LBE227:
 206:MyNewProject.cpp ****     {
 783              		.loc 12 206 5 view .LVU173
 784 00ba B97A     		ldrb	r1, [r7, #10]	@ zero_extendqisi2
 785 00bc A1F17F01 		sub	r1, #127
 786 00c0 B1FA81F1 		clz	r1, r1
 787 00c4 4909     		lsrs	r1, r1, #5
 788              	.L38:
 789              	.LVL44:
 246:MyNewProject.cpp **** 
 790              		.loc 12 246 5 is_stmt 1 view .LVU174
 246:MyNewProject.cpp **** 
 791              		.loc 12 246 20 is_stmt 0 view .LVU175
 792 00c6 FFF7FEFF 		bl	_ZN8TapTempo6updateEb
 793              	.LVL45:
 246:MyNewProject.cpp **** 
 794              		.loc 12 246 20 view .LVU176
 795              	.LBE223:
 796              	.LBE222:
  55:MyNewProject.cpp **** 
 797              		.loc 12 55 9 is_stmt 1 view .LVU177
  55:MyNewProject.cpp **** 
 798              		.loc 12 55 21 is_stmt 0 view .LVU178
 799 00ca 1B48     		ldr	r0, .L58+20
 800 00cc FFF7FEFF 		bl	_ZN8TapTempo6getBPMEv
 801              	.LVL46:
 802 00d0 1548     		ldr	r0, .L58+4
 803 00d2 FFF7FEFF 		bl	_ZN6Delayy6setBPMEf
 804              	.LVL47:
  58:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 805              		.loc 12 58 9 is_stmt 1 view .LVU179
  58:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 806              		.loc 12 58 27 is_stmt 0 view .LVU180
 807 00d6 1948     		ldr	r0, .L58+24
 808 00d8 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 809              	.LVL48:
  60:MyNewProject.cpp ****         {
 810              		.loc 12 60 9 is_stmt 1 view .LVU181
 811              	.LBB228:
 812              	.LBI228:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 35


  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 813              		.loc 4 79 17 view .LVU182
 814              	.LBB229:
 815              		.loc 4 79 35 view .LVU183
 816              		.loc 4 79 35 is_stmt 0 view .LVU184
 817              	.LBE229:
 818              	.LBE228:
  60:MyNewProject.cpp ****         {
 819              		.loc 12 60 32 view .LVU185
 820 00dc 174B     		ldr	r3, .L58+24
 821 00de 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 822 00e0 FF2B     		cmp	r3, #255
 823 00e2 9FD1     		bne	.L44
  60:MyNewProject.cpp ****         {
 824              		.loc 12 60 32 discriminator 1 view .LVU186
 825 00e4 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 826 00e8 002B     		cmp	r3, #0
 827 00ea A1D1     		bne	.L43
  62:MyNewProject.cpp ****             delay.stopAll();
 828              		.loc 12 62 13 is_stmt 1 view .LVU187
  62:MyNewProject.cpp ****             delay.stopAll();
 829              		.loc 12 62 32 is_stmt 0 view .LVU188
 830 00ec 0123     		movs	r3, #1
  63:MyNewProject.cpp ****             hw.PrintLine("BPM is %f",tapTempo.getBPM());
 831              		.loc 12 63 26 view .LVU189
 832 00ee 0E48     		ldr	r0, .L58+4
  62:MyNewProject.cpp ****             delay.stopAll();
 833              		.loc 12 62 32 view .LVU190
 834 00f0 88F80030 		strb	r3, [r8]
  63:MyNewProject.cpp ****             hw.PrintLine("BPM is %f",tapTempo.getBPM());
 835              		.loc 12 63 13 is_stmt 1 view .LVU191
  63:MyNewProject.cpp ****             hw.PrintLine("BPM is %f",tapTempo.getBPM());
 836              		.loc 12 63 26 is_stmt 0 view .LVU192
 837 00f4 FFF7FEFF 		bl	_ZN6Delayy7stopAllEv
 838              	.LVL49:
  64:MyNewProject.cpp ****         }
 839              		.loc 12 64 13 is_stmt 1 view .LVU193
  64:MyNewProject.cpp ****         }
 840              		.loc 12 64 25 is_stmt 0 view .LVU194
 841 00f8 0F48     		ldr	r0, .L58+20
 842 00fa FFF7FEFF 		bl	_ZN8TapTempo6getBPMEv
 843              	.LVL50:
 844              	.LBB230:
 845              	.LBI230:
 119:../../libDaisy//src/daisy_seed.h ****     {
 846              		.loc 7 119 17 is_stmt 1 view .LVU195
 847              	.LBB231:
 848              		.loc 7 121 23 is_stmt 0 view .LVU196
 849 00fe B7EEC07A 		vcvt.f64.f32	d7, s0
 850 0102 0F48     		ldr	r0, .L58+28
 851 0104 53EC172B 		vmov	r2, r3, d7
 852 0108 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 36


 853              	.LVL51:
 854              		.loc 7 121 23 view .LVU197
 855              	.LBE231:
 856              	.LBE230:
  68:MyNewProject.cpp ****         {
 857              		.loc 12 68 9 is_stmt 1 view .LVU198
 858              	.LBB232:
 859              	.LBI232:
 860              		.loc 4 79 17 view .LVU199
 861              	.LBB233:
 862              		.loc 4 79 35 view .LVU200
 863              		.loc 4 79 35 is_stmt 0 view .LVU201
 864              	.LBE233:
 865              	.LBE232:
  68:MyNewProject.cpp ****         {
 866              		.loc 12 68 33 view .LVU202
 867 010c 0B4B     		ldr	r3, .L58+24
 868 010e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 869 0110 FF2B     		cmp	r3, #255
 870 0112 8DD0     		beq	.L43
 871 0114 86E7     		b	.L44
 872              	.LVL52:
 873              	.L57:
  68:MyNewProject.cpp ****         {
 874              		.loc 12 68 33 view .LVU203
 875              	.LBE236:
 876              	.LBE238:
  95:MyNewProject.cpp **** 
 877              		.loc 12 95 1 view .LVU204
 878 0116 03B0     		add	sp, sp, #12
 879              		.cfi_def_cfa_offset 44
 880              		@ sp needed
 881 0118 BDEC028B 		vldm	sp!, {d8}
 882              		.cfi_restore 80
 883              		.cfi_restore 81
 884              		.cfi_def_cfa_offset 36
 885              	.LVL53:
  95:MyNewProject.cpp **** 
 886              		.loc 12 95 1 view .LVU205
 887 011c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 888              	.LVL54:
 889              	.L54:
 890              		.cfi_def_cfa_offset 0
 891              		.cfi_restore 4
 892              		.cfi_restore 5
 893              		.cfi_restore 6
 894              		.cfi_restore 7
 895              		.cfi_restore 8
 896              		.cfi_restore 9
 897              		.cfi_restore 10
 898              		.cfi_restore 11
 899              		.cfi_restore 14
  95:MyNewProject.cpp **** 
 900              		.loc 12 95 1 view .LVU206
 901 0120 7047     		bx	lr
 902              	.L59:
 903 0122 00BF     		.align	2
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 37


 904              	.L58:
 905 0124 00000000 		.word	.LANCHOR0
 906 0128 00000000 		.word	.LANCHOR4
 907 012c 00000000 		.word	.LANCHOR6
 908 0130 00000000 		.word	.LANCHOR9
 909 0134 00000000 		.word	.LANCHOR10
 910 0138 00000000 		.word	.LANCHOR1
 911 013c 00000000 		.word	.LANCHOR7
 912 0140 00000000 		.word	.LC1
 913 0144 00000000 		.word	.LANCHOR8
 914 0148 00000000 		.word	.LANCHOR11
 915              		.cfi_endproc
 916              	.LFE4800:
 918              		.section	.text._Z9initDelayv,"ax",%progbits
 919              		.align	1
 920              		.p2align 2,,3
 921              		.global	_Z9initDelayv
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv5-d16
 927              	_Z9initDelayv:
 928              	.LFB4805:
 277:MyNewProject.cpp **** 
 278:MyNewProject.cpp **** void initDelay()
 279:MyNewProject.cpp **** {
 929              		.loc 12 279 1 is_stmt 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 280:MyNewProject.cpp ****     for (int i = 0; i < 4; i++)
 933              		.loc 12 280 5 view .LVU208
 934              	.LVL55:
 935              	.LBB239:
 936              		.loc 12 280 23 view .LVU209
 937              	.LBE239:
 279:MyNewProject.cpp ****     for (int i = 0; i < 4; i++)
 938              		.loc 12 279 1 is_stmt 0 view .LVU210
 939 0000 70B5     		push	{r4, r5, r6, lr}
 940              		.cfi_def_cfa_offset 16
 941              		.cfi_offset 4, -16
 942              		.cfi_offset 5, -12
 943              		.cfi_offset 6, -8
 944              		.cfi_offset 14, -4
 945 0002 0B4C     		ldr	r4, .L64
 946 0004 0B4D     		ldr	r5, .L64+4
 947 0006 0C4E     		ldr	r6, .L64+8
 948              	.LVL56:
 949              	.L61:
 950              	.LBB251:
 281:MyNewProject.cpp ****     {
 282:MyNewProject.cpp ****         delayMems[i].Init();
 951              		.loc 12 282 9 is_stmt 1 discriminator 2 view .LVU211
 952              	.LBB240:
 953              	.LBI240:
 954              		.file 16 "../../DaisySP//Source/Utility/delayline.h"
   1:../../DaisySP//Source/Utility/delayline.h **** #pragma once
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 38


   2:../../DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP//Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP//Source/Utility/delayline.h **** {
   8:../../DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP//Source/Utility/delayline.h **** November 2019
  10:../../DaisySP//Source/Utility/delayline.h **** 
  11:../../DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP//Source/Utility/delayline.h **** 
  13:../../DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../../DaisySP//Source/Utility/delayline.h **** 
  15:../../DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP//Source/Utility/delayline.h **** 
  17:../../DaisySP//Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP//Source/Utility/delayline.h **** */
  19:../../DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../../DaisySP//Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP//Source/Utility/delayline.h **** {
  22:../../DaisySP//Source/Utility/delayline.h ****   public:
  23:../../DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  24:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
  25:../../DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../../DaisySP//Source/Utility/delayline.h ****     */
  27:../../DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
 955              		.loc 16 27 10 discriminator 2 view .LVU212
 956              	.LBB241:
 957              	.LBI241:
  28:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../../DaisySP//Source/Utility/delayline.h ****     */
  30:../../DaisySP//Source/Utility/delayline.h ****     void Reset()
 958              		.loc 16 30 10 discriminator 2 view .LVU213
 959              	.LBB242:
 960              	.LBB243:
  31:../../DaisySP//Source/Utility/delayline.h ****     {
  32:../../DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
 961              		.loc 16 32 29 discriminator 2 view .LVU214
  33:../../DaisySP//Source/Utility/delayline.h ****         {
  34:../../DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
 962              		.loc 16 34 22 is_stmt 0 discriminator 2 view .LVU215
 963 0008 04F10C00 		add	r0, r4, #12
 964 000c 0B4A     		ldr	r2, .L64+12
 965 000e 0021     		movs	r1, #0
 966              	.LBE243:
 967              	.LBE242:
 968              	.LBE241:
 969              	.LBE240:
 280:MyNewProject.cpp ****     {
 970              		.loc 12 280 23 discriminator 2 view .LVU216
 971 0010 1035     		adds	r5, r5, #16
 972              	.LBB249:
 973              	.LBB247:
 974              	.LBB245:
 975              	.LBB244:
 976              		.loc 16 34 22 discriminator 2 view .LVU217
 977 0012 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 39


 978              	.LVL57:
 979              		.loc 16 34 22 discriminator 2 view .LVU218
 980              	.LBE244:
  35:../../DaisySP//Source/Utility/delayline.h ****         }
  36:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
 981              		.loc 16 36 20 discriminator 2 view .LVU219
 982 0016 0022     		movs	r2, #0
  37:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 983              		.loc 16 37 20 discriminator 2 view .LVU220
 984 0018 0123     		movs	r3, #1
 985              	.LBE245:
 986              	.LBE247:
 987              	.LBE249:
 283:MyNewProject.cpp ****         delay.delayHeads[i].delay = &delayMems[i];
 988              		.loc 12 283 35 discriminator 2 view .LVU221
 989 001a 45F8044C 		str	r4, [r5, #-4]
 990              	.LBB250:
 991              	.LBB248:
 992              	.LBB246:
 993              		.loc 16 37 20 discriminator 2 view .LVU222
 994 001e C4E90123 		strd	r2, r3, [r4, #4]
 995              	.LVL58:
 996              		.loc 16 37 20 discriminator 2 view .LVU223
 997              	.LBE246:
 998              	.LBE248:
 999              	.LBE250:
 1000              		.loc 12 283 9 is_stmt 1 discriminator 2 view .LVU224
 280:MyNewProject.cpp ****     {
 1001              		.loc 12 280 5 discriminator 2 view .LVU225
 280:MyNewProject.cpp ****     {
 1002              		.loc 12 280 23 discriminator 2 view .LVU226
 1003 0022 04F5BB24 		add	r4, r4, #382976
 1004 0026 04F20C44 		addw	r4, r4, #1036
 1005 002a B442     		cmp	r4, r6
 1006 002c ECD1     		bne	.L61
 1007              	.LBE251:
 284:MyNewProject.cpp ****     }
 285:MyNewProject.cpp ****         
 286:MyNewProject.cpp **** }
 1008              		.loc 12 286 1 is_stmt 0 view .LVU227
 1009 002e 70BD     		pop	{r4, r5, r6, pc}
 1010              	.L65:
 1011              		.align	2
 1012              	.L64:
 1013 0030 00000000 		.word	delayMems
 1014 0034 00000000 		.word	.LANCHOR4
 1015 0038 30701700 		.word	delayMems+1536048
 1016 003c 00DC0500 		.word	384000
 1017              		.cfi_endproc
 1018              	.LFE4805:
 1020              		.section	.text.startup.main,"ax",%progbits
 1021              		.align	1
 1022              		.p2align 2,,3
 1023              		.global	main
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 40


 1027              		.fpu fpv5-d16
 1029              	main:
 1030              	.LFB4801:
  98:MyNewProject.cpp ****     // Initialize seed hardware.
 1031              		.loc 12 98 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ Volatile: function does not return.
 1034              		@ args = 0, pretend = 0, frame = 216
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 100:MyNewProject.cpp **** 
 1036              		.loc 12 100 5 view .LVU229
  98:MyNewProject.cpp ****     // Initialize seed hardware.
 1037              		.loc 12 98 1 is_stmt 0 view .LVU230
 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 100:MyNewProject.cpp **** 
 1042              		.loc 12 100 12 view .LVU231
 1043 0002 0021     		movs	r1, #0
  98:MyNewProject.cpp ****     // Initialize seed hardware.
 1044              		.loc 12 98 1 view .LVU232
 1045 0004 B6B0     		sub	sp, sp, #216
 1046              		.cfi_def_cfa_offset 224
 100:MyNewProject.cpp **** 
 1047              		.loc 12 100 12 view .LVU233
 1048 0006 6548     		ldr	r0, .L69
 1049              	.LBB252:
 1050              	.LBB253:
  61:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../../DaisySP//Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  64:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 1051              		.loc 2 64 50 view .LVU234
 1052 0008 0127     		movs	r7, #1
 1053              	.LBE253:
 1054              	.LBE252:
 100:MyNewProject.cpp **** 
 1055              		.loc 12 100 12 view .LVU235
 1056 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 1057              	.LVL59:
 103:MyNewProject.cpp **** 
 1058              		.loc 12 103 5 is_stmt 1 view .LVU236
 1059              	.LBB255:
 1060              	.LBI255:
 122:../../libDaisy//src/daisy_seed.h ****     }
 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 1061              		.loc 7 126 17 view .LVU237
 1062              	.LBB256:
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 1063              		.loc 7 128 9 view .LVU238
 1064              		.loc 7 128 22 is_stmt 0 view .LVU239
 1065 000e 0020     		movs	r0, #0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 41


 1066 0010 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 1067              	.LVL60:
 1068              		.loc 7 128 22 view .LVU240
 1069              	.LBE256:
 1070              	.LBE255:
 106:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 1071              		.loc 12 106 5 is_stmt 1 view .LVU241
 106:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 1072              		.loc 12 106 19 is_stmt 0 view .LVU242
 1073 0014 1C20     		movs	r0, #28
 1074 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 1075              	.LVL61:
 1076 001a 0346     		mov	r3, r0	@ movhi
 1077 001c 9FED600A 		vldr.32	s0, .L69+4
 1078              	.LBB257:
 1079              	.LBB258:
 1080              	.LBB259:
  79:../../libDaisy//src/per/tim.h ****         {
 1081              		.loc 3 79 27 view .LVU243
 1082 0020 0025     		movs	r5, #0
 1083              	.LBE259:
 1084              	.LBE258:
 1085              	.LBE257:
 106:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 1086              		.loc 12 106 19 view .LVU244
 1087 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 1088 0026 4FF00208 		mov	r8, #2
 1089 002a 0399     		ldr	r1, [sp, #12]
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1090              		.loc 12 146 57 view .LVU245
 1091 002c 2DAE     		add	r6, sp, #180
 106:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 1092              		.loc 12 106 19 view .LVU246
 1093 002e 5D48     		ldr	r0, .L69+8
 151:MyNewProject.cpp **** 
 1094              		.loc 12 151 22 view .LVU247
 1095 0030 25AC     		add	r4, sp, #148
 106:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 1096              		.loc 12 106 19 view .LVU248
 1097 0032 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1098              	.LVL62:
 108:MyNewProject.cpp ****     // Init the head on/off buttons
 1099              		.loc 12 108 5 is_stmt 1 view .LVU249
 108:MyNewProject.cpp ****     // Init the head on/off buttons
 1100              		.loc 12 108 22 is_stmt 0 view .LVU250
 1101 0036 1920     		movs	r0, #25
 1102 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 1103              	.LVL63:
 1104 003c 0346     		mov	r3, r0	@ movhi
 1105 003e 9FED580A 		vldr.32	s0, .L69+4
 1106 0042 ADF81030 		strh	r3, [sp, #16]	@ movhi
 1107 0046 5848     		ldr	r0, .L69+12
 1108 0048 0499     		ldr	r1, [sp, #16]
 1109 004a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1110              	.LVL64:
 110:MyNewProject.cpp **** 
 1111              		.loc 12 110 5 is_stmt 1 view .LVU251
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 42


 110:MyNewProject.cpp **** 
 1112              		.loc 12 110 20 is_stmt 0 view .LVU252
 1113 004e FFF7FEFF 		bl	_Z15InitHeadButtonsv
 1114              	.LVL65:
 114:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 1115              		.loc 12 114 5 is_stmt 1 view .LVU253
 114:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 1116              		.loc 12 114 25 is_stmt 0 view .LVU254
 1117 0052 0421     		movs	r1, #4
 1118 0054 5148     		ldr	r0, .L69
 1119 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 1120              	.LVL66:
 115:MyNewProject.cpp **** 
 1121              		.loc 12 115 5 is_stmt 1 view .LVU255
 115:MyNewProject.cpp **** 
 1122              		.loc 12 115 26 is_stmt 0 view .LVU256
 1123 005a 0321     		movs	r1, #3
 1124 005c 4F48     		ldr	r0, .L69
 1125 005e FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 1126              	.LVL67:
 118:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 1127              		.loc 12 118 5 is_stmt 1 view .LVU257
 1128              	.LBB266:
 1129              	.LBI266:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 1130              		.loc 2 51 17 view .LVU258
 1131              	.LBE266:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 1132              		.loc 2 51 26 view .LVU259
 1133              	.LBB271:
 1134              	.LBB267:
 1135              	.LBI267:
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     {
 1136              		.loc 2 43 17 view .LVU260
 1137              	.LBB268:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 1138              		.loc 2 45 9 view .LVU261
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 1139              		.loc 2 45 16 is_stmt 0 view .LVU262
 1140 0062 524B     		ldr	r3, .L69+16
 1141 0064 4FF07C52 		mov	r2, #1056964608
 1142              	.LBE268:
 1143              	.LBE267:
 1144              	.LBE271:
 123:MyNewProject.cpp **** 
 1145              		.loc 12 123 18 view .LVU263
 1146 0068 5149     		ldr	r1, .L69+20
 1147 006a 4C48     		ldr	r0, .L69
 1148              	.LBB272:
 1149              	.LBB270:
 1150              	.LBB269:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 1151              		.loc 2 45 16 view .LVU264
 1152 006c 1A60     		str	r2, [r3]	@ float
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 1153              		.loc 2 46 9 is_stmt 1 view .LVU265
 1154              	.LVL68:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 43


  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 1155              		.loc 2 46 9 is_stmt 0 view .LVU266
 1156              	.LBE269:
 1157              	.LBE270:
 1158              	.LBE272:
 120:MyNewProject.cpp **** 
 1159              		.loc 12 120 5 is_stmt 1 view .LVU267
 1160              	.LBB273:
 1161              	.LBI252:
 1162              		.loc 2 64 17 view .LVU268
 1163              	.LBB254:
 1164              		.loc 2 64 43 view .LVU269
 1165              		.loc 2 64 50 is_stmt 0 view .LVU270
 1166 006e 1F71     		strb	r7, [r3, #4]
 1167              	.LVL69:
 1168              		.loc 2 64 50 view .LVU271
 1169              	.LBE254:
 1170              	.LBE273:
 123:MyNewProject.cpp **** 
 1171              		.loc 12 123 5 is_stmt 1 view .LVU272
 123:MyNewProject.cpp **** 
 1172              		.loc 12 123 18 is_stmt 0 view .LVU273
 1173 0070 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 1174              	.LVL70:
 126:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 1175              		.loc 12 126 5 is_stmt 1 view .LVU274
 1176              	.LBB274:
 1177              	.LBI257:
  75:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
 1178              		.loc 3 75 9 view .LVU275
 1179              	.LBB263:
 1180              	.LBB260:
  79:../../libDaisy//src/per/tim.h ****         {
 1181              		.loc 3 79 27 is_stmt 0 view .LVU276
 1182 0074 4FF0FF32 		mov	r2, #-1
 1183              	.LBE260:
 1184              	.LBE263:
 1185              	.LBE274:
 130:MyNewProject.cpp **** 
 1186              		.loc 12 130 15 view .LVU277
 1187 0078 4E4B     		ldr	r3, .L69+24
 1188 007a 07A9     		add	r1, sp, #28
 1189              	.LVL71:
 133:MyNewProject.cpp ****     // Make sure the timer is off
 1190              		.loc 12 133 15 view .LVU278
 1191 007c 4E48     		ldr	r0, .L69+28
 1192              	.LBB275:
 1193              	.LBB264:
 1194              	.LBB261:
  79:../../libDaisy//src/per/tim.h ****         {
 1195              		.loc 3 79 27 view .LVU279
 1196 007e 0992     		str	r2, [sp, #36]
 1197              	.LVL72:
  79:../../libDaisy//src/per/tim.h ****         {
 1198              		.loc 3 79 27 view .LVU280
 1199              	.LBE261:
 1200              	.LBE264:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 44


 1201              	.LBE275:
 127:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 1202              		.loc 12 127 5 is_stmt 1 view .LVU281
 128:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 1203              		.loc 12 128 5 view .LVU282
 129:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 1204              		.loc 12 129 5 view .LVU283
 130:MyNewProject.cpp **** 
 1205              		.loc 12 130 15 is_stmt 0 view .LVU284
 1206 0080 1960     		str	r1, [r3]
 129:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 1207              		.loc 12 129 23 view .LVU285
 1208 0082 8DF82870 		strb	r7, [sp, #40]
 130:MyNewProject.cpp **** 
 1209              		.loc 12 130 5 is_stmt 1 view .LVU286
 133:MyNewProject.cpp ****     // Make sure the timer is off
 1210              		.loc 12 133 5 view .LVU287
 1211              	.LBB276:
 1212              	.LBB265:
 1213              	.LBB262:
  79:../../libDaisy//src/per/tim.h ****         {
 1214              		.loc 3 79 27 is_stmt 0 view .LVU288
 1215 0086 CDE90755 		strd	r5, r5, [sp, #28]
 1216              	.LBE262:
 1217              	.LBE265:
 1218              	.LBE276:
 133:MyNewProject.cpp ****     // Make sure the timer is off
 1219              		.loc 12 133 15 view .LVU289
 1220 008a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 1221              	.LVL73:
 135:MyNewProject.cpp ****     //*********************************************************************************************
 1222              		.loc 12 135 5 is_stmt 1 view .LVU290
 135:MyNewProject.cpp ****     //*********************************************************************************************
 1223              		.loc 12 135 15 is_stmt 0 view .LVU291
 1224 008e 4A48     		ldr	r0, .L69+28
 1225 0090 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 1226              	.LVL74:
 140:MyNewProject.cpp ****     fbkConfig.InitSingle(A0);
 1227              		.loc 12 140 5 is_stmt 1 view .LVU292
 141:MyNewProject.cpp ****     AdcChannelConfig toneConfig;
 1228              		.loc 12 141 5 view .LVU293
 1229              	.LBB277:
 1230              	.LBI277:
 1231              		.file 17 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 45


  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 46


  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 47


 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 48


 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 49


 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 1232              		.loc 17 294 5 view .LVU294
 1233              	.LBE277:
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 50


 1234              		.loc 17 296 9 view .LVU295
 1235              	.LBB279:
 1236              	.LBB278:
 1237              	.LBI278:
 217:../../libDaisy//src/daisy_core.h **** {
 1238              		.loc 17 217 27 view .LVU296
 1239              	.LBE278:
 1240              	.LBE279:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1241              		.loc 17 219 5 view .LVU297
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1242              		.loc 17 220 5 view .LVU298
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1243              		.loc 17 221 5 view .LVU299
 222:../../libDaisy//src/daisy_core.h **** }
 1244              		.loc 17 222 5 view .LVU300
 222:../../libDaisy//src/daisy_core.h **** }
 1245              		.loc 17 222 5 is_stmt 0 view .LVU301
 1246 0094 8DF81480 		strb	r8, [sp, #20]
 1247 0098 8DF81550 		strb	r5, [sp, #21]
 1248              	.LVL75:
 141:MyNewProject.cpp ****     AdcChannelConfig toneConfig;
 1249              		.loc 12 141 25 view .LVU302
 1250 009c 0BA8     		add	r0, sp, #44
 1251 009e 0599     		ldr	r1, [sp, #20]
 1252 00a0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 1253              	.LVL76:
 142:MyNewProject.cpp ****     toneConfig.InitSingle(A1);
 1254              		.loc 12 142 5 is_stmt 1 view .LVU303
 143:MyNewProject.cpp **** 
 1255              		.loc 12 143 5 view .LVU304
 1256              	.LBB280:
 1257              	.LBI280:
 294:../../libDaisy//src/daisy_core.h ****     {
 1258              		.loc 17 294 5 view .LVU305
 1259              	.LBE280:
 1260              		.loc 17 296 9 view .LVU306
 1261              	.LBB282:
 1262              	.LBB281:
 1263              	.LBI281:
 217:../../libDaisy//src/daisy_core.h **** {
 1264              		.loc 17 217 27 view .LVU307
 1265              	.LBE281:
 1266              	.LBE282:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1267              		.loc 17 219 5 view .LVU308
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1268              		.loc 17 220 5 view .LVU309
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1269              		.loc 17 221 5 view .LVU310
 222:../../libDaisy//src/daisy_core.h **** }
 1270              		.loc 17 222 5 view .LVU311
 222:../../libDaisy//src/daisy_core.h **** }
 1271              		.loc 17 222 5 is_stmt 0 view .LVU312
 1272 00a4 0323     		movs	r3, #3
 1273 00a6 8DF81850 		strb	r5, [sp, #24]
 143:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 51


 1274              		.loc 12 143 26 view .LVU313
 1275 00aa 10A8     		add	r0, sp, #64
 1276 00ac 8DF81930 		strb	r3, [sp, #25]
 1277              	.LVL77:
 143:MyNewProject.cpp **** 
 1278              		.loc 12 143 26 view .LVU314
 1279 00b0 0699     		ldr	r1, [sp, #24]
 1280 00b2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 1281              	.LVL78:
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1282              		.loc 12 146 5 is_stmt 1 view .LVU315
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1283              		.loc 12 146 57 is_stmt 0 view .LVU316
 1284 00b6 0DF12C0E 		add	lr, sp, #44
 1285 00ba 0DF1400C 		add	ip, sp, #64
 1286 00be BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1287 00c2 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1288 00c4 DEF80030 		ldr	r3, [lr]
 1289 00c8 3370     		strb	r3, [r6]
 155:MyNewProject.cpp **** 
 1290              		.loc 12 155 18 view .LVU317
 1291 00ca 25AE     		add	r6, sp, #148
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1292              		.loc 12 146 57 view .LVU318
 1293 00cc BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1294 00d0 CDF8D130 		str	r3, [sp, #209]	@ unaligned
 1295 00d4 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
 1296 00d8 CDF8C500 		str	r0, [sp, #197]	@ unaligned
 1297 00dc CDF8C910 		str	r1, [sp, #201]	@ unaligned
 147:MyNewProject.cpp **** 
 1298              		.loc 12 147 16 view .LVU319
 1299 00e0 2DA9     		add	r1, sp, #180
 1300 00e2 3648     		ldr	r0, .L69+32
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1301              		.loc 12 146 57 view .LVU320
 1302 00e4 CDF8CD20 		str	r2, [sp, #205]	@ unaligned
 147:MyNewProject.cpp **** 
 1303              		.loc 12 147 16 view .LVU321
 1304 00e8 4246     		mov	r2, r8
 146:MyNewProject.cpp ****     hw.adc.Init(configs,2);
 1305              		.loc 12 146 57 view .LVU322
 1306 00ea 8DF8D530 		strb	r3, [sp, #213]
 147:MyNewProject.cpp **** 
 1307              		.loc 12 147 5 is_stmt 1 view .LVU323
 147:MyNewProject.cpp **** 
 1308              		.loc 12 147 16 is_stmt 0 view .LVU324
 1309 00ee 0423     		movs	r3, #4
 1310 00f0 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 1311              	.LVL79:
 149:MyNewProject.cpp ****     fbk.Init(hw.adc.GetPtr(0),hw.AudioSampleRate());
 1312              		.loc 12 149 5 is_stmt 1 view .LVU325
 1313              	.LBB283:
 1314              	.LBI283:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1315              		.loc 6 21 5 view .LVU326
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1316              		.loc 6 21 5 is_stmt 0 view .LVU327
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 52


 1317              	.LBE283:
 150:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 1318              		.loc 12 150 5 is_stmt 1 view .LVU328
 150:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 1319              		.loc 12 150 13 is_stmt 0 view .LVU329
 1320 00f4 2946     		mov	r1, r5
 1321 00f6 3148     		ldr	r0, .L69+32
 1322 00f8 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 1323              	.LVL80:
 1324 00fc 0190     		str	r0, [sp, #4]
 1325 00fe 2748     		ldr	r0, .L69
 1326 0100 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 1327              	.LVL81:
 1328 0104 DFED2E0A 		vldr.32	s1, .L69+36
 1329 0108 0199     		ldr	r1, [sp, #4]
 1330 010a 2B46     		mov	r3, r5
 1331 010c 2A46     		mov	r2, r5
 1332 010e 15A8     		add	r0, sp, #84
 1333 0110 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 1334              	.LVL82:
 151:MyNewProject.cpp **** 
 1335              		.loc 12 151 5 is_stmt 1 view .LVU330
 151:MyNewProject.cpp **** 
 1336              		.loc 12 151 22 is_stmt 0 view .LVU331
 1337 0114 2B4B     		ldr	r3, .L69+40
 1338 0116 0DF1540C 		add	ip, sp, #84
 1339 011a 9FED2B0A 		vldr.32	s0, .L69+44
 1340 011e D3ED000A 		vldr.32	s1, [r3]
 1341 0122 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1342 0126 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1343 0128 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1344 012c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1345 0130 2A46     		mov	r2, r5
 1346 0132 2648     		ldr	r0, .L69+48
 1347 0134 25A9     		add	r1, sp, #148
 1348 0136 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 1349              	.LVL83:
 1350              	.LBB284:
 1351              	.LBI284:
 1352              		.loc 6 23 5 is_stmt 1 view .LVU332
 1353              		.loc 6 23 5 is_stmt 0 view .LVU333
 1354              	.LBE284:
 153:MyNewProject.cpp ****     tne.Init(hw.adc.GetPtr(1),hw.AudioSampleRate());
 1355              		.loc 12 153 5 is_stmt 1 view .LVU334
 1356              	.LBB285:
 1357              	.LBI285:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1358              		.loc 6 21 5 view .LVU335
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1359              		.loc 6 21 5 is_stmt 0 view .LVU336
 1360              	.LBE285:
 154:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 1361              		.loc 12 154 5 is_stmt 1 view .LVU337
 154:MyNewProject.cpp ****     toneKnob.Init(tne,-1.f,1.f,Parameter::LINEAR);
 1362              		.loc 12 154 13 is_stmt 0 view .LVU338
 1363 013a 3946     		mov	r1, r7
 1364 013c 1F48     		ldr	r0, .L69+32
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 53


 1365 013e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 1366              	.LVL84:
 1367 0142 0190     		str	r0, [sp, #4]
 1368 0144 1548     		ldr	r0, .L69
 1369 0146 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 1370              	.LVL85:
 1371 014a DFED1D0A 		vldr.32	s1, .L69+36
 1372 014e 0199     		ldr	r1, [sp, #4]
 1373 0150 2B46     		mov	r3, r5
 1374 0152 2A46     		mov	r2, r5
 1375 0154 1DA8     		add	r0, sp, #116
 1376 0156 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 1377              	.LVL86:
 155:MyNewProject.cpp **** 
 1378              		.loc 12 155 5 is_stmt 1 view .LVU339
 155:MyNewProject.cpp **** 
 1379              		.loc 12 155 18 is_stmt 0 view .LVU340
 1380 015a 0DF1740C 		add	ip, sp, #116
 1381 015e F7EE000A 		vmov.f32	s1, #1.0e+0
 1382 0162 BFEE000A 		vmov.f32	s0, #-1.0e+0
 1383 0166 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1384 016a 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1385 016c 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1386 0170 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1387 0174 2A46     		mov	r2, r5
 1388 0176 25A9     		add	r1, sp, #148
 1389 0178 1548     		ldr	r0, .L69+52
 1390 017a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 1391              	.LVL87:
 1392              	.LBB286:
 1393              	.LBI286:
 1394              		.loc 6 23 5 is_stmt 1 view .LVU341
 1395              		.loc 6 23 5 is_stmt 0 view .LVU342
 1396              	.LBE286:
 161:MyNewProject.cpp ****     hw.adc.Start();
 1397              		.loc 12 161 5 is_stmt 1 view .LVU343
 161:MyNewProject.cpp ****     hw.adc.Start();
 1398              		.loc 12 161 17 is_stmt 0 view .LVU344
 1399 017e 9FED150A 		vldr.32	s0, .L69+56
 1400 0182 1548     		ldr	r0, .L69+60
 1401 0184 FFF7FEFF 		bl	_ZN7daisysp7Balance4InitEf
 1402              	.LVL88:
 162:MyNewProject.cpp **** 
 1403              		.loc 12 162 5 is_stmt 1 view .LVU345
 162:MyNewProject.cpp **** 
 1404              		.loc 12 162 17 is_stmt 0 view .LVU346
 1405 0188 0C48     		ldr	r0, .L69+32
 1406 018a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 1407              	.LVL89:
 164:MyNewProject.cpp ****     
 1408              		.loc 12 164 5 is_stmt 1 view .LVU347
 164:MyNewProject.cpp ****     
 1409              		.loc 12 164 14 is_stmt 0 view .LVU348
 1410 018e FFF7FEFF 		bl	_Z9initDelayv
 1411              	.LVL90:
 1412              	.L67:
 170:MyNewProject.cpp ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 54


 1413              		.loc 12 170 5 is_stmt 1 discriminator 1 view .LVU349
 173:MyNewProject.cpp **** 
 1414              		.loc 12 173 9 discriminator 1 view .LVU350
 173:MyNewProject.cpp **** 
 1415              		.loc 12 173 22 is_stmt 0 discriminator 1 view .LVU351
 1416 0192 0620     		movs	r0, #6
 1417 0194 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 1418              	.LVL91:
 170:MyNewProject.cpp ****     {
 1419              		.loc 12 170 5 is_stmt 1 discriminator 1 view .LVU352
 1420 0198 FBE7     		b	.L67
 1421              	.L70:
 1422 019a 00BF     		.align	2
 1423              	.L69:
 1424 019c 00000000 		.word	.LANCHOR12
 1425 01a0 00007A44 		.word	1148846080
 1426 01a4 00000000 		.word	.LANCHOR7
 1427 01a8 00000000 		.word	.LANCHOR0
 1428 01ac 00000000 		.word	.LANCHOR10
 1429 01b0 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 1430 01b4 00000000 		.word	.LANCHOR13
 1431 01b8 00000000 		.word	.LANCHOR14
 1432 01bc 18000000 		.word	.LANCHOR12+24
 1433 01c0 6F12033B 		.word	990057071
 1434 01c4 00000000 		.word	.LANCHOR15
 1435 01c8 00000000 		.word	0
 1436 01cc 00000000 		.word	.LANCHOR3
 1437 01d0 00000000 		.word	.LANCHOR5
 1438 01d4 00803B47 		.word	1195081728
 1439 01d8 00000000 		.word	.LANCHOR9
 1440              		.cfi_endproc
 1441              	.LFE4801:
 1443              		.section	.text.startup._GLOBAL__sub_I_delayMems,"ax",%progbits
 1444              		.align	1
 1445              		.p2align 2,,3
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv5-d16
 1451              	_GLOBAL__sub_I_delayMems:
 1452              	.LFB5382:
 1453              		.loc 12 286 1 view -0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              	.LBB329:
 1458              	.LBI329:
 1459              		.loc 12 286 1 view .LVU354
 1460              	.LVL92:
 1461              	.LBB330:
   9:MyNewProject.cpp **** 
 1462              		.loc 12 9 54 view .LVU355
 1463              	.LBE330:
 1464              	.LBE329:
 1465              		.loc 12 286 1 is_stmt 0 view .LVU356
 1466 0000 70B5     		push	{r4, r5, r6, lr}
 1467              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 55


 1468              		.cfi_offset 4, -16
 1469              		.cfi_offset 5, -12
 1470              		.cfi_offset 6, -8
 1471              		.cfi_offset 14, -4
 1472              	.LBB380:
 1473              	.LBB378:
   9:MyNewProject.cpp **** 
 1474              		.loc 12 9 43 view .LVU357
 1475 0002 324D     		ldr	r5, .L73
 1476 0004 0020     		movs	r0, #0
 1477 0006 3249     		ldr	r1, .L73+4
 1478              	.LBB331:
 1479              	.LBB332:
 1480              		.file 18 "TapTempo.h"
   1:TapTempo.h    **** /*
   2:TapTempo.h    ****  * Ported from https://github.com/dxinteractive/ArduinoTapTempo/tree/master 
   3:TapTempo.h    ****  * Info from original file below
   4:TapTempo.h    ****  * 
   5:TapTempo.h    ****  * An Arduino library that times consecutive button presses to calculate Beats Per Minute. Corrects
   6:TapTempo.h    ****  * Copyright (c) 2016 Damien Clarke
   7:TapTempo.h    ****  * 
   8:TapTempo.h    ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   9:TapTempo.h    ****  * of this software and associated documentation files (the "Software"), to deal
  10:TapTempo.h    ****  * in the Software without restriction, including without limitation the rights
  11:TapTempo.h    ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  12:TapTempo.h    ****  * copies of the Software, and to permit persons to whom the Software is
  13:TapTempo.h    ****  * furnished to do so, subject to the following conditions:
  14:TapTempo.h    ****  * 
  15:TapTempo.h    ****  * The above copyright notice and this permission notice shall be included in all
  16:TapTempo.h    ****  * copies or substantial portions of the Software.
  17:TapTempo.h    ****  * 
  18:TapTempo.h    ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  19:TapTempo.h    ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  20:TapTempo.h    ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  21:TapTempo.h    ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  22:TapTempo.h    ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  23:TapTempo.h    ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  24:TapTempo.h    ****  * SOFTWARE.  
  25:TapTempo.h    ****  */
  26:TapTempo.h    ****  
  27:TapTempo.h    **** #ifndef TAP_TEMPO_H
  28:TapTempo.h    **** #define TAP_TEMPO_H
  29:TapTempo.h    **** #include <math.h>
  30:TapTempo.h    **** #include "daisy_seed.h"
  31:TapTempo.h    **** 
  32:TapTempo.h    **** class TapTempo
 1481              		.loc 18 32 7 view .LVU358
 1482 0008 0026     		movs	r6, #0
 1483              	.LBE332:
 1484              	.LBE331:
   9:MyNewProject.cpp **** 
 1485              		.loc 12 9 43 view .LVU359
 1486 000a 2A46     		mov	r2, r5
  12:MyNewProject.cpp **** static Balance balance;
 1487              		.loc 12 12 24 view .LVU360
 1488 000c 314C     		ldr	r4, .L73+8
   9:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 56


 1489              		.loc 12 9 43 view .LVU361
 1490 000e FFF7FEFF 		bl	__aeabi_atexit
 1491              	.LVL93:
  11:MyNewProject.cpp **** ToneFilter tone(48000.f);
 1492              		.loc 12 11 8 view .LVU362
 1493 0012 3148     		ldr	r0, .L73+12
 1494 0014 FFF7FEFF 		bl	_ZN6DelayyC1Ev
 1495              	.LVL94:
  12:MyNewProject.cpp **** static Balance balance;
 1496              		.loc 12 12 24 view .LVU363
 1497 0018 9FED300A 		vldr.32	s0, .L73+16
 1498 001c 2046     		mov	r0, r4
 1499 001e FFF7FEFF 		bl	_ZN10ToneFilterC1Ef
 1500              	.LVL95:
  12:MyNewProject.cpp **** static Balance balance;
 1501              		.loc 12 12 12 view .LVU364
 1502 0022 2A46     		mov	r2, r5
 1503 0024 2E49     		ldr	r1, .L73+20
 1504 0026 2046     		mov	r0, r4
 1505 0028 FFF7FEFF 		bl	__aeabi_atexit
 1506              	.LVL96:
 1507              	.LBB338:
 1508              	.LBI338:
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1509              		.loc 1 22 5 is_stmt 1 view .LVU365
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1510              		.loc 1 22 5 is_stmt 0 view .LVU366
 1511              	.LBE338:
  13:MyNewProject.cpp **** TapTempo tapTempo;
 1512              		.loc 12 13 16 view .LVU367
 1513 002c 2A46     		mov	r2, r5
 1514 002e 2D49     		ldr	r1, .L73+24
 1515 0030 2D48     		ldr	r0, .L73+28
 1516              	.LBB339:
 1517              	.LBB333:
 1518              		.loc 18 32 7 view .LVU368
 1519 0032 2E4C     		ldr	r4, .L73+32
 1520              	.LBE333:
 1521              	.LBE339:
  13:MyNewProject.cpp **** TapTempo tapTempo;
 1522              		.loc 12 13 16 view .LVU369
 1523 0034 FFF7FEFF 		bl	__aeabi_atexit
 1524              	.LVL97:
 1525              	.LBB340:
 1526              	.LBI331:
 1527              		.loc 18 32 7 is_stmt 1 view .LVU370
 1528              	.LBB334:
 1529 0038 4FF4FA63 		mov	r3, #2000
 1530 003c 2C4A     		ldr	r2, .L73+36
 1531 003e 2D49     		ldr	r1, .L73+40
 1532 0040 2360     		str	r3, [r4]
 1533 0042 FA23     		movs	r3, #250
 1534 0044 6261     		str	r2, [r4, #20]	@ float
 1535 0046 0322     		movs	r2, #3
 1536 0048 6360     		str	r3, [r4, #4]
 1537 004a 0823     		movs	r3, #8
 1538 004c 2161     		str	r1, [r4, #16]	@ float
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 57


 1539 004e E360     		str	r3, [r4, #12]
 1540 0050 4FF4FA73 		mov	r3, #500
 1541 0054 A260     		str	r2, [r4, #8]
 1542 0056 6362     		str	r3, [r4, #36]
 1543 0058 2676     		strb	r6, [r4, #24]
 1544 005a E661     		str	r6, [r4, #28]
 1545 005c 2662     		str	r6, [r4, #32]
 1546 005e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 1547              	.LVL98:
 1548 0062 0123     		movs	r3, #1
 1549              	.LBE334:
 1550              	.LBE340:
  16:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1551              		.loc 12 16 8 is_stmt 0 view .LVU371
 1552 0064 2A46     		mov	r2, r5
 1553              	.LBB341:
 1554              	.LBB335:
 1555              		.loc 18 32 7 view .LVU372
 1556 0066 A062     		str	r0, [r4, #40]
 1557 0068 A4F86030 		strh	r3, [r4, #96]	@ movhi
 1558              	.LVL99:
 1559              		.loc 18 32 7 view .LVU373
 1560              	.LBE335:
 1561              	.LBE341:
 1562              	.LBB342:
 1563              	.LBI342:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1564              		.loc 4 41 5 is_stmt 1 view .LVU374
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1565              		.loc 4 41 5 is_stmt 0 view .LVU375
 1566              	.LBE342:
  16:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1567              		.loc 12 16 8 view .LVU376
 1568 006c 2249     		ldr	r1, .L73+44
 1569              	.LBB343:
 1570              	.LBB336:
 1571              		.loc 18 32 7 view .LVU377
 1572 006e E662     		str	r6, [r4, #44]
 1573              	.LBE336:
 1574              	.LBE343:
  16:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1575              		.loc 12 16 8 view .LVU378
 1576 0070 2248     		ldr	r0, .L73+48
 1577              	.LBB344:
 1578              	.LBB337:
 1579              		.loc 18 32 7 view .LVU379
 1580 0072 C4E91666 		strd	r6, r6, [r4, #88]
 1581              	.LBE337:
 1582              	.LBE344:
  16:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1583              		.loc 12 16 8 view .LVU380
 1584 0076 FFF7FEFF 		bl	__aeabi_atexit
 1585              	.LVL100:
 1586              	.LBB345:
 1587              	.LBI345:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1588              		.loc 4 41 5 is_stmt 1 view .LVU381
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 58


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1589              		.loc 4 41 5 is_stmt 0 view .LVU382
 1590              	.LBE345:
  17:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
 1591              		.loc 12 17 8 view .LVU383
 1592 007a 2A46     		mov	r2, r5
 1593 007c 1E49     		ldr	r1, .L73+44
 1594 007e 2048     		ldr	r0, .L73+52
 1595 0080 FFF7FEFF 		bl	__aeabi_atexit
 1596              	.LVL101:
  18:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1597              		.loc 12 18 22 is_stmt 1 view .LVU384
  18:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1598              		.loc 12 18 8 is_stmt 0 view .LVU385
 1599 0084 2A46     		mov	r2, r5
 1600 0086 1F49     		ldr	r1, .L73+56
 1601 0088 3046     		mov	r0, r6
 1602 008a FFF7FEFF 		bl	__aeabi_atexit
 1603              	.LVL102:
 1604              	.LBB346:
 1605              	.LBI346:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1606              		.loc 7 21 5 is_stmt 1 view .LVU386
 1607              	.LBB347:
 1608              	.LBB348:
 1609              	.LBI348:
 1610              		.file 19 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 59


  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 60


  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 61


 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1611              		.loc 19 166 5 view .LVU387
 1612              	.LBB349:
 1613              	.LBB350:
 1614              		.loc 19 166 34 is_stmt 0 view .LVU388
 1615 008e 1E48     		ldr	r0, .L73+60
 1616              	.LBE350:
 1617              	.LBE349:
 1618              	.LBE348:
 1619              	.LBE347:
 1620              	.LBE346:
  19:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1621              		.loc 12 19 18 view .LVU389
 1622 0090 2A46     		mov	r2, r5
 1623 0092 1E49     		ldr	r1, .L73+64
 1624              	.LBB364:
 1625              	.LBB363:
 1626              	.LBB353:
 1627              	.LBB352:
 1628              	.LBB351:
 1629              		.loc 19 166 34 view .LVU390
 1630 0094 0660     		str	r6, [r0]
 1631              	.LVL103:
 1632              		.loc 19 166 34 view .LVU391
 1633              	.LBE351:
 1634              	.LBE352:
 1635              	.LBE353:
 1636              	.LBB354:
 1637              	.LBI354:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1638              		.loc 11 95 5 is_stmt 1 view .LVU392
 1639              	.LBB355:
 1640              	.LBB356:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1641              		.loc 11 95 35 is_stmt 0 view .LVU393
 1642 0096 4661     		str	r6, [r0, #20]
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 62


 1643              	.LVL104:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1644              		.loc 11 95 35 view .LVU394
 1645              	.LBE356:
 1646              	.LBE355:
 1647              	.LBE354:
 1648              	.LBB357:
 1649              	.LBI357:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1650              		.loc 10 92 5 is_stmt 1 view .LVU395
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1651              		.loc 10 92 5 is_stmt 0 view .LVU396
 1652              	.LBE357:
 1653              	.LBB358:
 1654              	.LBI358:
 1655              		.file 20 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 63


  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1656              		.loc 20 84 5 is_stmt 1 view .LVU397
 1657              	.LBB359:
 1658              	.LBB360:
 1659              		.loc 20 84 33 is_stmt 0 view .LVU398
 1660 0098 0662     		str	r6, [r0, #32]
 1661              	.LVL105:
 1662              		.loc 20 84 33 view .LVU399
 1663              	.LBE360:
 1664              	.LBE359:
 1665              	.LBE358:
 1666              	.LBB361:
 1667              	.LBI361:
  40:../../libDaisy//src/hid/usb.h **** 
 1668              		.loc 9 40 5 is_stmt 1 view .LVU400
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 64


  40:../../libDaisy//src/hid/usb.h **** 
 1669              		.loc 9 40 5 is_stmt 0 view .LVU401
 1670              	.LBE361:
 1671              	.LBB362:
 1672              	.LBI362:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1673              		.loc 8 77 5 is_stmt 1 view .LVU402
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1674              		.loc 8 77 5 is_stmt 0 view .LVU403
 1675              	.LBE362:
 1676              	.LBE363:
 1677              	.LBE364:
  19:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1678              		.loc 12 19 18 view .LVU404
 1679 009a FFF7FEFF 		bl	__aeabi_atexit
 1680              	.LVL106:
 1681              	.LBB365:
 1682              	.LBI365:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1683              		.loc 2 36 5 is_stmt 1 view .LVU405
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1684              		.loc 2 36 5 is_stmt 0 view .LVU406
 1685              	.LBE365:
  20:MyNewProject.cpp **** 
 1686              		.loc 12 20 18 view .LVU407
 1687 009e 2A46     		mov	r2, r5
 1688 00a0 1B49     		ldr	r1, .L73+68
 1689 00a2 1C48     		ldr	r0, .L73+72
 1690 00a4 FFF7FEFF 		bl	__aeabi_atexit
 1691              	.LVL107:
 1692              	.LBB366:
 1693              	.LBI366:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1694              		.loc 3 97 5 is_stmt 1 view .LVU408
 1695              	.LBB367:
 1696              	.LBB368:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1697              		.loc 3 97 35 is_stmt 0 view .LVU409
 1698 00a8 1B48     		ldr	r0, .L73+76
 1699              	.LBE368:
 1700              	.LBE367:
 1701              	.LBE366:
  30:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1702              		.loc 12 30 13 view .LVU410
 1703 00aa 2A46     		mov	r2, r5
 1704 00ac 1B49     		ldr	r1, .L73+80
 1705              	.LBB371:
 1706              	.LBB370:
 1707              	.LBB369:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1708              		.loc 3 97 35 view .LVU411
 1709 00ae 0660     		str	r6, [r0]
 1710              	.LVL108:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1711              		.loc 3 97 35 view .LVU412
 1712              	.LBE369:
 1713              	.LBE370:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 65


 1714              	.LBE371:
  30:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1715              		.loc 12 30 13 view .LVU413
 1716 00b0 FFF7FEFF 		bl	__aeabi_atexit
 1717              	.LVL109:
 1718              	.LBB372:
 1719              	.LBI372:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1720              		.loc 5 25 5 is_stmt 1 view .LVU414
 1721              	.LBB373:
 1722              	.LBB374:
 1723              	.LBI374:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1724              		.loc 6 21 5 view .LVU415
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1725              		.loc 6 21 5 is_stmt 0 view .LVU416
 1726              	.LBE374:
 1727              	.LBE373:
 1728              	.LBE372:
  32:MyNewProject.cpp **** Parameter toneKnob;
 1729              		.loc 12 32 11 view .LVU417
 1730 00b4 2A46     		mov	r2, r5
 1731 00b6 1A49     		ldr	r1, .L73+84
 1732 00b8 1A48     		ldr	r0, .L73+88
 1733 00ba FFF7FEFF 		bl	__aeabi_atexit
 1734              	.LVL110:
 1735              	.LBB375:
 1736              	.LBI375:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1737              		.loc 5 25 5 is_stmt 1 view .LVU418
 1738              	.LBB376:
 1739              	.LBB377:
 1740              	.LBI377:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1741              		.loc 6 21 5 view .LVU419
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1742              		.loc 6 21 5 is_stmt 0 view .LVU420
 1743              	.LBE377:
 1744              	.LBE376:
 1745              	.LBE375:
  33:MyNewProject.cpp **** 
 1746              		.loc 12 33 11 view .LVU421
 1747 00be 2A46     		mov	r2, r5
 1748 00c0 1749     		ldr	r1, .L73+84
 1749 00c2 1948     		ldr	r0, .L73+92
 1750              	.LBE378:
 1751              	.LBE380:
 1752              		.loc 12 286 1 view .LVU422
 1753 00c4 BDE87040 		pop	{r4, r5, r6, lr}
 1754              		.cfi_restore 14
 1755              		.cfi_restore 6
 1756              		.cfi_restore 5
 1757              		.cfi_restore 4
 1758              		.cfi_def_cfa_offset 0
 1759              	.LBB381:
 1760              	.LBB379:
  33:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 66


 1761              		.loc 12 33 11 view .LVU423
 1762 00c8 FFF7FEBF 		b	__aeabi_atexit
 1763              	.LVL111:
 1764              	.L74:
 1765              		.align	2
 1766              	.L73:
 1767 00cc 00000000 		.word	__dso_handle
 1768 00d0 00000000 		.word	__tcf_0
 1769 00d4 00000000 		.word	.LANCHOR6
 1770 00d8 00000000 		.word	.LANCHOR4
 1771 00dc 00803B47 		.word	1195081728
 1772 00e0 00000000 		.word	_ZN10ToneFilterD1Ev
 1773 00e4 00000000 		.word	_ZN7daisysp7BalanceD1Ev
 1774 00e8 00000000 		.word	.LANCHOR9
 1775 00ec 00000000 		.word	.LANCHOR1
 1776 00f0 00003040 		.word	1076887552
 1777 00f4 0000E03F 		.word	1071644672
 1778 00f8 00000000 		.word	_ZN5daisy6SwitchD1Ev
 1779 00fc 00000000 		.word	.LANCHOR7
 1780 0100 00000000 		.word	.LANCHOR0
 1781 0104 00000000 		.word	__tcf_1
 1782 0108 00000000 		.word	.LANCHOR12
 1783 010c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1784 0110 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 1785 0114 00000000 		.word	.LANCHOR10
 1786 0118 00000000 		.word	.LANCHOR14
 1787 011c 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 1788 0120 00000000 		.word	_ZN5daisy9ParameterD1Ev
 1789 0124 00000000 		.word	.LANCHOR3
 1790 0128 00000000 		.word	.LANCHOR5
 1791              	.LBE379:
 1792              	.LBE381:
 1793              		.cfi_endproc
 1794              	.LFE5382:
 1796              		.section	.init_array,"aw",%init_array
 1797              		.align	2
 1798 0000 00000000 		.word	_GLOBAL__sub_I_delayMems(target1)
 1799              		.global	toneKnob
 1800              		.global	feedbackKnob
 1801              		.global	configPtr
 1802              		.global	TIMER
 1803              		.global	TAPPING
 1804              		.global	BPM
 1805              		.global	onButtonWasPressed
 1806              		.global	drywet_ratio
 1807              		.global	MAX_FEEDBACK
 1808              		.global	headSwitches
 1809              		.global	TEMPO_BUTTON
 1810              		.global	ON_BUTTON
 1811              		.global	tapTempo
 1812              		.global	tone
 1813              		.global	delay
 1814              		.global	delayMems
 1815              		.section	.bss.ON_BUTTON,"aw",%nobits
 1816              		.align	2
 1817              		.set	.LANCHOR7,. + 0
 1820              	ON_BUTTON:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 67


 1821 0000 00000000 		.space	16
 1821      00000000 
 1821      00000000 
 1821      00000000 
 1822              		.section	.bss.TAPPING,"aw",%nobits
 1825              	TAPPING:
 1826 0000 00       		.space	1
 1827              		.section	.bss.TEMPO_BUTTON,"aw",%nobits
 1828              		.align	2
 1829              		.set	.LANCHOR0,. + 0
 1832              	TEMPO_BUTTON:
 1833 0000 00000000 		.space	16
 1833      00000000 
 1833      00000000 
 1833      00000000 
 1834              		.section	.bss.TIMER,"aw",%nobits
 1835              		.align	2
 1836              		.set	.LANCHOR14,. + 0
 1839              	TIMER:
 1840 0000 00000000 		.space	4
 1841              		.section	.bss._ZL2hw,"aw",%nobits
 1842              		.align	2
 1843              		.set	.LANCHOR12,. + 0
 1846              	_ZL2hw:
 1847 0000 00000000 		.space	60
 1847      00000000 
 1847      00000000 
 1847      00000000 
 1847      00000000 
 1848              		.section	.bss._ZL5cfade,"aw",%nobits
 1849              		.align	2
 1850              		.set	.LANCHOR10,. + 0
 1853              	_ZL5cfade:
 1854 0000 00000000 		.space	8
 1854      00000000 
 1855              		.section	.bss._ZL7balance,"aw",%nobits
 1856              		.align	2
 1857              		.set	.LANCHOR9,. + 0
 1860              	_ZL7balance:
 1861 0000 00000000 		.space	28
 1861      00000000 
 1861      00000000 
 1861      00000000 
 1861      00000000 
 1862              		.section	.bss.configPtr,"aw",%nobits
 1863              		.align	2
 1864              		.set	.LANCHOR13,. + 0
 1867              	configPtr:
 1868 0000 00000000 		.space	4
 1869              		.section	.bss.delay,"aw",%nobits
 1870              		.align	2
 1871              		.set	.LANCHOR4,. + 0
 1874              	delay:
 1875 0000 00000000 		.space	76
 1875      00000000 
 1875      00000000 
 1875      00000000 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 68


 1875      00000000 
 1876              		.section	.bss.feedbackKnob,"aw",%nobits
 1877              		.align	2
 1878              		.set	.LANCHOR3,. + 0
 1881              	feedbackKnob:
 1882 0000 00000000 		.space	56
 1882      00000000 
 1882      00000000 
 1882      00000000 
 1882      00000000 
 1883              		.section	.bss.headSwitches,"aw",%nobits
 1884              		.align	2
 1885              		.set	.LANCHOR2,. + 0
 1888              	headSwitches:
 1889 0000 00000000 		.space	64
 1889      00000000 
 1889      00000000 
 1889      00000000 
 1889      00000000 
 1890              		.section	.bss.onButtonWasPressed,"aw",%nobits
 1891              		.set	.LANCHOR8,. + 0
 1894              	onButtonWasPressed:
 1895 0000 00       		.space	1
 1896              		.section	.bss.tapTempo,"aw",%nobits
 1897              		.align	2
 1898              		.set	.LANCHOR1,. + 0
 1901              	tapTempo:
 1902 0000 00000000 		.space	100
 1902      00000000 
 1902      00000000 
 1902      00000000 
 1902      00000000 
 1903              		.section	.bss.tone,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR6,. + 0
 1908              	tone:
 1909 0000 00000000 		.space	60
 1909      00000000 
 1909      00000000 
 1909      00000000 
 1909      00000000 
 1910              		.section	.bss.toneKnob,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR5,. + 0
 1915              	toneKnob:
 1916 0000 00000000 		.space	56
 1916      00000000 
 1916      00000000 
 1916      00000000 
 1916      00000000 
 1917              		.section	.data.BPM,"aw"
 1918              		.align	2
 1921              	BPM:
 1922 0000 0000A041 		.word	1101004800
 1923              		.section	.data.MAX_FEEDBACK,"aw"
 1924              		.align	2
 1925              		.set	.LANCHOR15,. + 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 69


 1928              	MAX_FEEDBACK:
 1929 0000 CDCC8C3F 		.word	1066192077
 1930              		.section	.data.drywet_ratio,"aw"
 1931              		.align	2
 1932              		.set	.LANCHOR11,. + 0
 1935              	drywet_ratio:
 1936 0000 0000003F 		.word	1056964608
 1937              		.section	.sdram_bss,"aw"
 1938              		.align	2
 1941              	delayMems:
 1942 0000 00000000 		.space	1536048
 1942      00000000 
 1942      00000000 
 1942      00000000 
 1942      00000000 
 1943              		.text
 1944              	.Letext0:
 1945              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1946              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1947              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1948              		.file 24 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1949              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1950              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1951              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1952              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1953              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1954              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1955              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1956              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1957              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1958              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1959              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1960              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1961              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1962              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1963              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1964              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1965              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1966              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1967              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1968              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1969              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1970              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1971              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1972              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1973              		.file 49 "../../DaisySP//Source/Control/adenv.h"
 1974              		.file 50 "../../DaisySP//Source/Utility/dsp.h"
 1975              		.file 51 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1976              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1977              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1978              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1979              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1980              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1981              		.file 57 "../../libDaisy//src/per/sai.h"
 1982              		.file 58 "../../libDaisy//src/hid/logger_impl.h"
 1983              		.file 59 "../../libDaisy//src/util/wav_format.h"
 1984              		.file 60 "../../libDaisy//src/dev/max11300.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 70


 1985              		.file 61 "../../libDaisy//src/hid/logger.h"
 1986              		.file 62 "../../libDaisy//src/per/gpio.h"
 1987              		.file 63 "../../libDaisy//src/dev/sdram.h"
 1988              		.file 64 "Delay.h"
 1989              		.file 65 "../../libDaisy//src/dev/sr_595.h"
 1990              		.file 66 "<built-in>"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 71


DEFINED SYMBOLS
                            *ABS*:00000000 MyNewProject.cpp
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:17     .text._ZN7daisysp7BalanceD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:43     .text._ZN7daisysp9CrossFadeD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:68     .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:93     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:118    .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:149    .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:198    .text.__tcf_0:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:205    .text.__tcf_0:00000000 __tcf_0
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:219    .text._ZN10ToneFilterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:227    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD2Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:227    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD1Ev
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:256    .text.__tcf_1:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:263    .text.__tcf_1:00000000 __tcf_1
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:274    .text._Z10CheckTempov:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:282    .text._Z10CheckTempov:00000000 _Z10CheckTempov
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:337    .text._Z10CheckTempov:00000024 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:343    .text._Z15InitHeadButtonsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:351    .text._Z15InitHeadButtonsv:00000000 _Z15InitHeadButtonsv
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:410    .text._Z15InitHeadButtonsv:00000030 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:416    .rodata._Z15ProcessControlsv.str1.4:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:420    .text._Z15ProcessControlsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:428    .text._Z15ProcessControlsv:00000000 _Z15ProcessControlsv
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:556    .text._Z15ProcessControlsv:00000078 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:566    .rodata._ZL13AudioCallbackPKPKfPPfj.str1.4:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:570    .text._ZL13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:577    .text._ZL13AudioCallbackPKPKfPPfj:00000000 _ZL13AudioCallbackPKPKfPPfj
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:905    .text._ZL13AudioCallbackPKPKfPPfj:00000124 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:919    .text._Z9initDelayv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:927    .text._Z9initDelayv:00000000 _Z9initDelayv
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1013   .text._Z9initDelayv:00000030 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1941   .sdram_bss:00000000 delayMems
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1021   .text.startup.main:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1029   .text.startup.main:00000000 main
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1424   .text.startup.main:0000019c $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1444   .text.startup._GLOBAL__sub_I_delayMems:00000000 $t
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1451   .text.startup._GLOBAL__sub_I_delayMems:00000000 _GLOBAL__sub_I_delayMems
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1767   .text.startup._GLOBAL__sub_I_delayMems:000000cc $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1797   .init_array:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1915   .bss.toneKnob:00000000 toneKnob
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1881   .bss.feedbackKnob:00000000 feedbackKnob
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1867   .bss.configPtr:00000000 configPtr
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1839   .bss.TIMER:00000000 TIMER
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1825   .bss.TAPPING:00000000 TAPPING
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 72


C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1921   .data.BPM:00000000 BPM
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1894   .bss.onButtonWasPressed:00000000 onButtonWasPressed
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1935   .data.drywet_ratio:00000000 drywet_ratio
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1928   .data.MAX_FEEDBACK:00000000 MAX_FEEDBACK
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1888   .bss.headSwitches:00000000 headSwitches
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1832   .bss.TEMPO_BUTTON:00000000 TEMPO_BUTTON
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1820   .bss.ON_BUTTON:00000000 ON_BUTTON
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1901   .bss.tapTempo:00000000 tapTempo
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1908   .bss.tone:00000000 tone
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1874   .bss.delay:00000000 delay
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1816   .bss.ON_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1826   .bss.TAPPING:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1828   .bss.TEMPO_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1835   .bss.TIMER:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1842   .bss._ZL2hw:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1846   .bss._ZL2hw:00000000 _ZL2hw
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1849   .bss._ZL5cfade:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1853   .bss._ZL5cfade:00000000 _ZL5cfade
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1856   .bss._ZL7balance:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1860   .bss._ZL7balance:00000000 _ZL7balance
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1863   .bss.configPtr:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1870   .bss.delay:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1877   .bss.feedbackKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1884   .bss.headSwitches:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1895   .bss.onButtonWasPressed:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1897   .bss.tapTempo:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1904   .bss.tone:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1911   .bss.toneKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1918   .data.BPM:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1924   .data.MAX_FEEDBACK:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1931   .data.drywet_ratio:00000000 $d
C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s:1938   .sdram_bss:00000000 $d
                           .group:00000000 _ZN7daisysp7BalanceD5Ev
                           .group:00000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN10ToneFilterD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Switch8DebounceEv
_ZN8TapTempo6updateEb
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9Parameter7ProcessEv
_ZN6Delayy11setFeedbackERKf
_ZN10ToneFilter7setFreqEf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN6Delayy10toggleHeadERKi
_ZN6Delayy7processEf
_ZN10ToneFilter7processEf
_ZN10ToneFilter9getFactorEv
_ZN7daisysp7Balance7ProcessEff
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN8TapTempo6getBPMEv
_ZN6Delayy6setBPMEf
ARM GAS  C:\Users\vngel\AppData\Local\Temp\cciFNxXe.s 			page 73


_ZN6Delayy7stopAllEv
memset
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle4StopEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZNK5daisy9AdcHandle6GetPtrEh
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy13AnalogControl4InitEPtfbbf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN7daisysp7Balance4InitEf
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy6System5DelayEm
__aeabi_atexit
_ZN6DelayyC1Ev
_ZN10ToneFilterC1Ef
_ZN5daisy6System6GetNowEv
__dso_handle
