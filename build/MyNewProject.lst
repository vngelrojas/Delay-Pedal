ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MyNewProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp9CrossFadeD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp9CrossFadeD2Ev:
  27              	.LVL0:
  28              	.LFB2952:
  29              		.file 1 "../../DaisySP//Source/Dynamics/crossfade.h"
   1:../../DaisySP//Source/Dynamics/crossfade.h **** #pragma once
   2:../../DaisySP//Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../../DaisySP//Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../../DaisySP//Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../../DaisySP//Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../../DaisySP//Source/Dynamics/crossfade.h **** 
   7:../../DaisySP//Source/Dynamics/crossfade.h **** namespace daisysp
   8:../../DaisySP//Source/Dynamics/crossfade.h **** {
   9:../../DaisySP//Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../../DaisySP//Source/Dynamics/crossfade.h **** - LIN = linear
  11:../../DaisySP//Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../../DaisySP//Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../../DaisySP//Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../../DaisySP//Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../../DaisySP//Source/Dynamics/crossfade.h **** */
  16:../../DaisySP//Source/Dynamics/crossfade.h **** enum
  17:../../DaisySP//Source/Dynamics/crossfade.h **** {
  18:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../../DaisySP//Source/Dynamics/crossfade.h **** };
  24:../../DaisySP//Source/Dynamics/crossfade.h **** 
  25:../../DaisySP//Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../../DaisySP//Source/Dynamics/crossfade.h **** 
  27:../../DaisySP//Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../../DaisySP//Source/Dynamics/crossfade.h **** 
  29:../../DaisySP//Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 2


  30:../../DaisySP//Source/Dynamics/crossfade.h **** 
  31:../../DaisySP//Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../../DaisySP//Source/Dynamics/crossfade.h **** */
  33:../../DaisySP//Source/Dynamics/crossfade.h **** class CrossFade
  34:../../DaisySP//Source/Dynamics/crossfade.h **** {
  35:../../DaisySP//Source/Dynamics/crossfade.h ****   public:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  30              		.loc 1 37 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 37 19 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE2952:
  40              		.weak	_ZN7daisysp9CrossFadeD1Ev
  41              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy11TimerHandleD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy11TimerHandleD2Ev:
  52              	.LVL1:
  53              	.LFB3673:
  54              		.file 2 "../../libDaisy//src/per/tim.h"
   1:../../libDaisy//src/per/tim.h **** #pragma once
   2:../../libDaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy//src/per/tim.h **** 
   5:../../libDaisy//src/per/tim.h **** #include <cstdint>
   6:../../libDaisy//src/per/tim.h **** 
   7:../../libDaisy//src/per/tim.h **** namespace daisy
   8:../../libDaisy//src/per/tim.h **** {
   9:../../libDaisy//src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy//src/per/tim.h ****  ** 
  11:../../libDaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy//src/per/tim.h ****  **
  14:../../libDaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy//src/per/tim.h ****  **
  18:../../libDaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy//src/per/tim.h ****  **
  23:../../libDaisy//src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy//src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy//src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy//src/per/tim.h ****  **
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 3


  27:../../libDaisy//src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy//src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy//src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy//src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy//src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../../libDaisy//src/per/tim.h ****  ** @todo HRTIM
  35:../../libDaisy//src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy//src/per/tim.h ****  ** */
  37:../../libDaisy//src/per/tim.h **** class TimerHandle
  38:../../libDaisy//src/per/tim.h **** {
  39:../../libDaisy//src/per/tim.h ****   public:
  40:../../libDaisy//src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy//src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy//src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy//src/per/tim.h ****      */
  44:../../libDaisy//src/per/tim.h ****     struct Config
  45:../../libDaisy//src/per/tim.h ****     {
  46:../../libDaisy//src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy//src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy//src/per/tim.h ****         {
  49:../../libDaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy//src/per/tim.h ****         };
  54:../../libDaisy//src/per/tim.h **** 
  55:../../libDaisy//src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy//src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy//src/per/tim.h ****          ** */
  59:../../libDaisy//src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy//src/per/tim.h ****         {
  61:../../libDaisy//src/per/tim.h ****             UP = 0,
  62:../../libDaisy//src/per/tim.h ****             DOWN,
  63:../../libDaisy//src/per/tim.h ****         };
  64:../../libDaisy//src/per/tim.h **** 
  65:../../libDaisy//src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy//src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy//src/per/tim.h **** 
  68:../../libDaisy//src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy//src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy//src/per/tim.h ****         */
  71:../../libDaisy//src/per/tim.h ****         uint32_t period;
  72:../../libDaisy//src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy//src/per/tim.h **** 
  74:../../libDaisy//src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy//src/per/tim.h ****         Config()
  76:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../../libDaisy//src/per/tim.h ****           dir(CounterDir::UP),
  78:../../libDaisy//src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy//src/per/tim.h ****           enable_irq(false)
  80:../../libDaisy//src/per/tim.h ****         {
  81:../../libDaisy//src/per/tim.h ****         }
  82:../../libDaisy//src/per/tim.h ****     };
  83:../../libDaisy//src/per/tim.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 4


  84:../../libDaisy//src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy//src/per/tim.h ****     enum class Result
  86:../../libDaisy//src/per/tim.h ****     {
  87:../../libDaisy//src/per/tim.h ****         OK,
  88:../../libDaisy//src/per/tim.h ****         ERR,
  89:../../libDaisy//src/per/tim.h ****     };
  90:../../libDaisy//src/per/tim.h **** 
  91:../../libDaisy//src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy//src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy//src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy//src/per/tim.h ****     */
  95:../../libDaisy//src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../../libDaisy//src/per/tim.h **** 
  97:../../libDaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy//src/per/tim.h ****     ~TimerHandle() {}
  55              		.loc 2 100 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 100 21 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE3673:
  65              		.weak	_ZN5daisy11TimerHandleD1Ev
  66              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
  67              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy6SwitchD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy6SwitchD2Ev:
  77              	.LVL2:
  78              	.LFB3866:
  79              		.file 3 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 5


  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  80              		.loc 3 42 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 42 16 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE3866:
  90              		.weak	_ZN5daisy6SwitchD1Ev
  91              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  92              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy9ParameterD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy9ParameterD2Ev:
 102              	.LVL3:
 103              	.LFB3915:
 104              		.file 4 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 6


  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
 105              		.loc 4 27 5 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LBB158:
 111              	.LBI158:
 112              		.file 5 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
 113              		.loc 5 23 5 view .LVU7
 114              		.loc 5 23 5 is_stmt 0 view .LVU8
 115              	.LBE158:
 116              		.loc 4 27 19 view .LVU9
 117 0000 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE3915:
 121              		.weak	_ZN5daisy9ParameterD1Ev
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 7


 122              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
 123 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 124              		.align	1
 125              		.p2align 2,,3
 126              		.weak	_ZN5daisy9DaisySeedD2Ev
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-d16
 132              	_ZN5daisy9DaisySeedD2Ev:
 133              	.LVL4:
 134              	.LFB4783:
 135              		.file 6 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 136              		.loc 6 22 5 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141              	.LBB159:
 142              	.LBI159:
 143              		.file 7 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 8


  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 9


  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 144              		.loc 7 78 5 view .LVU11
 145              		.loc 7 78 5 is_stmt 0 view .LVU12
 146              	.LBE159:
 147              	.LBB160:
 148              	.LBI160:
 149              		.file 8 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 150              		.loc 8 42 5 is_stmt 1 view .LVU13
 151              		.loc 8 42 5 is_stmt 0 view .LVU14
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 10


 152              	.LBE160:
 153              	.LBB161:
 154              	.LBI161:
 155              		.file 9 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 11


  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 156              		.loc 9 93 5 is_stmt 1 view .LVU15
 157              		.loc 9 93 5 is_stmt 0 view .LVU16
 158              	.LBE161:
 159              	.LBB162:
 160              	.LBI162:
 161              		.file 10 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 12


  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 13


  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 162              		.loc 10 96 5 is_stmt 1 view .LVU17
 163              		.loc 10 96 5 is_stmt 0 view .LVU18
 164              	.LBE162:
 165              		.loc 6 22 19 view .LVU19
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE4783:
 170              		.weak	_ZN5daisy9DaisySeedD1Ev
 171              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 172 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 173              		.align	1
 174              		.p2align 2,,3
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-d16
 180              	__tcf_0:
 181              	.LFB5373:
 182              		.file 11 "MyNewProject.cpp"
   1:MyNewProject.cpp **** #include "daisysp.h"
   2:MyNewProject.cpp **** #include "daisy_seed.h"
   3:MyNewProject.cpp **** #include "Delay.h"
   4:MyNewProject.cpp **** 
   5:MyNewProject.cpp **** using namespace daisysp;
   6:MyNewProject.cpp **** using namespace daisy;
   7:MyNewProject.cpp **** using namespace daisy::seed;
   8:MyNewProject.cpp **** 
   9:MyNewProject.cpp **** #define MAX_DELAY static_cast<size_t>(48000 * 3.f) // Max delay of 3 seconds which is 20 bpm
  10:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 14


  11:MyNewProject.cpp **** Switch ON_BUTTON;                                   // The on/off button
  12:MyNewProject.cpp **** Switch TEMPO_BUTTON;                                // The tap tempo button
  13:MyNewProject.cpp **** Switch headSwitches[4];                            // One switch for each head
 183              		.loc 11 13 8 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              		.loc 11 13 8 is_stmt 0 view .LVU21
 189 0000 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE5373:
 193 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 194              		.align	1
 195              		.p2align 2,,3
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv5-d16
 201              	__tcf_1:
 202              	.LFB5377:
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE5377:
 211 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 212              		.align	1
 213              		.p2align 2,,3
 214              		.global	_Z10InitDelaysf
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	_Z10InitDelaysf:
 221              	.LVL5:
 222              	.LFB4796:
  14:MyNewProject.cpp **** static DaisySeed hw;                               // The daisy seed harfware
  15:MyNewProject.cpp **** 
  16:MyNewProject.cpp **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delayMems[4]; // 4 delay heads
  17:MyNewProject.cpp **** static CrossFade cfade;                                 // Used to blend the wet/dry and maintain a
  18:MyNewProject.cpp **** 
  19:MyNewProject.cpp **** struct Delay
  20:MyNewProject.cpp **** {
  21:MyNewProject.cpp ****     DelayLine<float, MAX_DELAY> *delay;        // Will point to a delayMem
  22:MyNewProject.cpp ****     float                        currentDelay; // The current delay 
  23:MyNewProject.cpp ****     float                        delayTarget;  // The delay target that currentDelay will ramp up/d
  24:MyNewProject.cpp ****     float                        feedback;     // Feedback level of the delay
  25:MyNewProject.cpp **** 
  26:MyNewProject.cpp ****     float Process(float in)
  27:MyNewProject.cpp ****     {
  28:MyNewProject.cpp **** 
  29:MyNewProject.cpp ****         float readSample; // Will store a sample from the delay line
  30:MyNewProject.cpp **** 
  31:MyNewProject.cpp ****         // This smoothes out the delay when you turn the delay control?
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 15


  32:MyNewProject.cpp ****         fonepole(currentDelay, delayTarget, .0002f); 
  33:MyNewProject.cpp ****         // Set delay time
  34:MyNewProject.cpp ****         delay->SetDelay(currentDelay);          
  35:MyNewProject.cpp ****         readSample = delay->Read(); // Read in the next sample from the delay line
  36:MyNewProject.cpp **** 
  37:MyNewProject.cpp ****         // Write the readSample * the feedback amount + the input sample into the delay line
  38:MyNewProject.cpp ****         delay->Write((feedback * readSample) + in); 
  39:MyNewProject.cpp ****         
  40:MyNewProject.cpp ****         return readSample;
  41:MyNewProject.cpp ****     }
  42:MyNewProject.cpp **** };
  43:MyNewProject.cpp **** 
  44:MyNewProject.cpp **** Delay DELAYS[4];                  // This creates a delay structure to store delay parameters
  45:MyNewProject.cpp **** bool DELAY_ON[4];                  // Each delay head will be turned on/off independently
  46:MyNewProject.cpp **** float FEEDBACK = 0.8f;            // The feedback parameter for all delays
  47:MyNewProject.cpp **** float MAX_FEEDBACK = 1.1f;         // Max value of feedback knob, maxFeedback=1 -> forever repeats 
  48:MyNewProject.cpp **** float drywet_ratio = 0.5f;        // Drywet_ratio=0.0 is effect off
  49:MyNewProject.cpp **** const float MAX_DELAY_SEC = 3.0f; // Max amount of seconds allowed to get 20 bpm
  50:MyNewProject.cpp **** const float MIN_DELAY_SEC = 0.6f; // Min amount of seconds allowed to get 100 bpm
  51:MyNewProject.cpp **** bool onButtonWasPressed = false;  // Flag for turning on/off delays, replace with onButton.risingEd
  52:MyNewProject.cpp **** volatile float BPM = 20.0f;       // The BPM of delays
  53:MyNewProject.cpp **** volatile bool TAPPING = false;    // True when user is TAPPING
  54:MyNewProject.cpp **** TimerHandle TIMER;                // Timer that will be used to calculate bpm
  55:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
  56:MyNewProject.cpp **** Parameter feedbackKnob;
  57:MyNewProject.cpp **** 
  58:MyNewProject.cpp **** // Initializes all the delays with the current value of hardware
  59:MyNewProject.cpp **** void InitDelays(float samplerate);
  60:MyNewProject.cpp **** // Sets the delays when there is a change
  61:MyNewProject.cpp **** void SetDelays();
  62:MyNewProject.cpp **** // Checks if TAPPING is occuring, updates bpm
  63:MyNewProject.cpp **** void CheckTempo();
  64:MyNewProject.cpp **** // Initialize buttons for the delay heads to the pins we want
  65:MyNewProject.cpp **** void InitHeadButtons();
  66:MyNewProject.cpp **** // Processes the controls and updates values that changed
  67:MyNewProject.cpp **** void ProcessControls();
  68:MyNewProject.cpp **** // Kills all delays (but doesnt delete them from delay line)
  69:MyNewProject.cpp **** void StopAllDelays();
  70:MyNewProject.cpp **** 
  71:MyNewProject.cpp **** static void AudioCallback(AudioHandle::InputBuffer  in,
  72:MyNewProject.cpp ****                           AudioHandle::OutputBuffer out,
  73:MyNewProject.cpp ****                           size_t                    size)
  74:MyNewProject.cpp **** {
  75:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
  76:MyNewProject.cpp ****     {
  77:MyNewProject.cpp ****         // 
  78:MyNewProject.cpp ****         ProcessControls();
  79:MyNewProject.cpp ****         // Check for tempo change
  80:MyNewProject.cpp ****         CheckTempo();
  81:MyNewProject.cpp ****         // Set delays with new bpm
  82:MyNewProject.cpp ****         SetDelays();            
  83:MyNewProject.cpp **** 
  84:MyNewProject.cpp **** 
  85:MyNewProject.cpp ****         ON_BUTTON.Debounce();
  86:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
  87:MyNewProject.cpp ****         if(ON_BUTTON.Pressed() && !onButtonWasPressed)
  88:MyNewProject.cpp ****         {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 16


  89:MyNewProject.cpp ****             onButtonWasPressed = true; // set the flag to indicate that the button was pressed
  90:MyNewProject.cpp ****             StopAllDelays();
  91:MyNewProject.cpp ****         }
  92:MyNewProject.cpp **** 
  93:MyNewProject.cpp ****         // Check if the button was released
  94:MyNewProject.cpp ****         if(!ON_BUTTON.Pressed() && onButtonWasPressed)
  95:MyNewProject.cpp ****         {
  96:MyNewProject.cpp ****             onButtonWasPressed = false; // reset the flag
  97:MyNewProject.cpp ****         }
  98:MyNewProject.cpp **** 
  99:MyNewProject.cpp ****         float final_mix = 0;         // The final float value that will be outputted
 100:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
 101:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 102:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
 103:MyNewProject.cpp **** 
 104:MyNewProject.cpp ****     
 105:MyNewProject.cpp **** 
 106:MyNewProject.cpp ****         // Create the delayed signal for each of the 4 delays
 107:MyNewProject.cpp **** 		for(int d = 0; d < 4; d++)
 108:MyNewProject.cpp ****         {
 109:MyNewProject.cpp **** 		    if(DELAY_ON[d] == true)
 110:MyNewProject.cpp ****             {
 111:MyNewProject.cpp ****                 DELAYS[d].feedback = FEEDBACK;                    // Set the feedback of the delay 
 112:MyNewProject.cpp ****                 all_delay_signals += DELAYS[d].Process(in[0][i]); // Sum all the processed signals
 113:MyNewProject.cpp **** 		    }
 114:MyNewProject.cpp ****             else if(DELAY_ON[d] == false)
 115:MyNewProject.cpp ****             {
 116:MyNewProject.cpp ****                 // delays[d].delay->Reset();
 117:MyNewProject.cpp ****                 // SetDelays();
 118:MyNewProject.cpp ****             }
 119:MyNewProject.cpp ****         }
 120:MyNewProject.cpp **** 
 121:MyNewProject.cpp ****         nonConstInput = in[0][i];
 122:MyNewProject.cpp **** 
 123:MyNewProject.cpp **** 		// Use a crossfade object to maintain a constant power while mixing the delayed/raw audio mix
 124:MyNewProject.cpp **** 		cfade.SetPos(drywet_ratio);
 125:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
 126:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix; // this sends 'final_mix' to the left and right output
 127:MyNewProject.cpp ****     }
 128:MyNewProject.cpp **** }
 129:MyNewProject.cpp **** 
 130:MyNewProject.cpp **** int main(void)
 131:MyNewProject.cpp **** {
 132:MyNewProject.cpp ****     // Initialize seed hardware.
 133:MyNewProject.cpp ****     hw.Init();
 134:MyNewProject.cpp **** 
 135:MyNewProject.cpp ****     // Setting up serial and printing
 136:MyNewProject.cpp ****     hw.StartLog();
 137:MyNewProject.cpp **** 
 138:MyNewProject.cpp ****     // Initialize the button to D28, Pin 35 to be the on/off button
 139:MyNewProject.cpp ****     ON_BUTTON.Init(hw.GetPin(28),1000);
 140:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 141:MyNewProject.cpp ****     TEMPO_BUTTON.Init(hw.GetPin(25),1000);
 142:MyNewProject.cpp ****     // Init the head on/off buttons
 143:MyNewProject.cpp ****     InitHeadButtons();
 144:MyNewProject.cpp **** 
 145:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 17


 146:MyNewProject.cpp ****     //set blocksize.
 147:MyNewProject.cpp ****     hw.SetAudioBlockSize(4);
 148:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 149:MyNewProject.cpp **** 
 150:MyNewProject.cpp ****     // Initialize the delay lines with the same sample rate as the hardware
 151:MyNewProject.cpp ****     InitDelays(hw.AudioSampleRate());
 152:MyNewProject.cpp **** 
 153:MyNewProject.cpp ****     // Set params for CrossFade object
 154:MyNewProject.cpp ****     cfade.Init();
 155:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 156:MyNewProject.cpp ****     cfade.SetCurve(CROSSFADE_CPOW);
 157:MyNewProject.cpp **** 
 158:MyNewProject.cpp ****     // Start callback
 159:MyNewProject.cpp ****     hw.StartAudio(AudioCallback);
 160:MyNewProject.cpp **** 
 161:MyNewProject.cpp ****     //TIMER****************************************************************************************
 162:MyNewProject.cpp ****     TimerHandle::Config config;                             // Config for the timer
 163:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 164:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 165:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 166:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 167:MyNewProject.cpp **** 
 168:MyNewProject.cpp ****     // Init the timer with our config
 169:MyNewProject.cpp ****     TIMER.Init(config);
 170:MyNewProject.cpp ****     // Make sure the timer is off
 171:MyNewProject.cpp ****     TIMER.Stop();
 172:MyNewProject.cpp ****     //*********************************************************************************************
 173:MyNewProject.cpp **** 
 174:MyNewProject.cpp **** 
 175:MyNewProject.cpp ****     //FEEDBACK KNOB INIT*************************************************************
 176:MyNewProject.cpp ****     // Configure the knob to pin D15
 177:MyNewProject.cpp ****     AdcChannelConfig adcConfig;
 178:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 179:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 180:MyNewProject.cpp ****     
 181:MyNewProject.cpp ****     AnalogControl fbk;
 182:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 183:MyNewProject.cpp ****     fbk.Init(hw.adc.GetPtr(0),hw.AudioSampleRate());
 184:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 185:MyNewProject.cpp ****     //*******************************************************************************
 186:MyNewProject.cpp **** 
 187:MyNewProject.cpp ****     hw.adc.Start();
 188:MyNewProject.cpp **** 
 189:MyNewProject.cpp ****     while(1) 
 190:MyNewProject.cpp ****     {
 191:MyNewProject.cpp ****         //Not sure why the delay, taken from the Daisy petal MultiDelay.cpp example
 192:MyNewProject.cpp ****         System::Delay(6);
 193:MyNewProject.cpp **** 
 194:MyNewProject.cpp ****     }
 195:MyNewProject.cpp **** }
 196:MyNewProject.cpp **** 
 197:MyNewProject.cpp **** void InitDelays(float samplerate)
 198:MyNewProject.cpp **** {
 223              		.loc 11 198 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 18


 199:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 227              		.loc 11 199 5 view .LVU23
 228              	.LBB164:
 229              		.loc 11 199 22 view .LVU24
 230              	.LBE164:
 198:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 231              		.loc 11 198 1 is_stmt 0 view .LVU25
 232 0000 70B5     		push	{r4, r5, r6, lr}
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 4, -16
 235              		.cfi_offset 5, -12
 236              		.cfi_offset 6, -8
 237              		.cfi_offset 14, -4
 238 0002 0E4E     		ldr	r6, .L16
 239 0004 0E48     		ldr	r0, .L16+4
 240 0006 0F49     		ldr	r1, .L16+8
 241 0008 06F1400E 		add	lr, r6, #64
 242              	.LVL6:
 243              	.L12:
 244              	.LBB181:
 200:MyNewProject.cpp ****     {
 201:MyNewProject.cpp ****         // Initialize delay
 202:MyNewProject.cpp ****         delayMems[i].Init();
 245              		.loc 11 202 9 is_stmt 1 view .LVU26
 246              	.LBB165:
 247              	.LBI165:
 248              		.file 12 "../../DaisySP//Source/Utility/delayline.h"
   1:../../DaisySP//Source/Utility/delayline.h **** #pragma once
   2:../../DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP//Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP//Source/Utility/delayline.h **** {
   8:../../DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP//Source/Utility/delayline.h **** November 2019
  10:../../DaisySP//Source/Utility/delayline.h **** 
  11:../../DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP//Source/Utility/delayline.h **** 
  13:../../DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../../DaisySP//Source/Utility/delayline.h **** 
  15:../../DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP//Source/Utility/delayline.h **** 
  17:../../DaisySP//Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP//Source/Utility/delayline.h **** */
  19:../../DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../../DaisySP//Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP//Source/Utility/delayline.h **** {
  22:../../DaisySP//Source/Utility/delayline.h ****   public:
  23:../../DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  24:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
  25:../../DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../../DaisySP//Source/Utility/delayline.h ****     */
  27:../../DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
 249              		.loc 12 27 10 view .LVU27
 250              	.LBB166:
 251              	.LBI166:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 19


  28:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../../DaisySP//Source/Utility/delayline.h ****     */
  30:../../DaisySP//Source/Utility/delayline.h ****     void Reset()
 252              		.loc 12 30 10 view .LVU28
 253              	.LBB167:
 254              	.LBB168:
  31:../../DaisySP//Source/Utility/delayline.h ****     {
  32:../../DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
 255              		.loc 12 32 29 view .LVU29
 256 000c 00F10C03 		add	r3, r0, #12
 257              	.LVL7:
 258              	.L10:
  33:../../DaisySP//Source/Utility/delayline.h ****         {
  34:../../DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
 259              		.loc 12 34 22 is_stmt 0 view .LVU30
 260 0010 0022     		movs	r2, #0
 261 0012 43F8042B 		str	r2, [r3], #4	@ float
  32:../../DaisySP//Source/Utility/delayline.h ****         {
 262              		.loc 12 32 9 is_stmt 1 view .LVU31
  32:../../DaisySP//Source/Utility/delayline.h ****         {
 263              		.loc 12 32 29 view .LVU32
 264 0016 8B42     		cmp	r3, r1
 265 0018 FAD1     		bne	.L10
 266              	.LBE168:
 267              	.LBE167:
 268              	.LBE166:
 269              	.LBE165:
 203:MyNewProject.cpp ****         // Point the delay of the Delay object to its corresponding delayMem
 204:MyNewProject.cpp ****         DELAYS[i].delay = &delayMems[i];
 270              		.loc 11 204 25 is_stmt 0 view .LVU33
 271 001a 3060     		str	r0, [r6]
 199:MyNewProject.cpp ****     {
 272              		.loc 11 199 22 view .LVU34
 273 001c 1036     		adds	r6, r6, #16
 205:MyNewProject.cpp ****         // Init the feedback
 206:MyNewProject.cpp **** 	    DELAYS[i].feedback = 0; 
 274              		.loc 11 206 25 view .LVU35
 275 001e 46F8042C 		str	r2, [r6, #-4]	@ float
 276              	.LBB177:
 277              	.LBB173:
 278              	.LBB169:
  35:../../DaisySP//Source/Utility/delayline.h ****         }
  36:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
  37:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 279              		.loc 12 37 20 view .LVU36
 280 0022 0125     		movs	r5, #1
 281              	.LBE169:
 282              	.LBE173:
 283              	.LBE177:
 199:MyNewProject.cpp ****     {
 284              		.loc 11 199 22 view .LVU37
 285 0024 084C     		ldr	r4, .L16+12
 286              	.LBB178:
 287              	.LBB174:
 288              	.LBB170:
  36:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 289              		.loc 12 36 20 view .LVU38
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 20


 290 0026 0022     		movs	r2, #0
 291              	.LBE170:
 292              	.LBE174:
 293              	.LBE178:
 199:MyNewProject.cpp ****     {
 294              		.loc 11 199 22 view .LVU39
 295 0028 7645     		cmp	r6, lr
 296              	.LBB179:
 297              	.LBB175:
 298              	.LBB171:
 299              		.loc 12 37 20 view .LVU40
 300 002a 8560     		str	r5, [r0, #8]
 301              	.LVL8:
 302              		.loc 12 37 20 view .LVU41
 303              	.LBE171:
 304              	.LBE175:
 305              	.LBE179:
 204:MyNewProject.cpp ****         // Init the feedback
 306              		.loc 11 204 9 is_stmt 1 view .LVU42
 307              		.loc 11 206 6 view .LVU43
 207:MyNewProject.cpp ****         // Make sure they are all off
 208:MyNewProject.cpp ****         DELAY_ON[i] = false;
 308              		.loc 11 208 9 view .LVU44
 199:MyNewProject.cpp ****     {
 309              		.loc 11 199 5 view .LVU45
 199:MyNewProject.cpp ****     {
 310              		.loc 11 199 22 view .LVU46
 311              	.LBB180:
 312              	.LBB176:
 313              	.LBB172:
  36:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 314              		.loc 12 36 20 is_stmt 0 view .LVU47
 315 002c 4260     		str	r2, [r0, #4]
 316              	.LBE172:
 317              	.LBE176:
 318              	.LBE180:
 199:MyNewProject.cpp ****     {
 319              		.loc 11 199 22 view .LVU48
 320 002e 03EB0401 		add	r1, r3, r4
 321 0032 2044     		add	r0, r0, r4
 322 0034 EAD1     		bne	.L12
 323              		.loc 11 208 21 view .LVU49
 324 0036 054B     		ldr	r3, .L16+16
 325 0038 1A60     		str	r2, [r3]
 326              	.LBE181:
 209:MyNewProject.cpp ****     }
 210:MyNewProject.cpp **** }
 327              		.loc 11 210 1 view .LVU50
 328 003a 70BD     		pop	{r4, r5, r6, pc}
 329              	.L17:
 330              		.align	2
 331              	.L16:
 332 003c 00000000 		.word	.LANCHOR0
 333 0040 00000000 		.word	delayMems
 334 0044 0CCA0800 		.word	delayMems+576012
 335 0048 0CCA0800 		.word	576012
 336 004c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 21


 337              		.cfi_endproc
 338              	.LFE4796:
 340              		.section	.text._Z9SetDelaysv,"ax",%progbits
 341              		.align	1
 342              		.p2align 2,,3
 343              		.global	_Z9SetDelaysv
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv5-d16
 349              	_Z9SetDelaysv:
 350              	.LFB4797:
 211:MyNewProject.cpp **** 
 212:MyNewProject.cpp **** void SetDelays()
 213:MyNewProject.cpp **** {
 351              		.loc 11 213 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 356              		.loc 11 214 5 view .LVU52
 357              	.LVL9:
 358              	.LBB183:
 359              		.loc 11 214 22 view .LVU53
 360 0000 134A     		ldr	r2, .L21+8
 361              		.loc 11 214 13 is_stmt 0 view .LVU54
 362 0002 0023     		movs	r3, #0
 363 0004 1349     		ldr	r1, .L21+12
 364              	.LVL10:
 365              	.L19:
 215:MyNewProject.cpp ****     {
 216:MyNewProject.cpp **** 	    //The (i+0.25-i*0.75) just sets the delay intervals to 
 217:MyNewProject.cpp ****         // (1/16 note, 1/8 note, dotted 1/8 note, 1/4 note - or 0.25,0.5,0.75,1) for i=0,1,2,3
 218:MyNewProject.cpp ****         // The 2880000/BPM sets BPM of delay 
 219:MyNewProject.cpp **** 	    DELAYS[i].delayTarget = (i+0.25-i*0.75)* 2880000/BPM;
 366              		.loc 11 219 6 is_stmt 1 discriminator 2 view .LVU55
 367              		.loc 11 219 32 is_stmt 0 discriminator 2 view .LVU56
 368 0006 07EE903A 		vmov	s15, r3	@ int
 369              		.loc 11 219 37 discriminator 2 view .LVU57
 370 000a B6EE083B 		vmov.f64	d3, #7.5e-1
 371              		.loc 11 219 55 discriminator 2 view .LVU58
 372 000e 91ED005A 		vldr.32	s10, [r1]
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 373              		.loc 11 214 5 discriminator 2 view .LVU59
 374 0012 0133     		adds	r3, r3, #1
 375              	.LVL11:
 376              		.loc 11 219 32 discriminator 2 view .LVU60
 377 0014 B8EEE76B 		vcvt.f64.s32	d6, s15
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 378              		.loc 11 214 22 discriminator 2 view .LVU61
 379 0018 1032     		adds	r2, r2, #16
 380              		.loc 11 219 32 discriminator 2 view .LVU62
 381 001a B5EE007B 		vmov.f64	d7, #2.5e-1
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 382              		.loc 11 214 22 discriminator 2 view .LVU63
 383 001e 042B     		cmp	r3, #4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 22


 384              		.loc 11 219 55 discriminator 2 view .LVU64
 385 0020 B7EEC55A 		vcvt.f64.f32	d5, s10
 386              		.loc 11 219 32 discriminator 2 view .LVU65
 387 0024 36EE077B 		vadd.f64	d7, d6, d7
 388              		.loc 11 219 45 discriminator 2 view .LVU66
 389 0028 9FED074B 		vldr.64	d4, .L21
 390              		.loc 11 219 37 discriminator 2 view .LVU67
 391 002c A6EE437B 		vfms.f64	d7, d6, d3
 392              		.loc 11 219 45 discriminator 2 view .LVU68
 393 0030 27EE047B 		vmul.f64	d7, d7, d4
 394              		.loc 11 219 54 discriminator 2 view .LVU69
 395 0034 87EE056B 		vdiv.f64	d6, d7, d5
 396 0038 B7EEC66B 		vcvt.f32.f64	s12, d6
 397 003c 02ED026A 		vstr.32	s12, [r2, #-8]
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 398              		.loc 11 214 5 is_stmt 1 discriminator 2 view .LVU70
 399              	.LVL12:
 214:MyNewProject.cpp ****     for(int i = 0; i < 4; i++)
 400              		.loc 11 214 22 discriminator 2 view .LVU71
 401 0040 E1D1     		bne	.L19
 402              	.LBE183:
 220:MyNewProject.cpp ****     }
 221:MyNewProject.cpp **** }
 403              		.loc 11 221 1 is_stmt 0 view .LVU72
 404 0042 7047     		bx	lr
 405              	.L22:
 406 0044 AFF30080 		.align	3
 407              	.L21:
 408 0048 00000000 		.word	0
 409 004c 00F94541 		.word	1095104768
 410 0050 00000000 		.word	.LANCHOR0
 411 0054 00000000 		.word	.LANCHOR2
 412              		.cfi_endproc
 413              	.LFE4797:
 415              		.section	.rodata._Z10CheckTempov.str1.4,"aMS",%progbits,1
 416              		.align	2
 417              	.LC0:
 418 0000 556E6465 		.ascii	"Under .6\000"
 418      72202E36 
 418      00
 419              		.section	.text._Z10CheckTempov,"ax",%progbits
 420              		.align	1
 421              		.p2align 2,,3
 422              		.global	_Z10CheckTempov
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu fpv5-d16
 428              	_Z10CheckTempov:
 429              	.LFB4798:
 222:MyNewProject.cpp **** 
 223:MyNewProject.cpp **** void CheckTempo()
 224:MyNewProject.cpp **** {
 430              		.loc 11 224 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 23


 225:MyNewProject.cpp ****     
 226:MyNewProject.cpp **** 
 227:MyNewProject.cpp ****     uint32_t tick;    // The position of the counter when the second tap occurs
 434              		.loc 11 227 5 view .LVU74
 228:MyNewProject.cpp ****     uint32_t freq;    // The frequency of each tick of the timer in Hz.
 435              		.loc 11 228 5 view .LVU75
 229:MyNewProject.cpp ****     float seconds;    // The seconds elapsed between first and second tap
 436              		.loc 11 229 5 view .LVU76
 230:MyNewProject.cpp **** 
 231:MyNewProject.cpp **** 
 232:MyNewProject.cpp ****     tick = TIMER.GetTick();            
 437              		.loc 11 232 5 view .LVU77
 224:MyNewProject.cpp ****     
 438              		.loc 11 224 1 is_stmt 0 view .LVU78
 439 0000 10B5     		push	{r4, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 443              		.loc 11 232 25 view .LVU79
 444 0002 3548     		ldr	r0, .L42
 224:MyNewProject.cpp ****     
 445              		.loc 11 224 1 view .LVU80
 446 0004 2DED028B 		vpush.64	{d8}
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 80, -16
 449              		.cfi_offset 81, -12
 450              		.loc 11 232 25 view .LVU81
 451 0008 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetTickEv
 452              	.LVL13:
 453 000c 0346     		mov	r3, r0
 233:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 454              		.loc 11 233 25 view .LVU82
 455 000e 3248     		ldr	r0, .L42
 232:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 456              		.loc 11 232 25 view .LVU83
 457 0010 08EE103A 		vmov	s16, r3	@ int
 458              	.LVL14:
 459              		.loc 11 233 5 is_stmt 1 view .LVU84
 460              		.loc 11 233 25 is_stmt 0 view .LVU85
 461 0014 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetFreqEv
 462              	.LVL15:
 234:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 463              		.loc 11 234 5 is_stmt 1 view .LVU86
 464              		.loc 11 234 29 is_stmt 0 view .LVU87
 465 0018 07EE900A 		vmov	s15, r0	@ int
 235:MyNewProject.cpp **** 
 236:MyNewProject.cpp ****     //Check if the timer has gone past our max delay, if so, abandon this tap tempo and keep the ol
 237:MyNewProject.cpp ****     if(seconds > MAX_DELAY_SEC && TAPPING)
 466              		.loc 11 237 32 view .LVU88
 467 001c B0EE087A 		vmov.f32	s14, #3.0e+0
 234:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 468              		.loc 11 234 15 view .LVU89
 469 0020 B8EE488A 		vcvt.f32.u32	s16, s16
 470              	.LVL16:
 234:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 471              		.loc 11 234 29 view .LVU90
 472 0024 F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 24


 234:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 473              		.loc 11 234 13 view .LVU91
 474 0028 C8EE278A 		vdiv.f32	s17, s16, s15
 475              	.LVL17:
 476              		.loc 11 237 5 is_stmt 1 view .LVU92
 477              		.loc 11 237 32 is_stmt 0 view .LVU93
 478 002c F4EEC78A 		vcmpe.f32	s17, s14
 479 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 480 0034 02DD     		ble	.L24
 481              		.loc 11 237 35 discriminator 1 view .LVU94
 482 0036 294C     		ldr	r4, .L42+4
 483 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 484              		.loc 11 237 32 discriminator 1 view .LVU95
 485 003a 73BB     		cbnz	r3, .L40
 486              	.LVL18:
 487              	.L24:
 238:MyNewProject.cpp ****     {
 239:MyNewProject.cpp ****         //hw.PrintLine("Over 3 sec");
 240:MyNewProject.cpp ****         TIMER.DeInit();
 241:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 242:MyNewProject.cpp **** 
 243:MyNewProject.cpp ****         // Turn the timer off
 244:MyNewProject.cpp ****         TIMER.Stop();
 245:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 246:MyNewProject.cpp ****     }
 247:MyNewProject.cpp **** 
 248:MyNewProject.cpp ****     // Check if the button was clicked
 249:MyNewProject.cpp ****     TEMPO_BUTTON.Debounce();
 488              		.loc 11 249 5 is_stmt 1 view .LVU96
 489              		.loc 11 249 26 is_stmt 0 view .LVU97
 490 003c 284C     		ldr	r4, .L42+8
 491 003e 2046     		mov	r0, r4
 492 0040 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 493              	.LVL19:
 250:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 494              		.loc 11 250 5 is_stmt 1 view .LVU98
 495              	.LBB184:
 496              	.LBI184:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 25


  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 497              		.loc 3 70 17 view .LVU99
 498              	.LBB185:
 499              		.loc 3 70 38 view .LVU100
 500              		.loc 3 70 54 is_stmt 0 view .LVU101
 501 0044 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 502 0046 2BB3     		cbz	r3, .L23
 503              	.LVL20:
 504              		.loc 3 70 54 view .LVU102
 505              	.LBE185:
 506              	.LBE184:
 507              		.loc 11 250 5 view .LVU103
 508 0048 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 509 004a 7F2B     		cmp	r3, #127
 510 004c 22D1     		bne	.L23
 251:MyNewProject.cpp ****     {
 252:MyNewProject.cpp ****         // The first tap
 253:MyNewProject.cpp ****         if(TAPPING == false)
 511              		.loc 11 253 9 is_stmt 1 view .LVU104
 512              		.loc 11 253 20 is_stmt 0 view .LVU105
 513 004e 234B     		ldr	r3, .L42+4
 514 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 515              		.loc 11 253 9 view .LVU106
 516 0052 82B3     		cbz	r2, .L41
 254:MyNewProject.cpp ****         {
 255:MyNewProject.cpp ****             TAPPING = true; // Set the TAPPING flag
 256:MyNewProject.cpp **** 
 257:MyNewProject.cpp ****             // Start the timer and begin counting
 258:MyNewProject.cpp ****             TIMER.Start(); 
 259:MyNewProject.cpp **** 
 260:MyNewProject.cpp **** 
 261:MyNewProject.cpp ****         }
 262:MyNewProject.cpp ****         // The second tap
 263:MyNewProject.cpp ****         else 
 264:MyNewProject.cpp ****         {
 265:MyNewProject.cpp ****             TAPPING = false; // Reset TAPPING flag
 517              		.loc 11 265 13 is_stmt 1 view .LVU107
 518              		.loc 11 265 21 is_stmt 0 view .LVU108
 519 0054 0022     		movs	r2, #0
 266:MyNewProject.cpp **** 
 267:MyNewProject.cpp ****             // Stop the timer
 268:MyNewProject.cpp ****             TIMER.Stop();
 520              		.loc 11 268 23 view .LVU109
 521 0056 2048     		ldr	r0, .L42
 265:MyNewProject.cpp **** 
 522              		.loc 11 265 21 view .LVU110
 523 0058 1A70     		strb	r2, [r3]
 524              		.loc 11 268 13 is_stmt 1 view .LVU111
 525              		.loc 11 268 23 is_stmt 0 view .LVU112
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 26


 526 005a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 527              	.LVL21:
 269:MyNewProject.cpp ****             TIMER.DeInit();
 528              		.loc 11 269 13 is_stmt 1 view .LVU113
 529              		.loc 11 269 25 is_stmt 0 view .LVU114
 530 005e 1E48     		ldr	r0, .L42
 531 0060 FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 532              	.LVL22:
 270:MyNewProject.cpp ****             TIMER.Init(*configPtr);
 533              		.loc 11 270 13 is_stmt 1 view .LVU115
 534              		.loc 11 270 23 is_stmt 0 view .LVU116
 535 0064 1F4B     		ldr	r3, .L42+12
 536 0066 1C48     		ldr	r0, .L42
 537 0068 1968     		ldr	r1, [r3]
 538 006a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 539              	.LVL23:
 271:MyNewProject.cpp ****             // Turn the timer off
 272:MyNewProject.cpp ****             TIMER.Stop();
 540              		.loc 11 272 13 is_stmt 1 view .LVU117
 541              		.loc 11 272 23 is_stmt 0 view .LVU118
 542 006e 1A48     		ldr	r0, .L42
 543 0070 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 544              	.LVL24:
 273:MyNewProject.cpp **** 
 274:MyNewProject.cpp ****             // Only set new BPM if its greater than our minimum
 275:MyNewProject.cpp ****             if(seconds > MIN_DELAY_SEC )
 545              		.loc 11 275 13 is_stmt 1 view .LVU119
 546 0074 DFED1C7A 		vldr.32	s15, .L42+16
 547 0078 F4EEE78A 		vcmpe.f32	s17, s15
 548 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 549 0080 22DD     		ble	.L38
 276:MyNewProject.cpp ****             {
 277:MyNewProject.cpp ****                 BPM = -33.3333f*(seconds)+120; // Set the BPM for the delays 
 550              		.loc 11 277 17 view .LVU120
 551              		.loc 11 277 42 is_stmt 0 view .LVU121
 552 0082 9FED1A7A 		vldr.32	s14, .L42+20
 553 0086 DFED1A7A 		vldr.32	s15, .L42+24
 554              		.loc 11 277 21 view .LVU122
 555 008a 1A4B     		ldr	r3, .L42+28
 556              		.loc 11 277 42 view .LVU123
 557 008c E8EE877A 		vfma.f32	s15, s17, s14
 558              		.loc 11 277 21 view .LVU124
 559 0090 C3ED007A 		vstr.32	s15, [r3]
 560              	.L23:
 278:MyNewProject.cpp ****                 // Set all delays to new bpm
 279:MyNewProject.cpp ****             }
 280:MyNewProject.cpp ****             else
 281:MyNewProject.cpp ****                 hw.PrintLine("Under .6");
 282:MyNewProject.cpp **** 
 283:MyNewProject.cpp **** 
 284:MyNewProject.cpp ****             
 285:MyNewProject.cpp ****         }
 286:MyNewProject.cpp ****     
 287:MyNewProject.cpp **** 
 288:MyNewProject.cpp ****     }
 289:MyNewProject.cpp **** 
 290:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 27


 291:MyNewProject.cpp **** }
 561              		.loc 11 291 1 view .LVU125
 562 0094 BDEC028B 		vldm	sp!, {d8}
 563              		.cfi_remember_state
 564              		.cfi_restore 80
 565              		.cfi_restore 81
 566              		.cfi_def_cfa_offset 8
 567 0098 10BD     		pop	{r4, pc}
 568              	.LVL25:
 569              	.L40:
 570              		.cfi_restore_state
 240:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 571              		.loc 11 240 9 is_stmt 1 view .LVU126
 240:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 572              		.loc 11 240 21 is_stmt 0 view .LVU127
 573 009a 0F48     		ldr	r0, .L42
 574              	.LVL26:
 240:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 575              		.loc 11 240 21 view .LVU128
 576 009c FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 577              	.LVL27:
 241:MyNewProject.cpp **** 
 578              		.loc 11 241 9 is_stmt 1 view .LVU129
 241:MyNewProject.cpp **** 
 579              		.loc 11 241 19 is_stmt 0 view .LVU130
 580 00a0 104B     		ldr	r3, .L42+12
 581 00a2 0D48     		ldr	r0, .L42
 582 00a4 1968     		ldr	r1, [r3]
 583 00a6 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 584              	.LVL28:
 244:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 585              		.loc 11 244 9 is_stmt 1 view .LVU131
 244:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 586              		.loc 11 244 19 is_stmt 0 view .LVU132
 587 00aa 0B48     		ldr	r0, .L42
 588 00ac FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 589              	.LVL29:
 245:MyNewProject.cpp ****     }
 590              		.loc 11 245 9 is_stmt 1 view .LVU133
 245:MyNewProject.cpp ****     }
 591              		.loc 11 245 17 is_stmt 0 view .LVU134
 592 00b0 0023     		movs	r3, #0
 593 00b2 2370     		strb	r3, [r4]
 594 00b4 C2E7     		b	.L24
 595              	.L41:
 255:MyNewProject.cpp **** 
 596              		.loc 11 255 13 is_stmt 1 view .LVU135
 597              		.loc 11 291 1 is_stmt 0 view .LVU136
 598 00b6 BDEC028B 		vldm	sp!, {d8}
 599              		.cfi_remember_state
 600              		.cfi_restore 80
 601              		.cfi_restore 81
 602              		.cfi_def_cfa_offset 8
 255:MyNewProject.cpp **** 
 603              		.loc 11 255 21 view .LVU137
 604 00ba 0122     		movs	r2, #1
 258:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 28


 605              		.loc 11 258 24 view .LVU138
 606 00bc 0648     		ldr	r0, .L42
 607              		.loc 11 291 1 view .LVU139
 608 00be BDE81040 		pop	{r4, lr}
 609              		.cfi_restore 14
 610              		.cfi_restore 4
 611              		.cfi_def_cfa_offset 0
 255:MyNewProject.cpp **** 
 612              		.loc 11 255 21 view .LVU140
 613 00c2 1A70     		strb	r2, [r3]
 258:MyNewProject.cpp **** 
 614              		.loc 11 258 13 is_stmt 1 view .LVU141
 258:MyNewProject.cpp **** 
 615              		.loc 11 258 24 is_stmt 0 view .LVU142
 616 00c4 FFF7FEBF 		b	_ZN5daisy11TimerHandle5StartEv
 617              	.LVL30:
 618              	.L38:
 619              		.cfi_restore_state
 281:MyNewProject.cpp **** 
 620              		.loc 11 281 17 is_stmt 1 view .LVU143
 621              	.LBB186:
 622              	.LBI186:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 29


  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 30


 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 623              		.loc 6 119 17 view .LVU144
 624              	.LBE186:
 625              		.loc 11 291 1 is_stmt 0 view .LVU145
 626 00c8 BDEC028B 		vldm	sp!, {d8}
 627              		.cfi_restore 80
 628              		.cfi_restore 81
 629              		.cfi_def_cfa_offset 8
 630              	.LBB189:
 631              	.LBB187:
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 632              		.loc 6 121 23 view .LVU146
 633 00cc 0A48     		ldr	r0, .L42+32
 634              	.LBE187:
 635              	.LBE189:
 636              		.loc 11 291 1 view .LVU147
 637 00ce BDE81040 		pop	{r4, lr}
 638              		.cfi_restore 14
 639              		.cfi_restore 4
 640              		.cfi_def_cfa_offset 0
 641              	.LBB190:
 642              	.LBB188:
 643              		.loc 6 121 23 view .LVU148
 644 00d2 FFF7FEBF 		b	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 645              	.LVL31:
 646              	.L43:
 647 00d6 00BF     		.align	2
 648              	.L42:
 649 00d8 00000000 		.word	.LANCHOR3
 650 00dc 00000000 		.word	.LANCHOR4
 651 00e0 00000000 		.word	.LANCHOR6
 652 00e4 00000000 		.word	.LANCHOR5
 653 00e8 9A99193F 		.word	1058642330
 654 00ec 4D5505C2 		.word	-1039837875
 655 00f0 0000F042 		.word	1123024896
 656 00f4 00000000 		.word	.LANCHOR2
 657 00f8 00000000 		.word	.LC0
 658              	.LBE188:
 659              	.LBE190:
 660              		.cfi_endproc
 661              	.LFE4798:
 663              		.section	.text._Z15InitHeadButtonsv,"ax",%progbits
 664              		.align	1
 665              		.p2align 2,,3
 666              		.global	_Z15InitHeadButtonsv
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv5-d16
 672              	_Z15InitHeadButtonsv:
 673              	.LFB4799:
 292:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 31


 293:MyNewProject.cpp **** void InitHeadButtons()
 294:MyNewProject.cpp **** {
 674              		.loc 11 294 1 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 295:MyNewProject.cpp ****     // Iterate through head switch array
 296:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 678              		.loc 11 296 5 view .LVU150
 679              	.LVL32:
 680              	.LBB191:
 681              		.loc 11 296 22 view .LVU151
 682              	.LBE191:
 294:MyNewProject.cpp ****     // Iterate through head switch array
 683              		.loc 11 294 1 is_stmt 0 view .LVU152
 684 0000 30B5     		push	{r4, r5, lr}
 685              		.cfi_def_cfa_offset 12
 686              		.cfi_offset 4, -12
 687              		.cfi_offset 5, -8
 688              		.cfi_offset 14, -4
 689 0002 0B4D     		ldr	r5, .L48
 690 0004 83B0     		sub	sp, sp, #12
 691              		.cfi_def_cfa_offset 24
 294:MyNewProject.cpp ****     // Iterate through head switch array
 692              		.loc 11 294 1 view .LVU153
 693 0006 1524     		movs	r4, #21
 694              	.LVL33:
 695              	.L45:
 696              	.LBB192:
 297:MyNewProject.cpp ****     {
 298:MyNewProject.cpp ****         // Init buttons to D21 - D24
 299:MyNewProject.cpp ****         headSwitches[i].Init(hw.GetPin(21+i),1000);
 697              		.loc 11 299 9 is_stmt 1 discriminator 2 view .LVU154
 698              		.loc 11 299 29 is_stmt 0 discriminator 2 view .LVU155
 699 0008 2046     		mov	r0, r4
 296:MyNewProject.cpp ****     {
 700              		.loc 11 296 22 discriminator 2 view .LVU156
 701 000a 0134     		adds	r4, r4, #1
 702              		.loc 11 299 29 discriminator 2 view .LVU157
 703 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 704              	.LVL34:
 705 0010 0346     		mov	r3, r0	@ movhi
 296:MyNewProject.cpp ****     {
 706              		.loc 11 296 22 discriminator 2 view .LVU158
 707 0012 E4B2     		uxtb	r4, r4
 708              		.loc 11 299 29 discriminator 2 view .LVU159
 709 0014 2846     		mov	r0, r5
 710 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
 296:MyNewProject.cpp ****     {
 711              		.loc 11 296 22 discriminator 2 view .LVU160
 712 001a 1035     		adds	r5, r5, #16
 713              		.loc 11 299 29 discriminator 2 view .LVU161
 714 001c 9FED050A 		vldr.32	s0, .L48+4
 715 0020 0199     		ldr	r1, [sp, #4]
 716 0022 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 717              	.LVL35:
 296:MyNewProject.cpp ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 32


 718              		.loc 11 296 5 is_stmt 1 discriminator 2 view .LVU162
 296:MyNewProject.cpp ****     {
 719              		.loc 11 296 22 discriminator 2 view .LVU163
 720 0026 192C     		cmp	r4, #25
 721 0028 EED1     		bne	.L45
 722              	.LBE192:
 300:MyNewProject.cpp ****     }
 301:MyNewProject.cpp **** }
 723              		.loc 11 301 1 is_stmt 0 view .LVU164
 724 002a 03B0     		add	sp, sp, #12
 725              		.cfi_def_cfa_offset 12
 726              		@ sp needed
 727 002c 30BD     		pop	{r4, r5, pc}
 728              	.L49:
 729 002e 00BF     		.align	2
 730              	.L48:
 731 0030 00000000 		.word	.LANCHOR7
 732 0034 00007A44 		.word	1148846080
 733              		.cfi_endproc
 734              	.LFE4799:
 736              		.section	.text.startup.main,"ax",%progbits
 737              		.align	1
 738              		.p2align 2,,3
 739              		.global	main
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv5-d16
 745              	main:
 746              	.LFB4795:
 131:MyNewProject.cpp ****     // Initialize seed hardware.
 747              		.loc 11 131 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ Volatile: function does not return.
 750              		@ args = 0, pretend = 0, frame = 120
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 133:MyNewProject.cpp **** 
 752              		.loc 11 133 5 view .LVU166
 131:MyNewProject.cpp ****     // Initialize seed hardware.
 753              		.loc 11 131 1 is_stmt 0 view .LVU167
 754 0000 00B5     		push	{lr}
 755              		.cfi_def_cfa_offset 4
 756              		.cfi_offset 14, -4
 133:MyNewProject.cpp **** 
 757              		.loc 11 133 12 view .LVU168
 758 0002 0021     		movs	r1, #0
 131:MyNewProject.cpp ****     // Initialize seed hardware.
 759              		.loc 11 131 1 view .LVU169
 760 0004 9FB0     		sub	sp, sp, #124
 761              		.cfi_def_cfa_offset 128
 133:MyNewProject.cpp **** 
 762              		.loc 11 133 12 view .LVU170
 763 0006 4248     		ldr	r0, .L53
 764              	.LBB193:
 765              	.LBB194:
  38:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../../DaisySP//Source/Dynamics/crossfade.h ****         Defaults
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 33


  40:../../DaisySP//Source/Dynamics/crossfade.h ****         - current position = .5
  41:../../DaisySP//Source/Dynamics/crossfade.h ****         - curve = linear
  42:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../../DaisySP//Source/Dynamics/crossfade.h ****     {
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../../DaisySP//Source/Dynamics/crossfade.h ****     }
  48:../../DaisySP//Source/Dynamics/crossfade.h **** 
  49:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  54:../../DaisySP//Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../../DaisySP//Source/Dynamics/crossfade.h **** 
  56:../../DaisySP//Source/Dynamics/crossfade.h **** 
  57:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../../DaisySP//Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
  61:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../../DaisySP//Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  64:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 766              		.loc 1 64 50 view .LVU171
 767 0008 0125     		movs	r5, #1
 768              	.LBE194:
 769              	.LBE193:
 133:MyNewProject.cpp **** 
 770              		.loc 11 133 12 view .LVU172
 771 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 772              	.LVL36:
 136:MyNewProject.cpp **** 
 773              		.loc 11 136 5 is_stmt 1 view .LVU173
 774              	.LBB196:
 775              	.LBI196:
 122:../../libDaisy//src/daisy_seed.h ****     }
 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 776              		.loc 6 126 17 view .LVU174
 777              	.LBB197:
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 778              		.loc 6 128 9 view .LVU175
 779              		.loc 6 128 22 is_stmt 0 view .LVU176
 780 000e 0020     		movs	r0, #0
 781 0010 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 782              	.LVL37:
 783              		.loc 6 128 22 view .LVU177
 784              	.LBE197:
 785              	.LBE196:
 139:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 786              		.loc 11 139 5 is_stmt 1 view .LVU178
 139:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 34


 787              		.loc 11 139 19 is_stmt 0 view .LVU179
 788 0014 1C20     		movs	r0, #28
 789 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 790              	.LVL38:
 791 001a 0346     		mov	r3, r0	@ movhi
 792 001c 9FED3D0A 		vldr.32	s0, .L53+4
 793              	.LBB198:
 794              	.LBB199:
 795              	.LBB200:
  79:../../libDaisy//src/per/tim.h ****         {
 796              		.loc 2 79 27 view .LVU180
 797 0020 0024     		movs	r4, #0
 798              	.LBE200:
 799              	.LBE199:
 800              	.LBE198:
 139:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 801              		.loc 11 139 19 view .LVU181
 802 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 803 0026 0299     		ldr	r1, [sp, #8]
 804 0028 3B48     		ldr	r0, .L53+8
 805 002a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 806              	.LVL39:
 141:MyNewProject.cpp ****     // Init the head on/off buttons
 807              		.loc 11 141 5 is_stmt 1 view .LVU182
 141:MyNewProject.cpp ****     // Init the head on/off buttons
 808              		.loc 11 141 22 is_stmt 0 view .LVU183
 809 002e 1920     		movs	r0, #25
 810 0030 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 811              	.LVL40:
 812 0034 0346     		mov	r3, r0	@ movhi
 813 0036 9FED370A 		vldr.32	s0, .L53+4
 814 003a ADF80C30 		strh	r3, [sp, #12]	@ movhi
 815 003e 3748     		ldr	r0, .L53+12
 816 0040 0399     		ldr	r1, [sp, #12]
 817 0042 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 818              	.LVL41:
 143:MyNewProject.cpp **** 
 819              		.loc 11 143 5 is_stmt 1 view .LVU184
 143:MyNewProject.cpp **** 
 820              		.loc 11 143 20 is_stmt 0 view .LVU185
 821 0046 FFF7FEFF 		bl	_Z15InitHeadButtonsv
 822              	.LVL42:
 147:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 823              		.loc 11 147 5 is_stmt 1 view .LVU186
 147:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 824              		.loc 11 147 25 is_stmt 0 view .LVU187
 825 004a 0421     		movs	r1, #4
 826 004c 3048     		ldr	r0, .L53
 827 004e FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 828              	.LVL43:
 148:MyNewProject.cpp **** 
 829              		.loc 11 148 5 is_stmt 1 view .LVU188
 148:MyNewProject.cpp **** 
 830              		.loc 11 148 26 is_stmt 0 view .LVU189
 831 0052 0321     		movs	r1, #3
 832 0054 2E48     		ldr	r0, .L53
 833 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 35


 834              	.LVL44:
 151:MyNewProject.cpp **** 
 835              		.loc 11 151 5 is_stmt 1 view .LVU190
 151:MyNewProject.cpp **** 
 836              		.loc 11 151 15 is_stmt 0 view .LVU191
 837 005a 2D48     		ldr	r0, .L53
 838 005c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 839              	.LVL45:
 840 0060 FFF7FEFF 		bl	_Z10InitDelaysf
 841              	.LVL46:
 154:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 842              		.loc 11 154 5 is_stmt 1 view .LVU192
 843              	.LBB207:
 844              	.LBI207:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 845              		.loc 1 51 17 view .LVU193
 846              	.LBE207:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 847              		.loc 1 51 26 view .LVU194
 848              	.LBB212:
 849              	.LBB208:
 850              	.LBI208:
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     {
 851              		.loc 1 43 17 view .LVU195
 852              	.LBB209:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 853              		.loc 1 45 9 view .LVU196
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 854              		.loc 1 45 16 is_stmt 0 view .LVU197
 855 0064 2E4B     		ldr	r3, .L53+16
 856 0066 4FF07C52 		mov	r2, #1056964608
 857              	.LBE209:
 858              	.LBE208:
 859              	.LBE212:
 159:MyNewProject.cpp **** 
 860              		.loc 11 159 18 view .LVU198
 861 006a 2E49     		ldr	r1, .L53+20
 862 006c 2848     		ldr	r0, .L53
 863              	.LBB213:
 864              	.LBB211:
 865              	.LBB210:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 866              		.loc 1 45 16 view .LVU199
 867 006e 1A60     		str	r2, [r3]	@ float
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 868              		.loc 1 46 9 is_stmt 1 view .LVU200
 869              	.LVL47:
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 870              		.loc 1 46 9 is_stmt 0 view .LVU201
 871              	.LBE210:
 872              	.LBE211:
 873              	.LBE213:
 156:MyNewProject.cpp **** 
 874              		.loc 11 156 5 is_stmt 1 view .LVU202
 875              	.LBB214:
 876              	.LBI193:
 877              		.loc 1 64 17 view .LVU203
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 36


 878              	.LBB195:
 879              		.loc 1 64 43 view .LVU204
 880              		.loc 1 64 50 is_stmt 0 view .LVU205
 881 0070 1D71     		strb	r5, [r3, #4]
 882              	.LVL48:
 883              		.loc 1 64 50 view .LVU206
 884              	.LBE195:
 885              	.LBE214:
 159:MyNewProject.cpp **** 
 886              		.loc 11 159 5 is_stmt 1 view .LVU207
 159:MyNewProject.cpp **** 
 887              		.loc 11 159 18 is_stmt 0 view .LVU208
 888 0072 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 889              	.LVL49:
 162:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 890              		.loc 11 162 5 is_stmt 1 view .LVU209
 891              	.LBB215:
 892              	.LBI198:
  75:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
 893              		.loc 2 75 9 view .LVU210
 894              	.LBB204:
 895              	.LBB201:
  79:../../libDaisy//src/per/tim.h ****         {
 896              		.loc 2 79 27 is_stmt 0 view .LVU211
 897 0076 4FF0FF32 		mov	r2, #-1
 898              	.LBE201:
 899              	.LBE204:
 900              	.LBE215:
 166:MyNewProject.cpp **** 
 901              		.loc 11 166 15 view .LVU212
 902 007a 2B4B     		ldr	r3, .L53+24
 903 007c 05A9     		add	r1, sp, #20
 904              	.LVL50:
 169:MyNewProject.cpp ****     // Make sure the timer is off
 905              		.loc 11 169 15 view .LVU213
 906 007e 2B48     		ldr	r0, .L53+28
 907              	.LBB216:
 908              	.LBB205:
 909              	.LBB202:
  79:../../libDaisy//src/per/tim.h ****         {
 910              		.loc 2 79 27 view .LVU214
 911 0080 0792     		str	r2, [sp, #28]
 912              	.LVL51:
  79:../../libDaisy//src/per/tim.h ****         {
 913              		.loc 2 79 27 view .LVU215
 914              	.LBE202:
 915              	.LBE205:
 916              	.LBE216:
 163:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 917              		.loc 11 163 5 is_stmt 1 view .LVU216
 164:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 918              		.loc 11 164 5 view .LVU217
 165:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 919              		.loc 11 165 5 view .LVU218
 166:MyNewProject.cpp **** 
 920              		.loc 11 166 15 is_stmt 0 view .LVU219
 921 0082 1960     		str	r1, [r3]
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 37


 165:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 922              		.loc 11 165 23 view .LVU220
 923 0084 8DF82050 		strb	r5, [sp, #32]
 166:MyNewProject.cpp **** 
 924              		.loc 11 166 5 is_stmt 1 view .LVU221
 169:MyNewProject.cpp ****     // Make sure the timer is off
 925              		.loc 11 169 5 view .LVU222
 926              	.LBB217:
 927              	.LBB206:
 928              	.LBB203:
  79:../../libDaisy//src/per/tim.h ****         {
 929              		.loc 2 79 27 is_stmt 0 view .LVU223
 930 0088 CDE90544 		strd	r4, r4, [sp, #20]
 931              	.LBE203:
 932              	.LBE206:
 933              	.LBE217:
 169:MyNewProject.cpp ****     // Make sure the timer is off
 934              		.loc 11 169 15 view .LVU224
 935 008c FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 936              	.LVL52:
 171:MyNewProject.cpp ****     //*********************************************************************************************
 937              		.loc 11 171 5 is_stmt 1 view .LVU225
 171:MyNewProject.cpp ****     //*********************************************************************************************
 938              		.loc 11 171 15 is_stmt 0 view .LVU226
 939 0090 2648     		ldr	r0, .L53+28
 940 0092 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 941              	.LVL53:
 177:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 942              		.loc 11 177 5 is_stmt 1 view .LVU227
 178:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 943              		.loc 11 178 5 view .LVU228
 178:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 944              		.loc 11 178 25 is_stmt 0 view .LVU229
 945 0096 0F20     		movs	r0, #15
 946 0098 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 947              	.LVL54:
 948 009c ADF81000 		strh	r0, [sp, #16]	@ movhi
 949 00a0 0499     		ldr	r1, [sp, #16]
 950 00a2 09A8     		add	r0, sp, #36
 951 00a4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 952              	.LVL55:
 179:MyNewProject.cpp ****     
 953              		.loc 11 179 5 is_stmt 1 view .LVU230
 179:MyNewProject.cpp ****     
 954              		.loc 11 179 16 is_stmt 0 view .LVU231
 955 00a8 0423     		movs	r3, #4
 956 00aa 2A46     		mov	r2, r5
 957 00ac 2048     		ldr	r0, .L53+32
 958 00ae 09A9     		add	r1, sp, #36
 959 00b0 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 960              	.LVL56:
 181:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 961              		.loc 11 181 5 is_stmt 1 view .LVU232
 962              	.LBB218:
 963              	.LBI218:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 964              		.loc 5 21 5 view .LVU233
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 38


  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 965              		.loc 5 21 5 is_stmt 0 view .LVU234
 966              	.LBE218:
 183:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 967              		.loc 11 183 5 is_stmt 1 view .LVU235
 183:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 968              		.loc 11 183 13 is_stmt 0 view .LVU236
 969 00b4 2146     		mov	r1, r4
 970 00b6 1E48     		ldr	r0, .L53+32
 971 00b8 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 972              	.LVL57:
 973 00bc 0146     		mov	r1, r0
 974 00be 1448     		ldr	r0, .L53
 975 00c0 0191     		str	r1, [sp, #4]
 976 00c2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 977              	.LVL58:
 978 00c6 DFED1B0A 		vldr.32	s1, .L53+36
 979 00ca 2346     		mov	r3, r4
 980 00cc 2246     		mov	r2, r4
 981 00ce 0199     		ldr	r1, [sp, #4]
 982 00d0 0EA8     		add	r0, sp, #56
 983 00d2 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 984              	.LVL59:
 184:MyNewProject.cpp ****     //*******************************************************************************
 985              		.loc 11 184 5 is_stmt 1 view .LVU237
 184:MyNewProject.cpp ****     //*******************************************************************************
 986              		.loc 11 184 22 is_stmt 0 view .LVU238
 987 00d6 184B     		ldr	r3, .L53+40
 988 00d8 0DF1380C 		add	ip, sp, #56
 989 00dc 0DF1580E 		add	lr, sp, #88
 990 00e0 D3ED000A 		vldr.32	s1, [r3]
 991 00e4 9FED150A 		vldr.32	s0, .L53+44
 992 00e8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 993 00ec AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 994 00f0 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 995 00f4 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 996 00f8 1148     		ldr	r0, .L53+48
 997 00fa 2246     		mov	r2, r4
 998 00fc 16A9     		add	r1, sp, #88
 999 00fe FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 1000              	.LVL60:
 1001              	.LBB219:
 1002              	.LBI219:
 1003              		.loc 5 23 5 is_stmt 1 view .LVU239
 1004              		.loc 5 23 5 is_stmt 0 view .LVU240
 1005              	.LBE219:
 187:MyNewProject.cpp **** 
 1006              		.loc 11 187 5 is_stmt 1 view .LVU241
 187:MyNewProject.cpp **** 
 1007              		.loc 11 187 17 is_stmt 0 view .LVU242
 1008 0102 0B48     		ldr	r0, .L53+32
 1009 0104 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 1010              	.LVL61:
 1011              	.L51:
 189:MyNewProject.cpp ****     {
 1012              		.loc 11 189 5 is_stmt 1 discriminator 1 view .LVU243
 192:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 39


 1013              		.loc 11 192 9 discriminator 1 view .LVU244
 192:MyNewProject.cpp **** 
 1014              		.loc 11 192 22 is_stmt 0 discriminator 1 view .LVU245
 1015 0108 0620     		movs	r0, #6
 1016 010a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 1017              	.LVL62:
 189:MyNewProject.cpp ****     {
 1018              		.loc 11 189 5 is_stmt 1 discriminator 1 view .LVU246
 1019 010e FBE7     		b	.L51
 1020              	.L54:
 1021              		.align	2
 1022              	.L53:
 1023 0110 00000000 		.word	.LANCHOR8
 1024 0114 00007A44 		.word	1148846080
 1025 0118 00000000 		.word	.LANCHOR9
 1026 011c 00000000 		.word	.LANCHOR6
 1027 0120 00000000 		.word	.LANCHOR10
 1028 0124 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 1029 0128 00000000 		.word	.LANCHOR5
 1030 012c 00000000 		.word	.LANCHOR3
 1031 0130 18000000 		.word	.LANCHOR8+24
 1032 0134 6F12033B 		.word	990057071
 1033 0138 00000000 		.word	.LANCHOR11
 1034 013c 00000000 		.word	0
 1035 0140 00000000 		.word	.LANCHOR12
 1036              		.cfi_endproc
 1037              	.LFE4795:
 1039              		.section	.text._Z15ProcessControlsv,"ax",%progbits
 1040              		.align	1
 1041              		.p2align 2,,3
 1042              		.global	_Z15ProcessControlsv
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv5-d16
 1048              	_Z15ProcessControlsv:
 1049              	.LFB4800:
 302:MyNewProject.cpp **** 
 303:MyNewProject.cpp **** void ProcessControls()
 304:MyNewProject.cpp **** {
 1050              		.loc 11 304 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 305:MyNewProject.cpp ****     FEEDBACK = feedbackKnob.Process();
 1054              		.loc 11 305 5 view .LVU248
 304:MyNewProject.cpp ****     FEEDBACK = feedbackKnob.Process();
 1055              		.loc 11 304 1 is_stmt 0 view .LVU249
 1056 0000 70B5     		push	{r4, r5, r6, lr}
 1057              		.cfi_def_cfa_offset 16
 1058              		.cfi_offset 4, -16
 1059              		.cfi_offset 5, -12
 1060              		.cfi_offset 6, -8
 1061              		.cfi_offset 14, -4
 1062 0002 0D4C     		ldr	r4, .L63
 1063              		.loc 11 305 36 view .LVU250
 1064 0004 0D48     		ldr	r0, .L63+4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 40


 1065 0006 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1066              	.LVL63:
 1067 000a 0D4D     		ldr	r5, .L63+8
 1068              		.loc 11 305 14 view .LVU251
 1069 000c 0D4B     		ldr	r3, .L63+12
 1070 000e 04F14006 		add	r6, r4, #64
 1071 0012 83ED000A 		vstr.32	s0, [r3]
 306:MyNewProject.cpp **** 
 307:MyNewProject.cpp ****     int i;
 1072              		.loc 11 307 5 is_stmt 1 view .LVU252
 308:MyNewProject.cpp ****     for(i = 0; i < 4;i++)
 1073              		.loc 11 308 5 view .LVU253
 1074              	.LVL64:
 1075              		.loc 11 308 18 view .LVU254
 1076              	.L57:
 309:MyNewProject.cpp ****     {
 310:MyNewProject.cpp ****         headSwitches[i].Debounce();
 1077              		.loc 11 310 9 view .LVU255
 1078              		.loc 11 310 33 is_stmt 0 view .LVU256
 1079 0016 2046     		mov	r0, r4
 1080 0018 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 1081              	.LVL65:
 311:MyNewProject.cpp ****         if(headSwitches[i].RisingEdge())
 1082              		.loc 11 311 9 is_stmt 1 view .LVU257
 1083              	.LBB220:
 1084              	.LBI220:
 1085              		.loc 3 70 17 view .LVU258
 1086              	.LBB221:
 1087              		.loc 3 70 38 view .LVU259
 1088              		.loc 3 70 38 is_stmt 0 view .LVU260
 1089              	.LBE221:
 1090              	.LBE220:
 308:MyNewProject.cpp ****     for(i = 0; i < 4;i++)
 1091              		.loc 11 308 5 is_stmt 1 view .LVU261
 308:MyNewProject.cpp ****     for(i = 0; i < 4;i++)
 1092              		.loc 11 308 18 view .LVU262
 1093              	.LBB223:
 1094              	.LBB222:
 1095              		.loc 3 70 54 is_stmt 0 view .LVU263
 1096 001c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1097 001e 33B1     		cbz	r3, .L56
 1098              	.LBE222:
 1099              	.LBE223:
 312:MyNewProject.cpp ****         {
 313:MyNewProject.cpp ****             DELAY_ON[i] = !DELAY_ON[i];
 1100              		.loc 11 313 13 is_stmt 1 view .LVU264
 311:MyNewProject.cpp ****         if(headSwitches[i].RisingEdge())
 1101              		.loc 11 311 9 is_stmt 0 view .LVU265
 1102 0020 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1103 0022 7F2B     		cmp	r3, #127
 1104 0024 03D1     		bne	.L56
 1105              		.loc 11 313 27 view .LVU266
 1106 0026 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1107 0028 83F00103 		eor	r3, r3, #1
 1108              		.loc 11 313 25 view .LVU267
 1109 002c 2B70     		strb	r3, [r5]
 1110              	.L56:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 41


 308:MyNewProject.cpp ****     {
 1111              		.loc 11 308 18 discriminator 2 view .LVU268
 1112 002e 1034     		adds	r4, r4, #16
 1113 0030 0135     		adds	r5, r5, #1
 1114              	.LVL66:
 308:MyNewProject.cpp ****     {
 1115              		.loc 11 308 18 discriminator 2 view .LVU269
 1116 0032 B442     		cmp	r4, r6
 1117 0034 EFD1     		bne	.L57
 314:MyNewProject.cpp ****         }
 315:MyNewProject.cpp ****     }
 316:MyNewProject.cpp **** }
 1118              		.loc 11 316 1 view .LVU270
 1119 0036 70BD     		pop	{r4, r5, r6, pc}
 1120              	.LVL67:
 1121              	.L64:
 1122              		.loc 11 316 1 view .LVU271
 1123              		.align	2
 1124              	.L63:
 1125 0038 00000000 		.word	.LANCHOR7
 1126 003c 00000000 		.word	.LANCHOR12
 1127 0040 00000000 		.word	.LANCHOR1
 1128 0044 00000000 		.word	.LANCHOR13
 1129              		.cfi_endproc
 1130              	.LFE4800:
 1132              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 1133              		.align	1
 1134              		.p2align 2,,3
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	_ZL13AudioCallbackPKPKfPPfj:
 1141              	.LVL68:
 1142              	.LFB4794:
  74:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1143              		.loc 11 74 1 is_stmt 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 32
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
  75:MyNewProject.cpp ****     {
 1147              		.loc 11 75 5 view .LVU273
 1148              	.LBB246:
  75:MyNewProject.cpp ****     {
 1149              		.loc 11 75 25 view .LVU274
 1150              	.LBE246:
  74:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1151              		.loc 11 74 1 is_stmt 0 view .LVU275
 1152 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1153              		.cfi_def_cfa_offset 36
 1154              		.cfi_offset 4, -36
 1155              		.cfi_offset 5, -32
 1156              		.cfi_offset 6, -28
 1157              		.cfi_offset 7, -24
 1158              		.cfi_offset 8, -20
 1159              		.cfi_offset 9, -16
 1160              		.cfi_offset 10, -12
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 42


 1161              		.cfi_offset 11, -8
 1162              		.cfi_offset 14, -4
 1163 0004 89B0     		sub	sp, sp, #36
 1164              		.cfi_def_cfa_offset 72
 1165              	.LBB335:
  75:MyNewProject.cpp ****     {
 1166              		.loc 11 75 25 view .LVU276
 1167 0006 CDE90402 		strd	r0, r2, [sp, #16]
 1168 000a 002A     		cmp	r2, #0
 1169 000c 00F0C780 		beq	.L65
  75:MyNewProject.cpp ****     {
 1170              		.loc 11 75 16 view .LVU277
 1171 0010 0027     		movs	r7, #0
 1172 0012 DFF8D891 		ldr	r9, .L88+52
 1173 0016 DFF8D8B1 		ldr	fp, .L88+56
 1174 001a 8A46     		mov	r10, r1
 1175              	.LVL69:
 1176              	.L66:
 1177              	.LBB247:
  78:MyNewProject.cpp ****         // Check for tempo change
 1178              		.loc 11 78 9 is_stmt 1 view .LVU278
 1179 001c 684C     		ldr	r4, .L88+8
  78:MyNewProject.cpp ****         // Check for tempo change
 1180              		.loc 11 78 24 is_stmt 0 view .LVU279
 1181 001e FFF7FEFF 		bl	_Z15ProcessControlsv
 1182              	.LVL70:
  80:MyNewProject.cpp ****         // Set delays with new bpm
 1183              		.loc 11 80 9 is_stmt 1 view .LVU280
  80:MyNewProject.cpp ****         // Set delays with new bpm
 1184              		.loc 11 80 19 is_stmt 0 view .LVU281
 1185 0022 FFF7FEFF 		bl	_Z10CheckTempov
 1186              	.LVL71:
  82:MyNewProject.cpp **** 
 1187              		.loc 11 82 9 is_stmt 1 view .LVU282
 1188              	.LBB248:
 1189              	.LBI248:
 212:MyNewProject.cpp **** {
 1190              		.loc 11 212 6 view .LVU283
 1191              	.LBB249:
 214:MyNewProject.cpp ****     {
 1192              		.loc 11 214 22 view .LVU284
 214:MyNewProject.cpp ****     {
 1193              		.loc 11 214 13 is_stmt 0 view .LVU285
 1194 0026 0023     		movs	r3, #0
 1195              	.LBE249:
 1196              	.LBE248:
  80:MyNewProject.cpp ****         // Set delays with new bpm
 1197              		.loc 11 80 19 view .LVU286
 1198 0028 2246     		mov	r2, r4
 1199              	.LVL72:
 1200              	.L67:
 1201              	.LBB251:
 1202              	.LBB250:
 219:MyNewProject.cpp ****     }
 1203              		.loc 11 219 6 is_stmt 1 view .LVU287
 219:MyNewProject.cpp ****     }
 1204              		.loc 11 219 32 is_stmt 0 view .LVU288
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 43


 1205 002a 07EE903A 		vmov	s15, r3	@ int
 219:MyNewProject.cpp ****     }
 1206              		.loc 11 219 37 view .LVU289
 1207 002e B6EE083B 		vmov.f64	d3, #7.5e-1
 219:MyNewProject.cpp ****     }
 1208              		.loc 11 219 55 view .LVU290
 1209 0032 99ED005A 		vldr.32	s10, [r9]
 214:MyNewProject.cpp ****     {
 1210              		.loc 11 214 5 view .LVU291
 1211 0036 0133     		adds	r3, r3, #1
 1212              	.LVL73:
 219:MyNewProject.cpp ****     }
 1213              		.loc 11 219 32 view .LVU292
 1214 0038 B8EEE76B 		vcvt.f64.s32	d6, s15
 214:MyNewProject.cpp ****     {
 1215              		.loc 11 214 22 view .LVU293
 1216 003c 1032     		adds	r2, r2, #16
 219:MyNewProject.cpp ****     }
 1217              		.loc 11 219 32 view .LVU294
 1218 003e B5EE007B 		vmov.f64	d7, #2.5e-1
 214:MyNewProject.cpp ****     {
 1219              		.loc 11 214 22 view .LVU295
 1220 0042 042B     		cmp	r3, #4
 219:MyNewProject.cpp ****     }
 1221              		.loc 11 219 55 view .LVU296
 1222 0044 B7EEC55A 		vcvt.f64.f32	d5, s10
 219:MyNewProject.cpp ****     }
 1223              		.loc 11 219 32 view .LVU297
 1224 0048 36EE077B 		vadd.f64	d7, d6, d7
 219:MyNewProject.cpp ****     }
 1225              		.loc 11 219 45 view .LVU298
 1226 004c 9FED5A4B 		vldr.64	d4, .L88
 219:MyNewProject.cpp ****     }
 1227              		.loc 11 219 37 view .LVU299
 1228 0050 A6EE437B 		vfms.f64	d7, d6, d3
 219:MyNewProject.cpp ****     }
 1229              		.loc 11 219 45 view .LVU300
 1230 0054 27EE047B 		vmul.f64	d7, d7, d4
 219:MyNewProject.cpp ****     }
 1231              		.loc 11 219 54 view .LVU301
 1232 0058 87EE056B 		vdiv.f64	d6, d7, d5
 1233 005c B7EEC66B 		vcvt.f32.f64	s12, d6
 1234 0060 02ED026A 		vstr.32	s12, [r2, #-8]
 214:MyNewProject.cpp ****     {
 1235              		.loc 11 214 5 is_stmt 1 view .LVU302
 1236              	.LVL74:
 214:MyNewProject.cpp ****     {
 1237              		.loc 11 214 22 view .LVU303
 1238 0064 E1D1     		bne	.L67
 1239              	.LVL75:
 214:MyNewProject.cpp ****     {
 1240              		.loc 11 214 22 is_stmt 0 view .LVU304
 1241              	.LBE250:
 1242              	.LBE251:
  85:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 1243              		.loc 11 85 9 is_stmt 1 view .LVU305
  85:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 44


 1244              		.loc 11 85 27 is_stmt 0 view .LVU306
 1245 0066 5748     		ldr	r0, .L88+12
 1246 0068 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 1247              	.LVL76:
  87:MyNewProject.cpp ****         {
 1248              		.loc 11 87 9 is_stmt 1 view .LVU307
 1249              	.LBB252:
 1250              	.LBI252:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 1251              		.loc 3 79 17 view .LVU308
 1252              	.LBB253:
 1253              		.loc 3 79 35 view .LVU309
 1254              		.loc 3 79 35 is_stmt 0 view .LVU310
 1255              	.LBE253:
 1256              	.LBE252:
  87:MyNewProject.cpp ****         {
 1257              		.loc 11 87 32 view .LVU311
 1258 006c 554B     		ldr	r3, .L88+12
 1259 006e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1260 0070 FF2B     		cmp	r3, #255
  87:MyNewProject.cpp ****         {
 1261              		.loc 11 87 35 view .LVU312
 1262 0072 554B     		ldr	r3, .L88+16
 1263 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:MyNewProject.cpp ****         {
 1264              		.loc 11 87 32 view .LVU313
 1265 0076 00F09580 		beq	.L85
  94:MyNewProject.cpp ****         {
 1266              		.loc 11 94 9 is_stmt 1 view .LVU314
 1267              	.LVL77:
  94:MyNewProject.cpp ****         {
 1268              		.loc 11 94 9 is_stmt 0 view .LVU315
 1269              	.LBE247:
 1270              	.LBE335:
 1271              		.loc 3 79 35 is_stmt 1 view .LVU316
 1272              	.LBB336:
 1273              	.LBB331:
  94:MyNewProject.cpp ****         {
 1274              		.loc 11 94 33 is_stmt 0 view .LVU317
 1275 007a 13B1     		cbz	r3, .L84
  96:MyNewProject.cpp ****         }
 1276              		.loc 11 96 13 is_stmt 1 view .LVU318
  96:MyNewProject.cpp ****         }
 1277              		.loc 11 96 32 is_stmt 0 view .LVU319
 1278 007c 0023     		movs	r3, #0
 1279 007e 524A     		ldr	r2, .L88+16
 1280 0080 1370     		strb	r3, [r2]
 1281              	.L84:
 1282              	.LBB254:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 45


 109:MyNewProject.cpp ****             {
 1283              		.loc 11 109 20 view .LVU320
 1284 0082 524B     		ldr	r3, .L88+20
 1285 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1286              	.L70:
 1287              	.LBE254:
  99:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
 1288              		.loc 11 99 9 is_stmt 1 view .LVU321
 1289              	.LVL78:
 100:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1290              		.loc 11 100 6 view .LVU322
 1291              	.LBB314:
 111:MyNewProject.cpp ****                 all_delay_signals += DELAYS[d].Process(in[0][i]); // Sum all the processed signals
 1292              		.loc 11 111 36 is_stmt 0 view .LVU323
 1293 0086 524A     		ldr	r2, .L88+24
 1294 0088 5248     		ldr	r0, .L88+28
 1295 008a 92ED005A 		vldr.32	s10, [r2]
 112:MyNewProject.cpp **** 		    }
 1296              		.loc 11 112 63 view .LVU324
 1297 008e 049A     		ldr	r2, [sp, #16]
 1298 0090 8446     		mov	ip, r0
 1299 0092 1668     		ldr	r6, [r2]
 1300              	.LBE314:
 100:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1301              		.loc 11 100 12 view .LVU325
 1302 0094 0022     		movs	r2, #0
 1303 0096 0692     		str	r2, [sp, #24]	@ float
 101:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
 1304              		.loc 11 101 9 is_stmt 1 view .LVU326
 107:MyNewProject.cpp ****         {
 1305              		.loc 11 107 3 view .LVU327
 1306              	.LVL79:
 1307              	.LBB315:
 107:MyNewProject.cpp ****         {
 1308              		.loc 11 107 20 view .LVU328
 109:MyNewProject.cpp ****             {
 1309              		.loc 11 109 7 view .LVU329
 107:MyNewProject.cpp ****         {
 1310              		.loc 11 107 3 view .LVU330
 107:MyNewProject.cpp ****         {
 1311              		.loc 11 107 20 view .LVU331
 1312 0098 BA00     		lsls	r2, r7, #2
 112:MyNewProject.cpp **** 		    }
 1313              		.loc 11 112 63 is_stmt 0 view .LVU332
 1314 009a 06EB8706 		add	r6, r6, r7, lsl #2
 1315 009e 0192     		str	r2, [sp, #4]
 1316 00a0 CDE9027A 		strd	r7, r10, [sp, #8]
 109:MyNewProject.cpp ****             {
 1317              		.loc 11 109 7 view .LVU333
 1318 00a4 33B9     		cbnz	r3, .L86
 1319              	.LVL80:
 1320              	.L71:
 107:MyNewProject.cpp ****         {
 1321              		.loc 11 107 20 discriminator 2 view .LVU334
 1322 00a6 1034     		adds	r4, r4, #16
 1323 00a8 5C45     		cmp	r4, fp
 1324 00aa 5BD0     		beq	.L72
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 46


 1325              	.L87:
 109:MyNewProject.cpp ****             {
 1326              		.loc 11 109 20 view .LVU335
 1327 00ac 1CF8013B 		ldrb	r3, [ip], #1	@ zero_extendqisi2
 1328              	.LVL81:
 109:MyNewProject.cpp ****             {
 1329              		.loc 11 109 7 is_stmt 1 view .LVU336
 107:MyNewProject.cpp ****         {
 1330              		.loc 11 107 3 view .LVU337
 107:MyNewProject.cpp ****         {
 1331              		.loc 11 107 20 view .LVU338
 109:MyNewProject.cpp ****             {
 1332              		.loc 11 109 7 is_stmt 0 view .LVU339
 1333 00b0 002B     		cmp	r3, #0
 1334 00b2 F8D0     		beq	.L71
 1335              	.LVL82:
 1336              	.L86:
 111:MyNewProject.cpp ****                 all_delay_signals += DELAYS[d].Process(in[0][i]); // Sum all the processed signals
 1337              		.loc 11 111 17 is_stmt 1 view .LVU340
 1338              	.LBB255:
 1339              	.LBB256:
 1340              	.LBB257:
 1341              	.LBB258:
 1342              		.file 13 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 47


  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 48


  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 1343              		.loc 13 137 9 is_stmt 0 view .LVU341
 1344 00b4 D4ED017A 		vldr.32	s15, [r4, #4]
 1345              	.LBE258:
 1346              	.LBE257:
 1347              	.LBE256:
 1348              	.LBE255:
 107:MyNewProject.cpp ****         {
 1349              		.loc 11 107 20 view .LVU342
 1350 00b8 1034     		adds	r4, r4, #16
 1351              	.LBB308:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 49


 1352              	.LBB302:
 1353              	.LBB263:
 1354              	.LBB259:
 1355              		.loc 13 137 24 view .LVU343
 1356 00ba 14ED027A 		vldr.32	s14, [r4, #-8]
 1357              		.loc 13 137 9 view .LVU344
 1358 00be DFED466A 		vldr.32	s13, .L88+32
 1359              		.loc 13 137 24 view .LVU345
 1360 00c2 37EE677A 		vsub.f32	s14, s14, s15
 1361              	.LBE259:
 1362              	.LBE263:
  34:MyNewProject.cpp ****         readSample = delay->Read(); // Read in the next sample from the delay line
 1363              		.loc 11 34 9 view .LVU346
 1364 00c6 54F8103C 		ldr	r3, [r4, #-16]
 1365              	.LBB264:
 1366              	.LBB265:
  38:../../DaisySP//Source/Utility/delayline.h ****     }
  39:../../DaisySP//Source/Utility/delayline.h **** 
  40:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  41:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  42:../../DaisySP//Source/Utility/delayline.h ****     */
  43:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  44:../../DaisySP//Source/Utility/delayline.h ****     {
  45:../../DaisySP//Source/Utility/delayline.h ****         frac_  = 0.0f;
  46:../../DaisySP//Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  47:../../DaisySP//Source/Utility/delayline.h ****     }
  48:../../DaisySP//Source/Utility/delayline.h **** 
  49:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  50:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  51:../../DaisySP//Source/Utility/delayline.h ****     */
  52:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  53:../../DaisySP//Source/Utility/delayline.h ****     {
  54:../../DaisySP//Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  55:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  56:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1367              		.loc 12 56 60 view .LVU347
 1368 00ca 444A     		ldr	r2, .L88+36
 1369              	.LBE265:
 1370              	.LBE264:
 1371              	.LBB270:
 1372              	.LBB271:
  57:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
  58:../../DaisySP//Source/Utility/delayline.h ****     }
  59:../../DaisySP//Source/Utility/delayline.h **** 
  60:../../DaisySP//Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  61:../../DaisySP//Source/Utility/delayline.h ****     */
  62:../../DaisySP//Source/Utility/delayline.h ****     inline void Write(const T sample)
  63:../../DaisySP//Source/Utility/delayline.h ****     {
  64:../../DaisySP//Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  65:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  66:../../DaisySP//Source/Utility/delayline.h ****     }
  67:../../DaisySP//Source/Utility/delayline.h **** 
  68:../../DaisySP//Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  69:../../DaisySP//Source/Utility/delayline.h ****     */
  70:../../DaisySP//Source/Utility/delayline.h ****     inline const T Read() const
  71:../../DaisySP//Source/Utility/delayline.h ****     {
  72:../../DaisySP//Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 50


 1373              		.loc 12 72 22 view .LVU348
 1374 00cc 5D68     		ldr	r5, [r3, #4]
 1375              	.LBE271:
 1376              	.LBE270:
 1377              	.LBB276:
 1378              	.LBB260:
 1379              		.loc 13 137 9 view .LVU349
 1380 00ce E7EE267A 		vfma.f32	s15, s14, s13
 1381              	.LBE260:
 1382              	.LBE276:
 1383              	.LBB277:
 1384              	.LBB272:
 1385              		.loc 12 72 43 view .LVU350
 1386 00d2 4349     		ldr	r1, .L88+40
 1387              	.LBE272:
 1388              	.LBE277:
 1389              	.LBB278:
 1390              	.LBB279:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1391              		.loc 12 65 45 view .LVU351
 1392 00d4 AF18     		adds	r7, r5, r2
 1393              	.LBE279:
 1394              	.LBE278:
 1395              	.LBB285:
 1396              	.LBB273:
 1397              		.loc 12 72 43 view .LVU352
 1398 00d6 DFF81CE1 		ldr	lr, .L88+60
 1399              	.LBE273:
 1400              	.LBE285:
 1401              	.LBB286:
 1402              	.LBB280:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1403              		.loc 12 64 27 view .LVU353
 1404 00da 03EB8508 		add	r8, r3, r5, lsl #2
 1405              	.LBE280:
 1406              	.LBE286:
 1407              	.LBE302:
 1408              	.LBE308:
 111:MyNewProject.cpp ****                 all_delay_signals += DELAYS[d].Process(in[0][i]); // Sum all the processed signals
 1409              		.loc 11 111 36 view .LVU354
 1410 00de 04ED015A 		vstr.32	s10, [r4, #-4]
 112:MyNewProject.cpp **** 		    }
 1411              		.loc 11 112 17 is_stmt 1 view .LVU355
 1412              	.LBB309:
 1413              	.LBB303:
 1414              	.LBB287:
 1415              	.LBB281:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1416              		.loc 12 65 57 is_stmt 0 view .LVU356
 1417 00e2 A1FB07A0 		umull	r10, r0, r1, r7
 1418              	.LBE281:
 1419              	.LBE287:
 1420              	.LBE303:
 1421              	.LBE309:
 112:MyNewProject.cpp **** 		    }
 1422              		.loc 11 112 55 view .LVU357
 1423 00e6 D6ED006A 		vldr.32	s13, [r6]
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 51


 1424              	.LVL83:
 1425              	.LBB310:
 1426              	.LBI255:
  26:MyNewProject.cpp ****     {
 1427              		.loc 11 26 11 is_stmt 1 view .LVU358
 1428              	.LBB304:
  29:MyNewProject.cpp **** 
 1429              		.loc 11 29 9 view .LVU359
  32:MyNewProject.cpp ****         // Set delay time
 1430              		.loc 11 32 9 view .LVU360
 1431              	.LBB288:
 1432              	.LBI257:
 135:../../DaisySP//Source/Utility/dsp.h **** {
 1433              		.loc 13 135 13 view .LVU361
 1434              	.LBB261:
 1435              		.loc 13 137 5 view .LVU362
 1436              	.LBE261:
 1437              	.LBE288:
 1438              	.LBE304:
 1439              	.LBE310:
 112:MyNewProject.cpp **** 		    }
 1440              		.loc 11 112 35 is_stmt 0 view .LVU363
 1441 00ea 9DED066A 		vldr.32	s12, [sp, #24]
 1442              	.LBB311:
 1443              	.LBB305:
 1444              	.LBB289:
 1445              	.LBB282:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1446              		.loc 12 65 57 view .LVU364
 1447 00ee 400C     		lsrs	r0, r0, #17
 1448              	.LBE282:
 1449              	.LBE289:
 1450              	.LBB290:
 1451              	.LBB266:
  54:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1452              		.loc 12 54 17 view .LVU365
 1453 00f0 BDEEE77A 		vcvt.s32.f32	s14, s15
 1454              	.LBE266:
 1455              	.LBE290:
 1456              	.LBB291:
 1457              	.LBB262:
 1458              		.loc 13 137 9 view .LVU366
 1459 00f4 44ED037A 		vstr.32	s15, [r4, #-12]
 1460              	.LVL84:
 1461              		.loc 13 137 9 view .LVU367
 1462              	.LBE262:
 1463              	.LBE291:
  34:MyNewProject.cpp ****         readSample = delay->Read(); // Read in the next sample from the delay line
 1464              		.loc 11 34 9 is_stmt 1 view .LVU368
 1465              	.LBB292:
 1466              	.LBI264:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 1467              		.loc 12 52 17 view .LVU369
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 1468              		.loc 12 52 17 is_stmt 0 view .LVU370
 1469              	.LBE292:
 1470              	.LBB293:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 52


 1471              	.LBB283:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1472              		.loc 12 65 57 view .LVU371
 1473 00f8 0EFB1070 		mls	r0, lr, r0, r7
 1474              	.LBE283:
 1475              	.LBE293:
 1476              	.LBB294:
 1477              	.LBB267:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1478              		.loc 12 56 60 view .LVU372
 1479 00fc 17EE107A 		vmov	r7, s14	@ int
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1480              		.loc 12 55 37 view .LVU373
 1481 0100 B8EEC77A 		vcvt.f32.s32	s14, s14
 1482              	.LVL85:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1483              		.loc 12 56 60 view .LVU374
 1484 0104 BA42     		cmp	r2, r7
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1485              		.loc 12 55 35 view .LVU375
 1486 0106 77EEC77A 		vsub.f32	s15, s15, s14
 1487              	.LVL86:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1488              		.loc 12 56 60 view .LVU376
 1489 010a 28BF     		it	cs
 1490 010c 3A46     		movcs	r2, r7
 1491              	.LBE267:
 1492              	.LBE294:
 1493              	.LBE305:
 1494              	.LBE311:
 107:MyNewProject.cpp ****         {
 1495              		.loc 11 107 20 view .LVU377
 1496 010e 5C45     		cmp	r4, fp
 1497              	.LBB312:
 1498              	.LBB306:
 1499              	.LBB295:
 1500              	.LBB274:
 1501              		.loc 12 72 33 view .LVU378
 1502 0110 1544     		add	r5, r5, r2
 1503              	.LBE274:
 1504              	.LBE295:
 1505              	.LBB296:
 1506              	.LBB268:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1507              		.loc 12 56 16 view .LVU379
 1508 0112 9A60     		str	r2, [r3, #8]
 1509              	.LVL87:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1510              		.loc 12 56 16 view .LVU380
 1511              	.LBE268:
 1512              	.LBE296:
  35:MyNewProject.cpp **** 
 1513              		.loc 11 35 9 is_stmt 1 view .LVU381
 1514              	.LBB297:
 1515              	.LBI270:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 1516              		.loc 12 70 20 view .LVU382
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 53


 1517              	.LBE297:
 1518              	.LBB298:
 1519              	.LBB269:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1520              		.loc 12 55 27 is_stmt 0 view .LVU383
 1521 0114 C3ED007A 		vstr.32	s15, [r3]
 1522              	.LBE269:
 1523              	.LBE298:
 1524              	.LBB299:
 1525              	.LBB275:
  73:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1526              		.loc 12 73 42 view .LVU384
 1527 0118 05F10107 		add	r7, r5, #1
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1528              		.loc 12 72 43 view .LVU385
 1529 011c A1FB05A2 		umull	r10, r2, r1, r5
 1530              		.loc 12 73 47 view .LVU386
 1531 0120 A1FB07A1 		umull	r10, r1, r1, r7
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1532              		.loc 12 72 43 view .LVU387
 1533 0124 4FEA5242 		lsr	r2, r2, #17
 1534              		.loc 12 73 47 view .LVU388
 1535 0128 4FEA5141 		lsr	r1, r1, #17
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1536              		.loc 12 72 43 view .LVU389
 1537 012c 0EFB1252 		mls	r2, lr, r2, r5
 1538              		.loc 12 73 47 view .LVU390
 1539 0130 0EFB1171 		mls	r1, lr, r1, r7
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1540              		.loc 12 72 11 view .LVU391
 1541 0134 03EB8202 		add	r2, r3, r2, lsl #2
 1542              		.loc 12 73 11 view .LVU392
 1543 0138 03EB8101 		add	r1, r3, r1, lsl #2
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1544              		.loc 12 72 11 view .LVU393
 1545 013c 92ED037A 		vldr.32	s14, [r2, #12]
 1546              	.LVL88:
  74:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1547              		.loc 12 74 23 view .LVU394
 1548 0140 D1ED035A 		vldr.32	s11, [r1, #12]
 1549 0144 75EEC75A 		vsub.f32	s11, s11, s14
 1550              		.loc 12 74 30 view .LVU395
 1551 0148 A7EEA57A 		vfma.f32	s14, s15, s11
 1552              	.LVL89:
 1553              		.loc 12 74 30 view .LVU396
 1554              	.LBE275:
 1555              	.LBE299:
  38:MyNewProject.cpp ****         
 1556              		.loc 11 38 9 is_stmt 1 view .LVU397
  38:MyNewProject.cpp ****         
 1557              		.loc 11 38 21 is_stmt 0 view .LVU398
 1558 014c F0EE667A 		vmov.f32	s15, s13
 1559 0150 E5EE077A 		vfma.f32	s15, s10, s14
 1560              	.LVL90:
 1561              	.LBB300:
 1562              	.LBI278:
  62:../../DaisySP//Source/Utility/delayline.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 54


 1563              		.loc 12 62 17 is_stmt 1 view .LVU399
 1564              	.LBE300:
 1565              	.LBE306:
 1566              	.LBE312:
 112:MyNewProject.cpp **** 		    }
 1567              		.loc 11 112 35 is_stmt 0 view .LVU400
 1568 0154 36EE077A 		vadd.f32	s14, s12, s14
 1569              	.LVL91:
 112:MyNewProject.cpp **** 		    }
 1570              		.loc 11 112 35 view .LVU401
 1571 0158 8DED067A 		vstr.32	s14, [sp, #24]
 1572              	.LBB313:
 1573              	.LBB307:
 1574              	.LBB301:
 1575              	.LBB284:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1576              		.loc 12 64 27 view .LVU402
 1577 015c C8ED037A 		vstr.32	s15, [r8, #12]
 1578              	.LVL92:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1579              		.loc 12 65 27 view .LVU403
 1580 0160 5860     		str	r0, [r3, #4]
 1581              	.LVL93:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1582              		.loc 12 65 27 view .LVU404
 1583              	.LBE284:
 1584              	.LBE301:
  40:MyNewProject.cpp ****     }
 1585              		.loc 11 40 9 is_stmt 1 view .LVU405
  40:MyNewProject.cpp ****     }
 1586              		.loc 11 40 9 is_stmt 0 view .LVU406
 1587              	.LBE307:
 1588              	.LBE313:
 107:MyNewProject.cpp ****         {
 1589              		.loc 11 107 20 view .LVU407
 1590 0162 A3D1     		bne	.L87
 1591              	.L72:
 1592              	.LBE315:
 121:MyNewProject.cpp **** 
 1593              		.loc 11 121 32 discriminator 2 view .LVU408
 1594 0164 3368     		ldr	r3, [r6]	@ float
 125:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix; // this sends 'final_mix' to the left and right output
 1595              		.loc 11 125 28 discriminator 2 view .LVU409
 1596 0166 07A9     		add	r1, sp, #28
 1597              	.LBB316:
 1598              	.LBB317:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1599              		.loc 1 60 42 discriminator 2 view .LVU410
 1600 0168 1E4A     		ldr	r2, .L88+44
 1601              	.LBE317:
 1602              	.LBE316:
 121:MyNewProject.cpp **** 
 1603              		.loc 11 121 23 discriminator 2 view .LVU411
 1604 016a 0793     		str	r3, [sp, #28]	@ float
 1605              	.LBB321:
 1606              	.LBB318:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 55


 1607              		.loc 1 60 42 discriminator 2 view .LVU412
 1608 016c 1E4B     		ldr	r3, .L88+48
 1609              	.LBE318:
 1610              	.LBE321:
 125:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix; // this sends 'final_mix' to the left and right output
 1611              		.loc 11 125 28 discriminator 2 view .LVU413
 1612 016e 1D48     		ldr	r0, .L88+44
 1613              	.LBB322:
 1614              	.LBB319:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1615              		.loc 1 60 42 discriminator 2 view .LVU414
 1616 0170 1B68     		ldr	r3, [r3]	@ float
 1617              	.LBE319:
 1618              	.LBE322:
 121:MyNewProject.cpp **** 
 1619              		.loc 11 121 32 discriminator 2 view .LVU415
 1620 0172 DDE9027A 		ldrd	r7, r10, [sp, #8]
 121:MyNewProject.cpp **** 
 1621              		.loc 11 121 9 is_stmt 1 discriminator 2 view .LVU416
 124:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
 1622              		.loc 11 124 3 discriminator 2 view .LVU417
 1623              	.LVL94:
 1624              	.LBB323:
 1625              	.LBI316:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1626              		.loc 1 60 17 discriminator 2 view .LVU418
 1627              	.LBB320:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1628              		.loc 1 60 37 discriminator 2 view .LVU419
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1629              		.loc 1 60 42 is_stmt 0 discriminator 2 view .LVU420
 1630 0176 1360     		str	r3, [r2]	@ float
 1631              	.LVL95:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1632              		.loc 1 60 42 discriminator 2 view .LVU421
 1633              	.LBE320:
 1634              	.LBE323:
 125:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix; // this sends 'final_mix' to the left and right output
 1635              		.loc 11 125 3 is_stmt 1 discriminator 2 view .LVU422
 125:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix; // this sends 'final_mix' to the left and right output
 1636              		.loc 11 125 28 is_stmt 0 discriminator 2 view .LVU423
 1637 0178 06AA     		add	r2, sp, #24
 1638 017a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 1639              	.LVL96:
 126:MyNewProject.cpp ****     }
 1640              		.loc 11 126 3 is_stmt 1 discriminator 2 view .LVU424
 126:MyNewProject.cpp ****     }
 1641              		.loc 11 126 27 is_stmt 0 discriminator 2 view .LVU425
 1642 017e DAF80430 		ldr	r3, [r10, #4]
 1643 0182 019A     		ldr	r2, [sp, #4]
 1644              	.LBE331:
  75:MyNewProject.cpp ****     {
 1645              		.loc 11 75 5 discriminator 2 view .LVU426
 1646 0184 0137     		adds	r7, r7, #1
 1647              	.LBB332:
 126:MyNewProject.cpp ****     }
 1648              		.loc 11 126 27 discriminator 2 view .LVU427
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 56


 1649 0186 1344     		add	r3, r3, r2
 1650 0188 83ED000A 		vstr.32	s0, [r3]
 126:MyNewProject.cpp ****     }
 1651              		.loc 11 126 14 discriminator 2 view .LVU428
 1652 018c DAF80030 		ldr	r3, [r10]
 1653 0190 1344     		add	r3, r3, r2
 1654 0192 83ED000A 		vstr.32	s0, [r3]
 1655              	.LBE332:
  75:MyNewProject.cpp ****     {
 1656              		.loc 11 75 5 is_stmt 1 discriminator 2 view .LVU429
 1657              	.LVL97:
  75:MyNewProject.cpp ****     {
 1658              		.loc 11 75 25 discriminator 2 view .LVU430
 1659 0196 059B     		ldr	r3, [sp, #20]
 1660 0198 BB42     		cmp	r3, r7
 1661 019a 7FF43FAF 		bne	.L66
 1662              	.LVL98:
 1663              	.L65:
  75:MyNewProject.cpp ****     {
 1664              		.loc 11 75 25 is_stmt 0 discriminator 2 view .LVU431
 1665              	.LBE336:
 128:MyNewProject.cpp **** 
 1666              		.loc 11 128 1 view .LVU432
 1667 019e 09B0     		add	sp, sp, #36
 1668              		.cfi_remember_state
 1669              		.cfi_def_cfa_offset 36
 1670              		@ sp needed
 1671 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1672              	.LVL99:
 1673              	.L85:
 1674              		.cfi_restore_state
 1675              	.LBB337:
 1676              	.LBB333:
  87:MyNewProject.cpp ****         {
 1677              		.loc 11 87 32 discriminator 1 view .LVU433
 1678 01a4 002B     		cmp	r3, #0
 1679 01a6 7FF46CAF 		bne	.L84
  89:MyNewProject.cpp ****             StopAllDelays();
 1680              		.loc 11 89 13 is_stmt 1 view .LVU434
 1681              	.LBB324:
 1682              	.LBB325:
 317:MyNewProject.cpp **** 
 318:MyNewProject.cpp **** void StopAllDelays()
 319:MyNewProject.cpp **** {
 320:MyNewProject.cpp ****     for(int i = 0;i < 4;i++)
 321:MyNewProject.cpp ****     {
 322:MyNewProject.cpp ****         DELAY_ON[i] = false;
 1683              		.loc 11 322 21 is_stmt 0 view .LVU435
 1684 01aa 084A     		ldr	r2, .L88+20
 1685              	.LBE325:
 1686              	.LBE324:
  89:MyNewProject.cpp ****             StopAllDelays();
 1687              		.loc 11 89 32 view .LVU436
 1688 01ac 0649     		ldr	r1, .L88+16
 1689              	.LBB328:
 1690              	.LBB326:
 1691              		.loc 11 322 21 view .LVU437
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 57


 1692 01ae 1360     		str	r3, [r2]
 1693              	.LBE326:
 1694              	.LBE328:
  89:MyNewProject.cpp ****             StopAllDelays();
 1695              		.loc 11 89 32 view .LVU438
 1696 01b0 0122     		movs	r2, #1
 1697 01b2 0A70     		strb	r2, [r1]
  90:MyNewProject.cpp ****         }
 1698              		.loc 11 90 13 is_stmt 1 view .LVU439
 1699              	.LBB329:
 1700              	.LBI324:
 318:MyNewProject.cpp **** {
 1701              		.loc 11 318 6 view .LVU440
 1702              	.LBE329:
 1703              	.LBE333:
 1704              	.LBE337:
 320:MyNewProject.cpp ****     {
 1705              		.loc 11 320 5 view .LVU441
 1706              	.LVL100:
 1707              	.LBB338:
 1708              	.LBB334:
 1709              	.LBB330:
 1710              	.LBB327:
 320:MyNewProject.cpp ****     {
 1711              		.loc 11 320 21 view .LVU442
 1712              		.loc 11 322 9 view .LVU443
 320:MyNewProject.cpp ****     {
 1713              		.loc 11 320 5 view .LVU444
 320:MyNewProject.cpp ****     {
 1714              		.loc 11 320 21 view .LVU445
 1715              		.loc 11 322 9 view .LVU446
 320:MyNewProject.cpp ****     {
 1716              		.loc 11 320 5 view .LVU447
 320:MyNewProject.cpp ****     {
 1717              		.loc 11 320 21 view .LVU448
 1718              		.loc 11 322 9 view .LVU449
 320:MyNewProject.cpp ****     {
 1719              		.loc 11 320 5 view .LVU450
 320:MyNewProject.cpp ****     {
 1720              		.loc 11 320 21 view .LVU451
 1721              		.loc 11 322 9 view .LVU452
 320:MyNewProject.cpp ****     {
 1722              		.loc 11 320 5 view .LVU453
 320:MyNewProject.cpp ****     {
 1723              		.loc 11 320 21 view .LVU454
 1724 01b4 67E7     		b	.L70
 1725              	.L89:
 1726 01b6 00BF     		.align	3
 1727              	.L88:
 1728 01b8 00000000 		.word	0
 1729 01bc 00F94541 		.word	1095104768
 1730 01c0 00000000 		.word	.LANCHOR0
 1731 01c4 00000000 		.word	.LANCHOR9
 1732 01c8 00000000 		.word	.LANCHOR14
 1733 01cc 00000000 		.word	.LANCHOR1
 1734 01d0 00000000 		.word	.LANCHOR13
 1735 01d4 01000000 		.word	.LANCHOR1+1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 58


 1736 01d8 17B75139 		.word	961656599
 1737 01dc 7F320200 		.word	143999
 1738 01e0 D55204E9 		.word	-385592619
 1739 01e4 00000000 		.word	.LANCHOR10
 1740 01e8 00000000 		.word	.LANCHOR15
 1741 01ec 00000000 		.word	.LANCHOR2
 1742 01f0 40000000 		.word	.LANCHOR0+64
 1743 01f4 80320200 		.word	144000
 1744              	.LBE327:
 1745              	.LBE330:
 1746              	.LBE334:
 1747              	.LBE338:
 1748              		.cfi_endproc
 1749              	.LFE4794:
 1751              		.section	.text._Z13StopAllDelaysv,"ax",%progbits
 1752              		.align	1
 1753              		.p2align 2,,3
 1754              		.global	_Z13StopAllDelaysv
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1758              		.fpu fpv5-d16
 1760              	_Z13StopAllDelaysv:
 1761              	.LFB4801:
 319:MyNewProject.cpp ****     for(int i = 0;i < 4;i++)
 1762              		.loc 11 319 1 view -0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              		@ link register save eliminated.
 320:MyNewProject.cpp ****     {
 1767              		.loc 11 320 5 view .LVU456
 1768              	.LVL101:
 1769              	.LBB339:
 320:MyNewProject.cpp ****     {
 1770              		.loc 11 320 21 view .LVU457
 1771              		.loc 11 322 9 view .LVU458
 320:MyNewProject.cpp ****     {
 1772              		.loc 11 320 5 view .LVU459
 320:MyNewProject.cpp ****     {
 1773              		.loc 11 320 21 view .LVU460
 1774              		.loc 11 322 9 view .LVU461
 320:MyNewProject.cpp ****     {
 1775              		.loc 11 320 5 view .LVU462
 320:MyNewProject.cpp ****     {
 1776              		.loc 11 320 21 view .LVU463
 1777              		.loc 11 322 9 view .LVU464
 320:MyNewProject.cpp ****     {
 1778              		.loc 11 320 5 view .LVU465
 320:MyNewProject.cpp ****     {
 1779              		.loc 11 320 21 view .LVU466
 1780              		.loc 11 322 9 view .LVU467
 1781              		.loc 11 322 21 is_stmt 0 view .LVU468
 1782 0000 014B     		ldr	r3, .L91
 1783 0002 0022     		movs	r2, #0
 1784 0004 1A60     		str	r2, [r3]
 320:MyNewProject.cpp ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 59


 1785              		.loc 11 320 5 is_stmt 1 view .LVU469
 1786              	.LVL102:
 320:MyNewProject.cpp ****     {
 1787              		.loc 11 320 21 view .LVU470
 1788              	.LBE339:
 323:MyNewProject.cpp ****     }
 324:MyNewProject.cpp **** }
 1789              		.loc 11 324 1 is_stmt 0 view .LVU471
 1790 0006 7047     		bx	lr
 1791              	.L92:
 1792              		.align	2
 1793              	.L91:
 1794 0008 00000000 		.word	.LANCHOR1
 1795              		.cfi_endproc
 1796              	.LFE4801:
 1798              		.section	.text.startup._GLOBAL__sub_I_ON_BUTTON,"ax",%progbits
 1799              		.align	1
 1800              		.p2align 2,,3
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1804              		.fpu fpv5-d16
 1806              	_GLOBAL__sub_I_ON_BUTTON:
 1807              	.LFB5375:
 1808              		.loc 11 324 1 is_stmt 1 view -0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              	.LBB373:
 1813              	.LBI373:
 1814              		.loc 11 324 1 view .LVU473
 1815              	.LVL103:
 1816              	.LBB374:
 1817              	.LBB375:
 1818              	.LBI375:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1819              		.loc 3 41 5 view .LVU474
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1820              		.loc 3 41 5 is_stmt 0 view .LVU475
 1821              	.LBE375:
 1822              	.LBE374:
 1823              	.LBE373:
 1824              		.loc 11 324 1 view .LVU476
 1825 0000 38B5     		push	{r3, r4, r5, lr}
 1826              		.cfi_def_cfa_offset 16
 1827              		.cfi_offset 3, -16
 1828              		.cfi_offset 4, -12
 1829              		.cfi_offset 5, -8
 1830              		.cfi_offset 14, -4
 1831              	.LBB413:
 1832              	.LBB411:
  11:MyNewProject.cpp **** Switch TEMPO_BUTTON;                                // The tap tempo button
 1833              		.loc 11 11 8 view .LVU477
 1834 0002 184C     		ldr	r4, .L95
 1835              	.LBB376:
 1836              	.LBB377:
 1837              	.LBB378:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 60


 1838              	.LBB379:
 1839              	.LBB380:
 1840              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 61


  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 62


 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1841              		.loc 14 166 34 view .LVU478
 1842 0004 0025     		movs	r5, #0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 63


 1843              	.LBE380:
 1844              	.LBE379:
 1845              	.LBE378:
 1846              	.LBE377:
 1847              	.LBE376:
  11:MyNewProject.cpp **** Switch TEMPO_BUTTON;                                // The tap tempo button
 1848              		.loc 11 11 8 view .LVU479
 1849 0006 1849     		ldr	r1, .L95+4
 1850 0008 2246     		mov	r2, r4
 1851 000a 1848     		ldr	r0, .L95+8
 1852 000c FFF7FEFF 		bl	__aeabi_atexit
 1853              	.LVL104:
 1854              	.LBB398:
 1855              	.LBI398:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1856              		.loc 3 41 5 is_stmt 1 view .LVU480
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1857              		.loc 3 41 5 is_stmt 0 view .LVU481
 1858              	.LBE398:
  12:MyNewProject.cpp **** Switch headSwitches[4];                            // One switch for each head
 1859              		.loc 11 12 8 view .LVU482
 1860 0010 2246     		mov	r2, r4
 1861 0012 1549     		ldr	r1, .L95+4
 1862 0014 1648     		ldr	r0, .L95+12
 1863 0016 FFF7FEFF 		bl	__aeabi_atexit
 1864              	.LVL105:
  13:MyNewProject.cpp **** static DaisySeed hw;                               // The daisy seed harfware
 1865              		.loc 11 13 22 is_stmt 1 view .LVU483
  13:MyNewProject.cpp **** static DaisySeed hw;                               // The daisy seed harfware
 1866              		.loc 11 13 8 is_stmt 0 view .LVU484
 1867 001a 2246     		mov	r2, r4
 1868 001c 1549     		ldr	r1, .L95+16
 1869 001e 0020     		movs	r0, #0
 1870 0020 FFF7FEFF 		bl	__aeabi_atexit
 1871              	.LVL106:
 1872              	.LBB399:
 1873              	.LBI376:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1874              		.loc 6 21 5 is_stmt 1 view .LVU485
 1875              	.LBB396:
 1876              	.LBB385:
 1877              	.LBI378:
 1878              		.loc 14 166 5 view .LVU486
 1879              	.LBB383:
 1880              	.LBB381:
 1881              		.loc 14 166 34 is_stmt 0 view .LVU487
 1882 0024 1448     		ldr	r0, .L95+20
 1883              	.LBE381:
 1884              	.LBE383:
 1885              	.LBE385:
 1886              	.LBE396:
 1887              	.LBE399:
  14:MyNewProject.cpp **** 
 1888              		.loc 11 14 18 view .LVU488
 1889 0026 2246     		mov	r2, r4
 1890 0028 1449     		ldr	r1, .L95+24
 1891              	.LBB400:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 64


 1892              	.LBB397:
 1893              	.LBB386:
 1894              	.LBB384:
 1895              	.LBB382:
 1896              		.loc 14 166 34 view .LVU489
 1897 002a 0560     		str	r5, [r0]
 1898              	.LVL107:
 1899              		.loc 14 166 34 view .LVU490
 1900              	.LBE382:
 1901              	.LBE384:
 1902              	.LBE386:
 1903              	.LBB387:
 1904              	.LBI387:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1905              		.loc 10 95 5 is_stmt 1 view .LVU491
 1906              	.LBB388:
 1907              	.LBB389:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1908              		.loc 10 95 35 is_stmt 0 view .LVU492
 1909 002c 4561     		str	r5, [r0, #20]
 1910              	.LVL108:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1911              		.loc 10 95 35 view .LVU493
 1912              	.LBE389:
 1913              	.LBE388:
 1914              	.LBE387:
 1915              	.LBB390:
 1916              	.LBI390:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1917              		.loc 9 92 5 is_stmt 1 view .LVU494
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1918              		.loc 9 92 5 is_stmt 0 view .LVU495
 1919              	.LBE390:
 1920              	.LBB391:
 1921              	.LBI391:
 1922              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 65


  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 66


  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1923              		.loc 15 84 5 is_stmt 1 view .LVU496
 1924              	.LBB392:
 1925              	.LBB393:
 1926              		.loc 15 84 33 is_stmt 0 view .LVU497
 1927 002e 0562     		str	r5, [r0, #32]
 1928              	.LVL109:
 1929              		.loc 15 84 33 view .LVU498
 1930              	.LBE393:
 1931              	.LBE392:
 1932              	.LBE391:
 1933              	.LBB394:
 1934              	.LBI394:
  40:../../libDaisy//src/hid/usb.h **** 
 1935              		.loc 8 40 5 is_stmt 1 view .LVU499
  40:../../libDaisy//src/hid/usb.h **** 
 1936              		.loc 8 40 5 is_stmt 0 view .LVU500
 1937              	.LBE394:
 1938              	.LBB395:
 1939              	.LBI395:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1940              		.loc 7 77 5 is_stmt 1 view .LVU501
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1941              		.loc 7 77 5 is_stmt 0 view .LVU502
 1942              	.LBE395:
 1943              	.LBE397:
 1944              	.LBE400:
  14:MyNewProject.cpp **** 
 1945              		.loc 11 14 18 view .LVU503
 1946 0030 FFF7FEFF 		bl	__aeabi_atexit
 1947              	.LVL110:
  16:MyNewProject.cpp **** static CrossFade cfade;                                 // Used to blend the wet/dry and maintain a
 1948              		.loc 11 16 54 is_stmt 1 view .LVU504
  16:MyNewProject.cpp **** static CrossFade cfade;                                 // Used to blend the wet/dry and maintain a
 1949              		.loc 11 16 43 is_stmt 0 view .LVU505
 1950 0034 2246     		mov	r2, r4
 1951 0036 1249     		ldr	r1, .L95+28
 1952 0038 2846     		mov	r0, r5
 1953 003a FFF7FEFF 		bl	__aeabi_atexit
 1954              	.LVL111:
 1955              	.LBB401:
 1956              	.LBI401:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1957              		.loc 1 36 5 is_stmt 1 view .LVU506
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1958              		.loc 1 36 5 is_stmt 0 view .LVU507
 1959              	.LBE401:
  17:MyNewProject.cpp **** 
 1960              		.loc 11 17 18 view .LVU508
 1961 003e 2246     		mov	r2, r4
 1962 0040 1049     		ldr	r1, .L95+32
 1963 0042 1148     		ldr	r0, .L95+36
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 67


 1964 0044 FFF7FEFF 		bl	__aeabi_atexit
 1965              	.LVL112:
 1966              	.LBB402:
 1967              	.LBI402:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1968              		.loc 2 97 5 is_stmt 1 view .LVU509
 1969              	.LBB403:
 1970              	.LBB404:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1971              		.loc 2 97 35 is_stmt 0 view .LVU510
 1972 0048 1048     		ldr	r0, .L95+40
 1973              	.LBE404:
 1974              	.LBE403:
 1975              	.LBE402:
  54:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1976              		.loc 11 54 13 view .LVU511
 1977 004a 2246     		mov	r2, r4
 1978 004c 1049     		ldr	r1, .L95+44
 1979              	.LBB407:
 1980              	.LBB406:
 1981              	.LBB405:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1982              		.loc 2 97 35 view .LVU512
 1983 004e 0560     		str	r5, [r0]
 1984              	.LVL113:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1985              		.loc 2 97 35 view .LVU513
 1986              	.LBE405:
 1987              	.LBE406:
 1988              	.LBE407:
  54:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1989              		.loc 11 54 13 view .LVU514
 1990 0050 FFF7FEFF 		bl	__aeabi_atexit
 1991              	.LVL114:
 1992              	.LBB408:
 1993              	.LBI408:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1994              		.loc 4 25 5 is_stmt 1 view .LVU515
 1995              	.LBB409:
 1996              	.LBB410:
 1997              	.LBI410:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1998              		.loc 5 21 5 view .LVU516
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1999              		.loc 5 21 5 is_stmt 0 view .LVU517
 2000              	.LBE410:
 2001              	.LBE409:
 2002              	.LBE408:
  56:MyNewProject.cpp **** 
 2003              		.loc 11 56 11 view .LVU518
 2004 0054 2246     		mov	r2, r4
 2005 0056 0F49     		ldr	r1, .L95+48
 2006 0058 0F48     		ldr	r0, .L95+52
 2007              	.LBE411:
 2008              	.LBE413:
 2009              		.loc 11 324 1 view .LVU519
 2010 005a BDE83840 		pop	{r3, r4, r5, lr}
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 68


 2011              		.cfi_restore 14
 2012              		.cfi_restore 5
 2013              		.cfi_restore 4
 2014              		.cfi_restore 3
 2015              		.cfi_def_cfa_offset 0
 2016              	.LBB414:
 2017              	.LBB412:
  56:MyNewProject.cpp **** 
 2018              		.loc 11 56 11 view .LVU520
 2019 005e FFF7FEBF 		b	__aeabi_atexit
 2020              	.LVL115:
 2021              	.L96:
 2022 0062 00BF     		.align	2
 2023              	.L95:
 2024 0064 00000000 		.word	__dso_handle
 2025 0068 00000000 		.word	_ZN5daisy6SwitchD1Ev
 2026 006c 00000000 		.word	.LANCHOR9
 2027 0070 00000000 		.word	.LANCHOR6
 2028 0074 00000000 		.word	__tcf_0
 2029 0078 00000000 		.word	.LANCHOR8
 2030 007c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 2031 0080 00000000 		.word	__tcf_1
 2032 0084 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 2033 0088 00000000 		.word	.LANCHOR10
 2034 008c 00000000 		.word	.LANCHOR3
 2035 0090 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 2036 0094 00000000 		.word	_ZN5daisy9ParameterD1Ev
 2037 0098 00000000 		.word	.LANCHOR12
 2038              	.LBE412:
 2039              	.LBE414:
 2040              		.cfi_endproc
 2041              	.LFE5375:
 2043              		.section	.init_array,"aw",%init_array
 2044              		.align	2
 2045 0000 00000000 		.word	_GLOBAL__sub_I_ON_BUTTON(target1)
 2046              		.global	feedbackKnob
 2047              		.global	configPtr
 2048              		.global	TIMER
 2049              		.global	TAPPING
 2050              		.global	BPM
 2051              		.global	onButtonWasPressed
 2052              		.global	drywet_ratio
 2053              		.global	MAX_FEEDBACK
 2054              		.global	FEEDBACK
 2055              		.global	DELAY_ON
 2056              		.global	DELAYS
 2057              		.global	delayMems
 2058              		.global	headSwitches
 2059              		.global	TEMPO_BUTTON
 2060              		.global	ON_BUTTON
 2061              		.section	.bss.DELAYS,"aw",%nobits
 2062              		.align	2
 2063              		.set	.LANCHOR0,. + 0
 2066              	DELAYS:
 2067 0000 00000000 		.space	64
 2067      00000000 
 2067      00000000 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 69


 2067      00000000 
 2067      00000000 
 2068              		.section	.bss.DELAY_ON,"aw",%nobits
 2069              		.align	2
 2070              		.set	.LANCHOR1,. + 0
 2073              	DELAY_ON:
 2074 0000 00000000 		.space	4
 2075              		.section	.bss.ON_BUTTON,"aw",%nobits
 2076              		.align	2
 2077              		.set	.LANCHOR9,. + 0
 2080              	ON_BUTTON:
 2081 0000 00000000 		.space	16
 2081      00000000 
 2081      00000000 
 2081      00000000 
 2082              		.section	.bss.TAPPING,"aw",%nobits
 2083              		.set	.LANCHOR4,. + 0
 2086              	TAPPING:
 2087 0000 00       		.space	1
 2088              		.section	.bss.TEMPO_BUTTON,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR6,. + 0
 2093              	TEMPO_BUTTON:
 2094 0000 00000000 		.space	16
 2094      00000000 
 2094      00000000 
 2094      00000000 
 2095              		.section	.bss.TIMER,"aw",%nobits
 2096              		.align	2
 2097              		.set	.LANCHOR3,. + 0
 2100              	TIMER:
 2101 0000 00000000 		.space	4
 2102              		.section	.bss._ZL2hw,"aw",%nobits
 2103              		.align	2
 2104              		.set	.LANCHOR8,. + 0
 2107              	_ZL2hw:
 2108 0000 00000000 		.space	60
 2108      00000000 
 2108      00000000 
 2108      00000000 
 2108      00000000 
 2109              		.section	.bss._ZL5cfade,"aw",%nobits
 2110              		.align	2
 2111              		.set	.LANCHOR10,. + 0
 2114              	_ZL5cfade:
 2115 0000 00000000 		.space	8
 2115      00000000 
 2116              		.section	.bss.configPtr,"aw",%nobits
 2117              		.align	2
 2118              		.set	.LANCHOR5,. + 0
 2121              	configPtr:
 2122 0000 00000000 		.space	4
 2123              		.section	.bss.feedbackKnob,"aw",%nobits
 2124              		.align	2
 2125              		.set	.LANCHOR12,. + 0
 2128              	feedbackKnob:
 2129 0000 00000000 		.space	56
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 70


 2129      00000000 
 2129      00000000 
 2129      00000000 
 2129      00000000 
 2130              		.section	.bss.headSwitches,"aw",%nobits
 2131              		.align	2
 2132              		.set	.LANCHOR7,. + 0
 2135              	headSwitches:
 2136 0000 00000000 		.space	64
 2136      00000000 
 2136      00000000 
 2136      00000000 
 2136      00000000 
 2137              		.section	.bss.onButtonWasPressed,"aw",%nobits
 2138              		.set	.LANCHOR14,. + 0
 2141              	onButtonWasPressed:
 2142 0000 00       		.space	1
 2143              		.section	.data.BPM,"aw"
 2144              		.align	2
 2145              		.set	.LANCHOR2,. + 0
 2148              	BPM:
 2149 0000 0000A041 		.word	1101004800
 2150              		.section	.data.FEEDBACK,"aw"
 2151              		.align	2
 2152              		.set	.LANCHOR13,. + 0
 2155              	FEEDBACK:
 2156 0000 CDCC4C3F 		.word	1061997773
 2157              		.section	.data.MAX_FEEDBACK,"aw"
 2158              		.align	2
 2159              		.set	.LANCHOR11,. + 0
 2162              	MAX_FEEDBACK:
 2163 0000 CDCC8C3F 		.word	1066192077
 2164              		.section	.data.drywet_ratio,"aw"
 2165              		.align	2
 2166              		.set	.LANCHOR15,. + 0
 2169              	drywet_ratio:
 2170 0000 0000003F 		.word	1056964608
 2171              		.section	.sdram_bss,"aw"
 2172              		.align	2
 2175              	delayMems:
 2176 0000 00000000 		.space	2304048
 2176      00000000 
 2176      00000000 
 2176      00000000 
 2176      00000000 
 2177              		.text
 2178              	.Letext0:
 2179              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2180              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2181              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 2182              		.file 19 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 2183              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 2184              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 2185              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 2186              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 2187              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 2188              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 71


 2189              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 2190              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 2191              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 2192              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 2193              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 2194              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 2195              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 2196              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 2197              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 2198              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 2199              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 2200              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 2201              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2202              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2203              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2204              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 2205              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 2206              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 2207              		.file 44 "../../DaisySP//Source/Control/adenv.h"
 2208              		.file 45 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 2209              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 2210              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 2211              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 2212              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 2213              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 2214              		.file 51 "../../libDaisy//src/daisy_core.h"
 2215              		.file 52 "../../libDaisy//src/per/sai.h"
 2216              		.file 53 "../../libDaisy//src/hid/logger_impl.h"
 2217              		.file 54 "../../libDaisy//src/util/wav_format.h"
 2218              		.file 55 "../../libDaisy//src/dev/max11300.h"
 2219              		.file 56 "../../libDaisy//src/hid/logger.h"
 2220              		.file 57 "../../libDaisy//src/per/gpio.h"
 2221              		.file 58 "../../libDaisy//src/dev/sdram.h"
 2222              		.file 59 "Delay.h"
 2223              		.file 60 "../../libDaisy//src/dev/sr_595.h"
 2224              		.file 61 "<built-in>"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 72


DEFINED SYMBOLS
                            *ABS*:00000000 MyNewProject.cpp
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:17     .text._ZN7daisysp9CrossFadeD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:26     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD2Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:26     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD1Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:43     .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:51     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:51     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:68     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:76     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:76     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:93     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:101    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:101    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:124    .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:132    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:132    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:173    .text.__tcf_0:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:180    .text.__tcf_0:00000000 __tcf_0
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:194    .text.__tcf_1:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:201    .text.__tcf_1:00000000 __tcf_1
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:212    .text._Z10InitDelaysf:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:220    .text._Z10InitDelaysf:00000000 _Z10InitDelaysf
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:332    .text._Z10InitDelaysf:0000003c $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2175   .sdram_bss:00000000 delayMems
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:341    .text._Z9SetDelaysv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:349    .text._Z9SetDelaysv:00000000 _Z9SetDelaysv
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:408    .text._Z9SetDelaysv:00000048 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:416    .rodata._Z10CheckTempov.str1.4:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:420    .text._Z10CheckTempov:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:428    .text._Z10CheckTempov:00000000 _Z10CheckTempov
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:649    .text._Z10CheckTempov:000000d8 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:664    .text._Z15InitHeadButtonsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:672    .text._Z15InitHeadButtonsv:00000000 _Z15InitHeadButtonsv
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:731    .text._Z15InitHeadButtonsv:00000030 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:737    .text.startup.main:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:745    .text.startup.main:00000000 main
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1023   .text.startup.main:00000110 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1140   .text._ZL13AudioCallbackPKPKfPPfj:00000000 _ZL13AudioCallbackPKPKfPPfj
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1040   .text._Z15ProcessControlsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1048   .text._Z15ProcessControlsv:00000000 _Z15ProcessControlsv
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1125   .text._Z15ProcessControlsv:00000038 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1133   .text._ZL13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1728   .text._ZL13AudioCallbackPKPKfPPfj:000001b8 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1752   .text._Z13StopAllDelaysv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1760   .text._Z13StopAllDelaysv:00000000 _Z13StopAllDelaysv
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1794   .text._Z13StopAllDelaysv:00000008 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1799   .text.startup._GLOBAL__sub_I_ON_BUTTON:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:1806   .text.startup._GLOBAL__sub_I_ON_BUTTON:00000000 _GLOBAL__sub_I_ON_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2024   .text.startup._GLOBAL__sub_I_ON_BUTTON:00000064 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2044   .init_array:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2128   .bss.feedbackKnob:00000000 feedbackKnob
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2121   .bss.configPtr:00000000 configPtr
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2100   .bss.TIMER:00000000 TIMER
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2086   .bss.TAPPING:00000000 TAPPING
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2148   .data.BPM:00000000 BPM
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2141   .bss.onButtonWasPressed:00000000 onButtonWasPressed
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 73


C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2169   .data.drywet_ratio:00000000 drywet_ratio
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2162   .data.MAX_FEEDBACK:00000000 MAX_FEEDBACK
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2155   .data.FEEDBACK:00000000 FEEDBACK
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2073   .bss.DELAY_ON:00000000 DELAY_ON
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2066   .bss.DELAYS:00000000 DELAYS
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2135   .bss.headSwitches:00000000 headSwitches
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2093   .bss.TEMPO_BUTTON:00000000 TEMPO_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2080   .bss.ON_BUTTON:00000000 ON_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2062   .bss.DELAYS:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2069   .bss.DELAY_ON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2076   .bss.ON_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2087   .bss.TAPPING:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2089   .bss.TEMPO_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2096   .bss.TIMER:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2103   .bss._ZL2hw:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2107   .bss._ZL2hw:00000000 _ZL2hw
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2110   .bss._ZL5cfade:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2114   .bss._ZL5cfade:00000000 _ZL5cfade
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2117   .bss.configPtr:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2124   .bss.feedbackKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2131   .bss.headSwitches:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2142   .bss.onButtonWasPressed:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2144   .data.BPM:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2151   .data.FEEDBACK:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2158   .data.MAX_FEEDBACK:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2165   .data.drywet_ratio:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s:2172   .sdram_bss:00000000 $d
                           .group:00000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy11TimerHandle7GetTickEv
_ZN5daisy11TimerHandle7GetFreqEv
_ZN5daisy6Switch8DebounceEv
_ZN5daisy11TimerHandle4StopEv
_ZN5daisy11TimerHandle6DeInitEv
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle5StartEv
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZNK5daisy9AdcHandle6GetPtrEh
_ZN5daisy13AnalogControl4InitEPtfbbf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy6System5DelayEm
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccLSsPgm.s 			page 74


_ZN5daisy9Parameter7ProcessEv
_ZN7daisysp9CrossFade7ProcessERfS1_
__aeabi_atexit
__dso_handle
