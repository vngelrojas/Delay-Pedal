ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MyNewProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp7BalanceD2Ev,"axG",%progbits,_ZN7daisysp7BalanceD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp7BalanceD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp7BalanceD2Ev:
  27              	.LVL0:
  28              	.LFB2920:
  29              		.file 1 "../../DaisySP//Source/Dynamics/balance.h"
   1:../../DaisySP//Source/Dynamics/balance.h **** 
   2:../../DaisySP//Source/Dynamics/balance.h **** #pragma once
   3:../../DaisySP//Source/Dynamics/balance.h **** #ifndef DSY_BALANCE_H
   4:../../DaisySP//Source/Dynamics/balance.h **** #define DSY_BALANCE_H
   5:../../DaisySP//Source/Dynamics/balance.h **** 
   6:../../DaisySP//Source/Dynamics/balance.h **** #include <stdint.h>
   7:../../DaisySP//Source/Dynamics/balance.h **** #ifdef __cplusplus
   8:../../DaisySP//Source/Dynamics/balance.h **** 
   9:../../DaisySP//Source/Dynamics/balance.h **** namespace daisysp
  10:../../DaisySP//Source/Dynamics/balance.h **** {
  11:../../DaisySP//Source/Dynamics/balance.h **** /** Balances two sound sources. Sig is boosted to the level of comp.
  12:../../DaisySP//Source/Dynamics/balance.h **** 
  13:../../DaisySP//Source/Dynamics/balance.h ****     *Original author(s) : Barry Vercoe, john ffitch, Gabriel Maldonado
  14:../../DaisySP//Source/Dynamics/balance.h **** 
  15:../../DaisySP//Source/Dynamics/balance.h ****     *Year: 1991
  16:../../DaisySP//Source/Dynamics/balance.h **** 
  17:../../DaisySP//Source/Dynamics/balance.h ****     *Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Dynamics/balance.h **** */
  19:../../DaisySP//Source/Dynamics/balance.h **** class Balance
  20:../../DaisySP//Source/Dynamics/balance.h **** {
  21:../../DaisySP//Source/Dynamics/balance.h ****   public:
  22:../../DaisySP//Source/Dynamics/balance.h ****     Balance() {}
  23:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
  30              		.loc 1 23 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 23 17 is_stmt 0 view .LVU1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 2


  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE2920:
  40              		.weak	_ZN7daisysp7BalanceD1Ev
  41              		.thumb_set _ZN7daisysp7BalanceD1Ev,_ZN7daisysp7BalanceD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp9CrossFadeD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN7daisysp9CrossFadeD2Ev:
  52              	.LVL1:
  53              	.LFB2952:
  54              		.file 2 "../../DaisySP//Source/Dynamics/crossfade.h"
   1:../../DaisySP//Source/Dynamics/crossfade.h **** #pragma once
   2:../../DaisySP//Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../../DaisySP//Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../../DaisySP//Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../../DaisySP//Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../../DaisySP//Source/Dynamics/crossfade.h **** 
   7:../../DaisySP//Source/Dynamics/crossfade.h **** namespace daisysp
   8:../../DaisySP//Source/Dynamics/crossfade.h **** {
   9:../../DaisySP//Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../../DaisySP//Source/Dynamics/crossfade.h **** - LIN = linear
  11:../../DaisySP//Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../../DaisySP//Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../../DaisySP//Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../../DaisySP//Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../../DaisySP//Source/Dynamics/crossfade.h **** */
  16:../../DaisySP//Source/Dynamics/crossfade.h **** enum
  17:../../DaisySP//Source/Dynamics/crossfade.h **** {
  18:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../../DaisySP//Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../../DaisySP//Source/Dynamics/crossfade.h **** };
  24:../../DaisySP//Source/Dynamics/crossfade.h **** 
  25:../../DaisySP//Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../../DaisySP//Source/Dynamics/crossfade.h **** 
  27:../../DaisySP//Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../../DaisySP//Source/Dynamics/crossfade.h **** 
  29:../../DaisySP//Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../../DaisySP//Source/Dynamics/crossfade.h **** 
  31:../../DaisySP//Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../../DaisySP//Source/Dynamics/crossfade.h **** */
  33:../../DaisySP//Source/Dynamics/crossfade.h **** class CrossFade
  34:../../DaisySP//Source/Dynamics/crossfade.h **** {
  35:../../DaisySP//Source/Dynamics/crossfade.h ****   public:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
  55              		.loc 2 37 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 3


  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 37 19 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE2952:
  65              		.weak	_ZN7daisysp9CrossFadeD1Ev
  66              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
  67              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy11TimerHandleD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy11TimerHandleD2Ev:
  77              	.LVL2:
  78              	.LFB3673:
  79              		.file 3 "../../libDaisy//src/per/tim.h"
   1:../../libDaisy//src/per/tim.h **** #pragma once
   2:../../libDaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libDaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libDaisy//src/per/tim.h **** 
   5:../../libDaisy//src/per/tim.h **** #include <cstdint>
   6:../../libDaisy//src/per/tim.h **** 
   7:../../libDaisy//src/per/tim.h **** namespace daisy
   8:../../libDaisy//src/per/tim.h **** {
   9:../../libDaisy//src/per/tim.h **** /** @brief Hardare timer peripheral support.
  10:../../libDaisy//src/per/tim.h ****  ** 
  11:../../libDaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libDaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libDaisy//src/per/tim.h ****  **
  14:../../libDaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libDaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libDaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libDaisy//src/per/tim.h ****  **
  18:../../libDaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libDaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libDaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libDaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libDaisy//src/per/tim.h ****  **
  23:../../libDaisy//src/per/tim.h ****  ** User callbacks can be set, and changed at any point during operation. However,
  24:../../libDaisy//src/per/tim.h ****  ** the Config::enable_irq must be set to true when initializing for the interrupts
  25:../../libDaisy//src/per/tim.h ****  ** to turn on and function.
  26:../../libDaisy//src/per/tim.h ****  **
  27:../../libDaisy//src/per/tim.h ****  ** @todo Fix issues with realtime getters, and wrapping of the timer(s).
  28:../../libDaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  29:../../libDaisy//src/per/tim.h ****  ** @todo Other General purpose timers
  30:../../libDaisy//src/per/tim.h ****  ** @todo Non-internal clock sources
  31:../../libDaisy//src/per/tim.h ****  ** @todo Use of the four-tim channels per tim
  32:../../libDaisy//src/per/tim.h ****  **     - PWM, etc.
  33:../../libDaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  34:../../libDaisy//src/per/tim.h ****  ** @todo HRTIM
  35:../../libDaisy//src/per/tim.h ****  ** @todo Advanced timers (TIM1/TIM8)
  36:../../libDaisy//src/per/tim.h ****  ** */
  37:../../libDaisy//src/per/tim.h **** class TimerHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 4


  38:../../libDaisy//src/per/tim.h **** {
  39:../../libDaisy//src/per/tim.h ****   public:
  40:../../libDaisy//src/per/tim.h ****     /** @brief Configuration struct for the Peripheral
  41:../../libDaisy//src/per/tim.h ****      *  @note These settings are used during initialization
  42:../../libDaisy//src/per/tim.h ****      *   and changing them afterwards may not have the desired effect.
  43:../../libDaisy//src/per/tim.h ****      */
  44:../../libDaisy//src/per/tim.h ****     struct Config
  45:../../libDaisy//src/per/tim.h ****     {
  46:../../libDaisy//src/per/tim.h ****         /** @brief Hardware Timer to configure, and use. */
  47:../../libDaisy//src/per/tim.h ****         enum class Peripheral
  48:../../libDaisy//src/per/tim.h ****         {
  49:../../libDaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  50:../../libDaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  51:../../libDaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  52:../../libDaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  53:../../libDaisy//src/per/tim.h ****         };
  54:../../libDaisy//src/per/tim.h **** 
  55:../../libDaisy//src/per/tim.h ****         /** @brief Direction of the auto-reload counter. 
  56:../../libDaisy//src/per/tim.h ****          ** @todo Add support for the various  
  57:../../libDaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  58:../../libDaisy//src/per/tim.h ****          ** */
  59:../../libDaisy//src/per/tim.h ****         enum class CounterDir
  60:../../libDaisy//src/per/tim.h ****         {
  61:../../libDaisy//src/per/tim.h ****             UP = 0,
  62:../../libDaisy//src/per/tim.h ****             DOWN,
  63:../../libDaisy//src/per/tim.h ****         };
  64:../../libDaisy//src/per/tim.h **** 
  65:../../libDaisy//src/per/tim.h ****         Peripheral periph; /**< Hardware Peripheral */
  66:../../libDaisy//src/per/tim.h ****         CounterDir dir;    /**< Counter direction */
  67:../../libDaisy//src/per/tim.h **** 
  68:../../libDaisy//src/per/tim.h ****         /** @brief period in ticks at TIM frequency that counter will reset based on dir
  69:../../libDaisy//src/per/tim.h ****          *  @note TIM3 and TIM4 are both 16-bit timers. So the period maximum is 0xffff.
  70:../../libDaisy//src/per/tim.h ****         */
  71:../../libDaisy//src/per/tim.h ****         uint32_t period;
  72:../../libDaisy//src/per/tim.h ****         bool     enable_irq; /**< Enable interrupt for user based callback */
  73:../../libDaisy//src/per/tim.h **** 
  74:../../libDaisy//src/per/tim.h ****         /* @brief Constructor for default states */
  75:../../libDaisy//src/per/tim.h ****         Config()
  76:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
  77:../../libDaisy//src/per/tim.h ****           dir(CounterDir::UP),
  78:../../libDaisy//src/per/tim.h ****           period(0xffffffff),
  79:../../libDaisy//src/per/tim.h ****           enable_irq(false)
  80:../../libDaisy//src/per/tim.h ****         {
  81:../../libDaisy//src/per/tim.h ****         }
  82:../../libDaisy//src/per/tim.h ****     };
  83:../../libDaisy//src/per/tim.h **** 
  84:../../libDaisy//src/per/tim.h ****     /** @brief Return values for TIM funcitons. */
  85:../../libDaisy//src/per/tim.h ****     enum class Result
  86:../../libDaisy//src/per/tim.h ****     {
  87:../../libDaisy//src/per/tim.h ****         OK,
  88:../../libDaisy//src/per/tim.h ****         ERR,
  89:../../libDaisy//src/per/tim.h ****     };
  90:../../libDaisy//src/per/tim.h **** 
  91:../../libDaisy//src/per/tim.h ****     /** @brief User Callback type that will fire at the end of each timer 
  92:../../libDaisy//src/per/tim.h ****      *   period. This requires that Config::enable_irq is true before Init
  93:../../libDaisy//src/per/tim.h ****      *  @param data pointer to arbitrary user-provided data
  94:../../libDaisy//src/per/tim.h ****     */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 5


  95:../../libDaisy//src/per/tim.h ****     typedef void (*PeriodElapsedCallback)(void* data);
  96:../../libDaisy//src/per/tim.h **** 
  97:../../libDaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  98:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  99:../../libDaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
 100:../../libDaisy//src/per/tim.h ****     ~TimerHandle() {}
  80              		.loc 3 100 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 100 21 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE3673:
  90              		.weak	_ZN5daisy11TimerHandleD1Ev
  91              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
  92              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy6SwitchD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy6SwitchD2Ev:
 102              	.LVL3:
 103              	.LFB3866:
 104              		.file 4 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 6


  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 105              		.loc 4 42 5 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              		.loc 4 42 16 is_stmt 0 view .LVU7
 111 0000 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE3866:
 115              		.weak	_ZN5daisy6SwitchD1Ev
 116              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
 117              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
 118              		.align	1
 119              		.p2align 2,,3
 120              		.weak	_ZN5daisy9ParameterD2Ev
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	_ZN5daisy9ParameterD2Ev:
 127              	.LVL4:
 128              	.LFB3915:
 129              		.file 5 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 7


  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
 130              		.loc 5 27 5 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LBB149:
 136              	.LBI149:
 137              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
 138              		.loc 6 23 5 view .LVU9
 139              		.loc 6 23 5 is_stmt 0 view .LVU10
 140              	.LBE149:
 141              		.loc 5 27 19 view .LVU11
 142 0000 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE3915:
 146              		.weak	_ZN5daisy9ParameterD1Ev
 147              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
 148 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 149              		.align	1
 150              		.p2align 2,,3
 151              		.weak	_ZN5daisy9DaisySeedD2Ev
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-d16
 157              	_ZN5daisy9DaisySeedD2Ev:
 158              	.LVL5:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 8


 159              	.LFB4783:
 160              		.file 7 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 161              		.loc 7 22 5 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LBB150:
 167              	.LBI150:
 168              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 9


  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 169              		.loc 8 78 5 view .LVU13
 170              		.loc 8 78 5 is_stmt 0 view .LVU14
 171              	.LBE150:
 172              	.LBB151:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 10


 173              	.LBI151:
 174              		.file 9 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 175              		.loc 9 42 5 is_stmt 1 view .LVU15
 176              		.loc 9 42 5 is_stmt 0 view .LVU16
 177              	.LBE151:
 178              	.LBB152:
 179              	.LBI152:
 180              		.file 10 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 11


   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 12


  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 181              		.loc 10 93 5 is_stmt 1 view .LVU17
 182              		.loc 10 93 5 is_stmt 0 view .LVU18
 183              	.LBE152:
 184              	.LBB153:
 185              	.LBI153:
 186              		.file 11 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 13


  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 14


  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 187              		.loc 11 96 5 is_stmt 1 view .LVU19
 188              		.loc 11 96 5 is_stmt 0 view .LVU20
 189              	.LBE153:
 190              		.loc 7 22 19 view .LVU21
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE4783:
 195              		.weak	_ZN5daisy9DaisySeedD1Ev
 196              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 197 0002 00BF     		.section	.text._ZN6DelayyD2Ev,"axG",%progbits,_ZN6DelayyD5Ev,comdat
 198              		.align	1
 199              		.p2align 2,,3
 200              		.weak	_ZN6DelayyD2Ev
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	_ZN6DelayyD2Ev:
 207              	.LVL6:
 208              	.LFB5358:
 209              		.file 12 "Delay.h"
   1:Delay.h       **** #include "daisysp.h"
   2:Delay.h       **** #include "daisy_seed.h"
   3:Delay.h       **** #pragma once
   4:Delay.h       **** using namespace daisysp;
   5:Delay.h       **** using namespace daisy;
   6:Delay.h       **** using namespace daisy::seed;
   7:Delay.h       **** 
   8:Delay.h       **** #define MAX_DELAY static_cast<size_t>(24000)//48000 * 3.f)  // Max delay of 3 seconds which is 20 b
   9:Delay.h       **** const int NUM_OF_DELAY_HEADS = 4;                   // # of delay heads, simply change this number 
  10:Delay.h       **** //extern DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS  delayMems[4];
  11:Delay.h       **** 
  12:Delay.h       **** 
  13:Delay.h       **** 
  14:Delay.h       **** class Delayy
 210              		.loc 12 14 7 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 15


 215              		.loc 12 14 7 is_stmt 0 view .LVU23
 216 0000 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE5358:
 220              		.weak	_ZN6DelayyD1Ev
 221              		.thumb_set _ZN6DelayyD1Ev,_ZN6DelayyD2Ev
 222              		.section	.text._ZN10ToneFilterD2Ev,"axG",%progbits,_ZN10ToneFilterD5Ev,comdat
 223              		.align	1
 224              		.p2align 2,,3
 225              		.weak	_ZN10ToneFilterD2Ev
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	_ZN10ToneFilterD2Ev:
 232              	.LVL7:
 233              	.LFB5361:
 234              		.file 13 "ToneFilter.h"
   1:ToneFilter.h  **** #pragma once
   2:ToneFilter.h  **** #include "daisysp.h"
   3:ToneFilter.h  **** #include "daisy_seed.h"
   4:ToneFilter.h  **** 
   5:ToneFilter.h  **** using namespace daisysp;
   6:ToneFilter.h  **** using namespace daisy;
   7:ToneFilter.h  **** using namespace daisy::seed;
   8:ToneFilter.h  **** 
   9:ToneFilter.h  **** class ToneFilter
 235              		.loc 13 9 7 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LBB154:
 241              	.LBI154:
 242              		.file 14 "../../DaisySP//Source/Filters/atone.h"
   1:../../DaisySP//Source/Filters/atone.h **** #pragma once
   2:../../DaisySP//Source/Filters/atone.h **** #ifndef DSY_ATONE_H
   3:../../DaisySP//Source/Filters/atone.h **** #define DSY_ATONE_H
   4:../../DaisySP//Source/Filters/atone.h **** 
   5:../../DaisySP//Source/Filters/atone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/atone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/atone.h **** 
   8:../../DaisySP//Source/Filters/atone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/atone.h **** {
  10:../../DaisySP//Source/Filters/atone.h **** /** A first-order recursive high-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/atone.h ****      Original Author(s): Barry Vercoe, John FFitch, Gabriel Maldonado
  12:../../DaisySP//Source/Filters/atone.h **** 
  13:../../DaisySP//Source/Filters/atone.h ****      Year: 1991
  14:../../DaisySP//Source/Filters/atone.h **** 
  15:../../DaisySP//Source/Filters/atone.h ****      Original Location: Csound -- OOps/ugens5.c
  16:../../DaisySP//Source/Filters/atone.h **** 
  17:../../DaisySP//Source/Filters/atone.h ****      Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Filters/atone.h ****     */
  19:../../DaisySP//Source/Filters/atone.h **** class ATone
  20:../../DaisySP//Source/Filters/atone.h **** {
  21:../../DaisySP//Source/Filters/atone.h ****   public:
  22:../../DaisySP//Source/Filters/atone.h ****     ATone() {}
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 16


  23:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
 243              		.loc 14 23 5 view .LVU25
 244              		.loc 14 23 5 is_stmt 0 view .LVU26
 245              	.LBE154:
 246              	.LBB155:
 247              	.LBI155:
 248              		.file 15 "../../DaisySP//Source/Filters/tone.h"
   1:../../DaisySP//Source/Filters/tone.h **** #pragma once
   2:../../DaisySP//Source/Filters/tone.h **** #ifndef DSY_TONE_H
   3:../../DaisySP//Source/Filters/tone.h **** #define DSY_TONE_H
   4:../../DaisySP//Source/Filters/tone.h **** 
   5:../../DaisySP//Source/Filters/tone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/tone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/tone.h **** 
   8:../../DaisySP//Source/Filters/tone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/tone.h **** {
  10:../../DaisySP//Source/Filters/tone.h **** /** A first-order recursive low-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/tone.h **** */
  12:../../DaisySP//Source/Filters/tone.h **** class Tone
  13:../../DaisySP//Source/Filters/tone.h **** {
  14:../../DaisySP//Source/Filters/tone.h ****   public:
  15:../../DaisySP//Source/Filters/tone.h ****     Tone() {}
  16:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 249              		.loc 15 16 5 is_stmt 1 view .LVU27
 250              		.loc 15 16 5 is_stmt 0 view .LVU28
 251              	.LBE155:
 252              		.loc 13 9 7 view .LVU29
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE5361:
 257              		.weak	_ZN10ToneFilterD1Ev
 258              		.thumb_set _ZN10ToneFilterD1Ev,_ZN10ToneFilterD2Ev
 259 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 260              		.align	1
 261              		.p2align 2,,3
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	__tcf_0:
 268              	.LFB5363:
 269              		.file 16 "MyNewProject.cpp"
   1:MyNewProject.cpp **** 
   2:MyNewProject.cpp **** #include "Delay.h"
   3:MyNewProject.cpp **** #include "ToneFilter.h"
   4:MyNewProject.cpp **** 
   5:MyNewProject.cpp **** 
   6:MyNewProject.cpp **** using namespace daisysp;
   7:MyNewProject.cpp **** using namespace daisy;
   8:MyNewProject.cpp **** using namespace daisy::seed;
   9:MyNewProject.cpp **** 
  10:MyNewProject.cpp **** Delayy delay;
  11:MyNewProject.cpp **** ToneFilter tone(48000.f);
  12:MyNewProject.cpp **** static Balance balance;
  13:MyNewProject.cpp **** 
  14:MyNewProject.cpp **** Switch ON_BUTTON;                 // The on/off button
  15:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 17


  16:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
 270              		.loc 16 16 8 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              		.loc 16 16 8 is_stmt 0 view .LVU31
 276 0000 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE5363:
 280 0002 00BF     		.section	.text._Z10CheckTempov,"ax",%progbits
 281              		.align	1
 282              		.p2align 2,,3
 283              		.global	_Z10CheckTempov
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-d16
 289              	_Z10CheckTempov:
 290              	.LFB4791:
  17:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
  18:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
  19:MyNewProject.cpp **** 
  20:MyNewProject.cpp **** 
  21:MyNewProject.cpp **** float MAX_FEEDBACK = 1.1f;        // Max value of feedback knob, maxFeedback=1 -> forever repeats b
  22:MyNewProject.cpp **** float drywet_ratio = 0.5f;        // Drywet_ratio=0.0 is effect off
  23:MyNewProject.cpp **** const float MAX_DELAY_SEC = 3.0f; // Max amount of seconds allowed to get 20 bpm
  24:MyNewProject.cpp **** const float MIN_DELAY_SEC = 0.6f; // Min amount of seconds allowed to get 100 bpm
  25:MyNewProject.cpp **** bool onButtonWasPressed = false;  // Flag for turning on/off delays, replace with onButton.risingEd
  26:MyNewProject.cpp **** volatile float BPM = 20.0f;       // The BPM of delays
  27:MyNewProject.cpp **** volatile bool TAPPING = false;    // True when user is TAPPING
  28:MyNewProject.cpp **** TimerHandle TIMER;                // Timer that will be used to calculate bpm
  29:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
  30:MyNewProject.cpp **** Parameter feedbackKnob;
  31:MyNewProject.cpp **** 
  32:MyNewProject.cpp **** // Sets the delays when there is a change
  33:MyNewProject.cpp **** void CheckTempo();
  34:MyNewProject.cpp **** // Initialize buttons for the delay heads to the pins we want
  35:MyNewProject.cpp **** void InitHeadButtons();
  36:MyNewProject.cpp **** // Processes the controls and updates values that changed
  37:MyNewProject.cpp **** void ProcessControls();
  38:MyNewProject.cpp **** 
  39:MyNewProject.cpp **** 
  40:MyNewProject.cpp **** static void AudioCallback(AudioHandle::InputBuffer  in,
  41:MyNewProject.cpp ****                           AudioHandle::OutputBuffer out,
  42:MyNewProject.cpp ****                           size_t                    size)
  43:MyNewProject.cpp **** {
  44:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
  45:MyNewProject.cpp ****     {
  46:MyNewProject.cpp ****         // 
  47:MyNewProject.cpp ****         ProcessControls();
  48:MyNewProject.cpp ****         // Check for tempo change
  49:MyNewProject.cpp ****         CheckTempo();
  50:MyNewProject.cpp ****         // Set delays with new bpm
  51:MyNewProject.cpp ****         delay.setBPM(BPM);       
  52:MyNewProject.cpp **** 
  53:MyNewProject.cpp **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 18


  54:MyNewProject.cpp ****         ON_BUTTON.Debounce();
  55:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
  56:MyNewProject.cpp ****         if(ON_BUTTON.Pressed() && !onButtonWasPressed)
  57:MyNewProject.cpp ****         {
  58:MyNewProject.cpp ****             onButtonWasPressed = true; // set the flag to indicate that the button was pressed
  59:MyNewProject.cpp ****             delay.stopAll();
  60:MyNewProject.cpp ****         }
  61:MyNewProject.cpp **** 
  62:MyNewProject.cpp ****         // Check if the button was released
  63:MyNewProject.cpp ****         if(!ON_BUTTON.Pressed() && onButtonWasPressed)
  64:MyNewProject.cpp ****         {
  65:MyNewProject.cpp ****             onButtonWasPressed = false; // reset the flag
  66:MyNewProject.cpp ****         }
  67:MyNewProject.cpp **** 
  68:MyNewProject.cpp ****         float final_mix = 0;         // The final float value that will be outputted
  69:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
  70:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
  71:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
  72:MyNewProject.cpp **** 
  73:MyNewProject.cpp ****     
  74:MyNewProject.cpp **** 
  75:MyNewProject.cpp ****         all_delay_signals = delay.process(in[0][i]);
  76:MyNewProject.cpp ****         float preFilter = all_delay_signals;
  77:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
  78:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*2.5f);
  79:MyNewProject.cpp **** 
  80:MyNewProject.cpp ****         
  81:MyNewProject.cpp **** 
  82:MyNewProject.cpp **** 
  83:MyNewProject.cpp ****         nonConstInput = in[0][i];
  84:MyNewProject.cpp **** 
  85:MyNewProject.cpp **** 		// Use a crossfade object to maintain a constant power while mixing the delayed/raw audio mix
  86:MyNewProject.cpp **** 		cfade.SetPos(drywet_ratio);
  87:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
  88:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
  89:MyNewProject.cpp ****     }
  90:MyNewProject.cpp **** }
  91:MyNewProject.cpp **** 
  92:MyNewProject.cpp **** int main(void)
  93:MyNewProject.cpp **** {
  94:MyNewProject.cpp ****     // Initialize seed hardware.
  95:MyNewProject.cpp ****     hw.Init();
  96:MyNewProject.cpp **** 
  97:MyNewProject.cpp ****     // Setting up serial and printing
  98:MyNewProject.cpp ****     hw.StartLog();
  99:MyNewProject.cpp **** 
 100:MyNewProject.cpp ****     // Initialize the button to D28, Pin 35 to be the on/off button
 101:MyNewProject.cpp ****     ON_BUTTON.Init(hw.GetPin(28),1000);
 102:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 103:MyNewProject.cpp ****     TEMPO_BUTTON.Init(hw.GetPin(25),1000);
 104:MyNewProject.cpp ****     // Init the head on/off buttons
 105:MyNewProject.cpp ****     InitHeadButtons();
 106:MyNewProject.cpp **** 
 107:MyNewProject.cpp **** 
 108:MyNewProject.cpp ****     //set blocksize.
 109:MyNewProject.cpp ****     hw.SetAudioBlockSize(4);
 110:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 19


 111:MyNewProject.cpp **** 
 112:MyNewProject.cpp ****     // Set params for CrossFade object
 113:MyNewProject.cpp ****     cfade.Init();
 114:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 115:MyNewProject.cpp ****     cfade.SetCurve(CROSSFADE_CPOW);
 116:MyNewProject.cpp **** 
 117:MyNewProject.cpp ****     // Start callback
 118:MyNewProject.cpp ****     hw.StartAudio(AudioCallback);
 119:MyNewProject.cpp **** 
 120:MyNewProject.cpp ****     //TIMER****************************************************************************************
 121:MyNewProject.cpp ****     TimerHandle::Config config;                             // Config for the timer
 122:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 123:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 124:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 125:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 126:MyNewProject.cpp **** 
 127:MyNewProject.cpp ****     // Init the timer with our config
 128:MyNewProject.cpp ****     TIMER.Init(config);
 129:MyNewProject.cpp ****     // Make sure the timer is off
 130:MyNewProject.cpp ****     TIMER.Stop();
 131:MyNewProject.cpp ****     //*********************************************************************************************
 132:MyNewProject.cpp **** 
 133:MyNewProject.cpp **** 
 134:MyNewProject.cpp ****     //FEEDBACK KNOB INIT*************************************************************
 135:MyNewProject.cpp ****     // Configure the knob to pin D15
 136:MyNewProject.cpp ****     AdcChannelConfig adcConfig;
 137:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 138:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 139:MyNewProject.cpp ****     
 140:MyNewProject.cpp ****     AnalogControl fbk;
 141:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 142:MyNewProject.cpp ****     fbk.Init(hw.adc.GetPtr(0),hw.AudioSampleRate());
 143:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 144:MyNewProject.cpp ****     //*******************************************************************************
 145:MyNewProject.cpp **** 
 146:MyNewProject.cpp ****     balance.Init(48000);
 147:MyNewProject.cpp ****     hw.adc.Start();
 148:MyNewProject.cpp **** 
 149:MyNewProject.cpp ****     while(1) 
 150:MyNewProject.cpp ****     {
 151:MyNewProject.cpp ****         //Not sure why the delay, taken from the Daisy petal MultiDelay.cpp example
 152:MyNewProject.cpp ****         System::Delay(6);
 153:MyNewProject.cpp **** 
 154:MyNewProject.cpp ****     }
 155:MyNewProject.cpp **** }
 156:MyNewProject.cpp **** 
 157:MyNewProject.cpp **** void CheckTempo()
 158:MyNewProject.cpp **** {
 291              		.loc 16 158 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 159:MyNewProject.cpp ****     
 160:MyNewProject.cpp **** 
 161:MyNewProject.cpp ****     uint32_t tick;    // The position of the counter when the second tap occurs
 295              		.loc 16 161 5 view .LVU33
 162:MyNewProject.cpp ****     uint32_t freq;    // The frequency of each tick of the timer in Hz.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 20


 296              		.loc 16 162 5 view .LVU34
 163:MyNewProject.cpp ****     float seconds;    // The seconds elapsed between first and second tap
 297              		.loc 16 163 5 view .LVU35
 164:MyNewProject.cpp **** 
 165:MyNewProject.cpp **** 
 166:MyNewProject.cpp ****     tick = TIMER.GetTick();            
 298              		.loc 16 166 5 view .LVU36
 158:MyNewProject.cpp ****     
 299              		.loc 16 158 1 is_stmt 0 view .LVU37
 300 0000 10B5     		push	{r4, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 304              		.loc 16 166 25 view .LVU38
 305 0002 3148     		ldr	r0, .L27
 158:MyNewProject.cpp ****     
 306              		.loc 16 158 1 view .LVU39
 307 0004 2DED028B 		vpush.64	{d8}
 308              		.cfi_def_cfa_offset 16
 309              		.cfi_offset 80, -16
 310              		.cfi_offset 81, -12
 311              		.loc 16 166 25 view .LVU40
 312 0008 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetTickEv
 313              	.LVL8:
 314 000c 0346     		mov	r3, r0
 167:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 315              		.loc 16 167 25 view .LVU41
 316 000e 2E48     		ldr	r0, .L27
 166:MyNewProject.cpp ****     freq = TIMER.GetFreq();    
 317              		.loc 16 166 25 view .LVU42
 318 0010 08EE103A 		vmov	s16, r3	@ int
 319              	.LVL9:
 320              		.loc 16 167 5 is_stmt 1 view .LVU43
 321              		.loc 16 167 25 is_stmt 0 view .LVU44
 322 0014 FFF7FEFF 		bl	_ZN5daisy11TimerHandle7GetFreqEv
 323              	.LVL10:
 168:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 324              		.loc 16 168 5 is_stmt 1 view .LVU45
 325              		.loc 16 168 29 is_stmt 0 view .LVU46
 326 0018 07EE900A 		vmov	s15, r0	@ int
 169:MyNewProject.cpp **** 
 170:MyNewProject.cpp ****     //Check if the timer has gone past our max delay, if so, abandon this tap tempo and keep the ol
 171:MyNewProject.cpp ****     if(seconds > MAX_DELAY_SEC && TAPPING)
 327              		.loc 16 171 32 view .LVU47
 328 001c B0EE087A 		vmov.f32	s14, #3.0e+0
 168:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 329              		.loc 16 168 15 view .LVU48
 330 0020 B8EE488A 		vcvt.f32.u32	s16, s16
 331              	.LVL11:
 168:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 332              		.loc 16 168 29 view .LVU49
 333 0024 F8EE677A 		vcvt.f32.u32	s15, s15
 168:MyNewProject.cpp ****     seconds = (float)tick / (float)freq; // Calculating seconds from timer as recomended by documen
 334              		.loc 16 168 13 view .LVU50
 335 0028 C8EE278A 		vdiv.f32	s17, s16, s15
 336              	.LVL12:
 337              		.loc 16 171 5 is_stmt 1 view .LVU51
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 21


 338              		.loc 16 171 32 is_stmt 0 view .LVU52
 339 002c F4EEC78A 		vcmpe.f32	s17, s14
 340 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 341 0034 02DD     		ble	.L12
 342              		.loc 16 171 35 discriminator 1 view .LVU53
 343 0036 254C     		ldr	r4, .L27+4
 344 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 345              		.loc 16 171 32 discriminator 1 view .LVU54
 346 003a 73BB     		cbnz	r3, .L25
 347              	.LVL13:
 348              	.L12:
 172:MyNewProject.cpp ****     {
 173:MyNewProject.cpp ****         //hw.PrintLine("Over 3 sec");
 174:MyNewProject.cpp ****         TIMER.DeInit();
 175:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 176:MyNewProject.cpp **** 
 177:MyNewProject.cpp ****         // Turn the timer off
 178:MyNewProject.cpp ****         TIMER.Stop();
 179:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 180:MyNewProject.cpp ****     }
 181:MyNewProject.cpp **** 
 182:MyNewProject.cpp ****     // Check if the button was clicked
 183:MyNewProject.cpp ****     TEMPO_BUTTON.Debounce();
 349              		.loc 16 183 5 is_stmt 1 view .LVU55
 350              		.loc 16 183 26 is_stmt 0 view .LVU56
 351 003c 244C     		ldr	r4, .L27+8
 352 003e 2046     		mov	r0, r4
 353 0040 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 354              	.LVL14:
 184:MyNewProject.cpp ****     if(TEMPO_BUTTON.RisingEdge() )
 355              		.loc 16 184 5 is_stmt 1 view .LVU57
 356              	.LBB156:
 357              	.LBI156:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 22


  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 358              		.loc 4 70 17 view .LVU58
 359              	.LBB157:
 360              		.loc 4 70 38 view .LVU59
 361              		.loc 4 70 54 is_stmt 0 view .LVU60
 362 0044 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 363 0046 2BB3     		cbz	r3, .L11
 364              	.LVL15:
 365              		.loc 4 70 54 view .LVU61
 366              	.LBE157:
 367              	.LBE156:
 368              		.loc 16 184 5 view .LVU62
 369 0048 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 370 004a 7F2B     		cmp	r3, #127
 371 004c 22D1     		bne	.L11
 185:MyNewProject.cpp ****     {
 186:MyNewProject.cpp ****         // The first tap
 187:MyNewProject.cpp ****         if(TAPPING == false)
 372              		.loc 16 187 9 is_stmt 1 view .LVU63
 373              		.loc 16 187 20 is_stmt 0 view .LVU64
 374 004e 1F4B     		ldr	r3, .L27+4
 375 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 376              		.loc 16 187 9 view .LVU65
 377 0052 82B3     		cbz	r2, .L26
 188:MyNewProject.cpp ****         {
 189:MyNewProject.cpp ****             TAPPING = true; // Set the TAPPING flag
 190:MyNewProject.cpp **** 
 191:MyNewProject.cpp ****             // Start the timer and begin counting
 192:MyNewProject.cpp ****             TIMER.Start(); 
 193:MyNewProject.cpp **** 
 194:MyNewProject.cpp **** 
 195:MyNewProject.cpp ****         }
 196:MyNewProject.cpp ****         // The second tap
 197:MyNewProject.cpp ****         else 
 198:MyNewProject.cpp ****         {
 199:MyNewProject.cpp ****             TAPPING = false; // Reset TAPPING flag
 378              		.loc 16 199 13 is_stmt 1 view .LVU66
 379              		.loc 16 199 21 is_stmt 0 view .LVU67
 380 0054 0022     		movs	r2, #0
 200:MyNewProject.cpp **** 
 201:MyNewProject.cpp ****             // Stop the timer
 202:MyNewProject.cpp ****             TIMER.Stop();
 381              		.loc 16 202 23 view .LVU68
 382 0056 1C48     		ldr	r0, .L27
 199:MyNewProject.cpp **** 
 383              		.loc 16 199 21 view .LVU69
 384 0058 1A70     		strb	r2, [r3]
 385              		.loc 16 202 13 is_stmt 1 view .LVU70
 386              		.loc 16 202 23 is_stmt 0 view .LVU71
 387 005a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 388              	.LVL16:
 203:MyNewProject.cpp ****             TIMER.DeInit();
 389              		.loc 16 203 13 is_stmt 1 view .LVU72
 390              		.loc 16 203 25 is_stmt 0 view .LVU73
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 23


 391 005e 1A48     		ldr	r0, .L27
 392 0060 FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 393              	.LVL17:
 204:MyNewProject.cpp ****             TIMER.Init(*configPtr);
 394              		.loc 16 204 13 is_stmt 1 view .LVU74
 395              		.loc 16 204 23 is_stmt 0 view .LVU75
 396 0064 1B4B     		ldr	r3, .L27+12
 397 0066 1848     		ldr	r0, .L27
 398 0068 1968     		ldr	r1, [r3]
 399 006a FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 400              	.LVL18:
 205:MyNewProject.cpp ****             // Turn the timer off
 206:MyNewProject.cpp ****             TIMER.Stop();
 401              		.loc 16 206 13 is_stmt 1 view .LVU76
 402              		.loc 16 206 23 is_stmt 0 view .LVU77
 403 006e 1648     		ldr	r0, .L27
 404 0070 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 405              	.LVL19:
 207:MyNewProject.cpp **** 
 208:MyNewProject.cpp ****             // Only set new BPM if its greater than our minimum
 209:MyNewProject.cpp ****             if(seconds > MIN_DELAY_SEC )
 406              		.loc 16 209 13 is_stmt 1 view .LVU78
 407 0074 DFED187A 		vldr.32	s15, .L27+16
 408 0078 F4EEE78A 		vcmpe.f32	s17, s15
 409 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 410 0080 08DD     		ble	.L11
 210:MyNewProject.cpp ****             {
 211:MyNewProject.cpp ****                 BPM = -33.3333f*(seconds)+120; // Set the BPM for the delays 
 411              		.loc 16 211 17 view .LVU79
 412              		.loc 16 211 42 is_stmt 0 view .LVU80
 413 0082 9FED167A 		vldr.32	s14, .L27+20
 414 0086 DFED167A 		vldr.32	s15, .L27+24
 415              		.loc 16 211 21 view .LVU81
 416 008a 164B     		ldr	r3, .L27+28
 417              		.loc 16 211 42 view .LVU82
 418 008c E8EE877A 		vfma.f32	s15, s17, s14
 419              		.loc 16 211 21 view .LVU83
 420 0090 C3ED007A 		vstr.32	s15, [r3]
 421              	.L11:
 212:MyNewProject.cpp ****                 // Set all delays to new bpm
 213:MyNewProject.cpp ****             }
 214:MyNewProject.cpp ****             //else
 215:MyNewProject.cpp ****                 //hw.PrintLine("Under .6");
 216:MyNewProject.cpp **** 
 217:MyNewProject.cpp **** 
 218:MyNewProject.cpp ****             
 219:MyNewProject.cpp ****         }
 220:MyNewProject.cpp ****     
 221:MyNewProject.cpp **** 
 222:MyNewProject.cpp ****     }
 223:MyNewProject.cpp **** 
 224:MyNewProject.cpp **** 
 225:MyNewProject.cpp **** }
 422              		.loc 16 225 1 view .LVU84
 423 0094 BDEC028B 		vldm	sp!, {d8}
 424              		.cfi_remember_state
 425              		.cfi_restore 80
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 24


 426              		.cfi_restore 81
 427              		.cfi_def_cfa_offset 8
 428 0098 10BD     		pop	{r4, pc}
 429              	.LVL20:
 430              	.L25:
 431              		.cfi_restore_state
 174:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 432              		.loc 16 174 9 is_stmt 1 view .LVU85
 174:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 433              		.loc 16 174 21 is_stmt 0 view .LVU86
 434 009a 0B48     		ldr	r0, .L27
 435              	.LVL21:
 174:MyNewProject.cpp ****         TIMER.Init(*configPtr);
 436              		.loc 16 174 21 view .LVU87
 437 009c FFF7FEFF 		bl	_ZN5daisy11TimerHandle6DeInitEv
 438              	.LVL22:
 175:MyNewProject.cpp **** 
 439              		.loc 16 175 9 is_stmt 1 view .LVU88
 175:MyNewProject.cpp **** 
 440              		.loc 16 175 19 is_stmt 0 view .LVU89
 441 00a0 0C4B     		ldr	r3, .L27+12
 442 00a2 0948     		ldr	r0, .L27
 443 00a4 1968     		ldr	r1, [r3]
 444 00a6 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 445              	.LVL23:
 178:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 446              		.loc 16 178 9 is_stmt 1 view .LVU90
 178:MyNewProject.cpp ****         TAPPING = false;         // Reset the TAPPING flag 
 447              		.loc 16 178 19 is_stmt 0 view .LVU91
 448 00aa 0748     		ldr	r0, .L27
 449 00ac FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 450              	.LVL24:
 179:MyNewProject.cpp ****     }
 451              		.loc 16 179 9 is_stmt 1 view .LVU92
 179:MyNewProject.cpp ****     }
 452              		.loc 16 179 17 is_stmt 0 view .LVU93
 453 00b0 0023     		movs	r3, #0
 454 00b2 2370     		strb	r3, [r4]
 455 00b4 C2E7     		b	.L12
 456              	.L26:
 189:MyNewProject.cpp **** 
 457              		.loc 16 189 13 is_stmt 1 view .LVU94
 458              		.loc 16 225 1 is_stmt 0 view .LVU95
 459 00b6 BDEC028B 		vldm	sp!, {d8}
 460              		.cfi_restore 80
 461              		.cfi_restore 81
 462              		.cfi_def_cfa_offset 8
 189:MyNewProject.cpp **** 
 463              		.loc 16 189 21 view .LVU96
 464 00ba 0122     		movs	r2, #1
 192:MyNewProject.cpp **** 
 465              		.loc 16 192 24 view .LVU97
 466 00bc 0248     		ldr	r0, .L27
 467              		.loc 16 225 1 view .LVU98
 468 00be BDE81040 		pop	{r4, lr}
 469              		.cfi_restore 14
 470              		.cfi_restore 4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 25


 471              		.cfi_def_cfa_offset 0
 189:MyNewProject.cpp **** 
 472              		.loc 16 189 21 view .LVU99
 473 00c2 1A70     		strb	r2, [r3]
 192:MyNewProject.cpp **** 
 474              		.loc 16 192 13 is_stmt 1 view .LVU100
 192:MyNewProject.cpp **** 
 475              		.loc 16 192 24 is_stmt 0 view .LVU101
 476 00c4 FFF7FEBF 		b	_ZN5daisy11TimerHandle5StartEv
 477              	.LVL25:
 478              	.L28:
 479              		.align	2
 480              	.L27:
 481 00c8 00000000 		.word	.LANCHOR0
 482 00cc 00000000 		.word	.LANCHOR1
 483 00d0 00000000 		.word	.LANCHOR3
 484 00d4 00000000 		.word	.LANCHOR2
 485 00d8 9A99193F 		.word	1058642330
 486 00dc 4D5505C2 		.word	-1039837875
 487 00e0 0000F042 		.word	1123024896
 488 00e4 00000000 		.word	.LANCHOR4
 489              		.cfi_endproc
 490              	.LFE4791:
 492              		.section	.text._Z15InitHeadButtonsv,"ax",%progbits
 493              		.align	1
 494              		.p2align 2,,3
 495              		.global	_Z15InitHeadButtonsv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv5-d16
 501              	_Z15InitHeadButtonsv:
 502              	.LFB4792:
 226:MyNewProject.cpp **** 
 227:MyNewProject.cpp **** void InitHeadButtons()
 228:MyNewProject.cpp **** {
 503              		.loc 16 228 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 229:MyNewProject.cpp ****     // Iterate through head switch array
 230:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 507              		.loc 16 230 5 view .LVU103
 508              	.LVL26:
 509              	.LBB158:
 510              		.loc 16 230 22 view .LVU104
 511              	.LBE158:
 228:MyNewProject.cpp ****     // Iterate through head switch array
 512              		.loc 16 228 1 is_stmt 0 view .LVU105
 513 0000 30B5     		push	{r4, r5, lr}
 514              		.cfi_def_cfa_offset 12
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 518 0002 0B4D     		ldr	r5, .L33
 519 0004 83B0     		sub	sp, sp, #12
 520              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 26


 228:MyNewProject.cpp ****     // Iterate through head switch array
 521              		.loc 16 228 1 view .LVU106
 522 0006 1524     		movs	r4, #21
 523              	.LVL27:
 524              	.L30:
 525              	.LBB159:
 231:MyNewProject.cpp ****     {
 232:MyNewProject.cpp ****         // Init buttons to D21 - D24
 233:MyNewProject.cpp ****         headSwitches[i].Init(hw.GetPin(21+i),1000);
 526              		.loc 16 233 9 is_stmt 1 discriminator 2 view .LVU107
 527              		.loc 16 233 29 is_stmt 0 discriminator 2 view .LVU108
 528 0008 2046     		mov	r0, r4
 230:MyNewProject.cpp ****     {
 529              		.loc 16 230 22 discriminator 2 view .LVU109
 530 000a 0134     		adds	r4, r4, #1
 531              		.loc 16 233 29 discriminator 2 view .LVU110
 532 000c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 533              	.LVL28:
 534 0010 0346     		mov	r3, r0	@ movhi
 230:MyNewProject.cpp ****     {
 535              		.loc 16 230 22 discriminator 2 view .LVU111
 536 0012 E4B2     		uxtb	r4, r4
 537              		.loc 16 233 29 discriminator 2 view .LVU112
 538 0014 2846     		mov	r0, r5
 539 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
 230:MyNewProject.cpp ****     {
 540              		.loc 16 230 22 discriminator 2 view .LVU113
 541 001a 1035     		adds	r5, r5, #16
 542              		.loc 16 233 29 discriminator 2 view .LVU114
 543 001c 9FED050A 		vldr.32	s0, .L33+4
 544 0020 0199     		ldr	r1, [sp, #4]
 545 0022 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 546              	.LVL29:
 230:MyNewProject.cpp ****     {
 547              		.loc 16 230 5 is_stmt 1 discriminator 2 view .LVU115
 230:MyNewProject.cpp ****     {
 548              		.loc 16 230 22 discriminator 2 view .LVU116
 549 0026 192C     		cmp	r4, #25
 550 0028 EED1     		bne	.L30
 551              	.LBE159:
 234:MyNewProject.cpp ****     }
 235:MyNewProject.cpp **** }
 552              		.loc 16 235 1 is_stmt 0 view .LVU117
 553 002a 03B0     		add	sp, sp, #12
 554              		.cfi_def_cfa_offset 12
 555              		@ sp needed
 556 002c 30BD     		pop	{r4, r5, pc}
 557              	.L34:
 558 002e 00BF     		.align	2
 559              	.L33:
 560 0030 00000000 		.word	.LANCHOR5
 561 0034 00007A44 		.word	1148846080
 562              		.cfi_endproc
 563              	.LFE4792:
 565              		.section	.text.startup.main,"ax",%progbits
 566              		.align	1
 567              		.p2align 2,,3
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 27


 568              		.global	main
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	main:
 575              	.LFB4790:
  93:MyNewProject.cpp ****     // Initialize seed hardware.
 576              		.loc 16 93 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ Volatile: function does not return.
 579              		@ args = 0, pretend = 0, frame = 120
 580              		@ frame_needed = 0, uses_anonymous_args = 0
  95:MyNewProject.cpp **** 
 581              		.loc 16 95 5 view .LVU119
  93:MyNewProject.cpp ****     // Initialize seed hardware.
 582              		.loc 16 93 1 is_stmt 0 view .LVU120
 583 0000 00B5     		push	{lr}
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 14, -4
  95:MyNewProject.cpp **** 
 586              		.loc 16 95 12 view .LVU121
 587 0002 0021     		movs	r1, #0
  93:MyNewProject.cpp ****     // Initialize seed hardware.
 588              		.loc 16 93 1 view .LVU122
 589 0004 9FB0     		sub	sp, sp, #124
 590              		.cfi_def_cfa_offset 128
  95:MyNewProject.cpp **** 
 591              		.loc 16 95 12 view .LVU123
 592 0006 4248     		ldr	r0, .L38
 593              	.LBB160:
 594              	.LBB161:
  38:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../../DaisySP//Source/Dynamics/crossfade.h ****         Defaults
  40:../../DaisySP//Source/Dynamics/crossfade.h ****         - current position = .5
  41:../../DaisySP//Source/Dynamics/crossfade.h ****         - curve = linear
  42:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../../DaisySP//Source/Dynamics/crossfade.h ****     {
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../../DaisySP//Source/Dynamics/crossfade.h ****     }
  48:../../DaisySP//Source/Dynamics/crossfade.h **** 
  49:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  54:../../DaisySP//Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../../DaisySP//Source/Dynamics/crossfade.h **** 
  56:../../DaisySP//Source/Dynamics/crossfade.h **** 
  57:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../../DaisySP//Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
  61:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../../DaisySP//Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 28


  63:../../DaisySP//Source/Dynamics/crossfade.h ****     */
  64:../../DaisySP//Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 595              		.loc 2 64 50 view .LVU124
 596 0008 0125     		movs	r5, #1
 597              	.LBE161:
 598              	.LBE160:
  95:MyNewProject.cpp **** 
 599              		.loc 16 95 12 view .LVU125
 600 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 601              	.LVL30:
  98:MyNewProject.cpp **** 
 602              		.loc 16 98 5 is_stmt 1 view .LVU126
 603              	.LBB163:
 604              	.LBI163:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 29


  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 122:../../libDaisy//src/daisy_seed.h ****     }
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 30


 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 605              		.loc 7 126 17 view .LVU127
 606              	.LBB164:
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 607              		.loc 7 128 9 view .LVU128
 608              		.loc 7 128 22 is_stmt 0 view .LVU129
 609 000e 0020     		movs	r0, #0
 610 0010 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 611              	.LVL31:
 612              		.loc 7 128 22 view .LVU130
 613              	.LBE164:
 614              	.LBE163:
 101:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 615              		.loc 16 101 5 is_stmt 1 view .LVU131
 101:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 616              		.loc 16 101 19 is_stmt 0 view .LVU132
 617 0014 1C20     		movs	r0, #28
 618 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 619              	.LVL32:
 620 001a 0346     		mov	r3, r0	@ movhi
 621 001c 9FED3D0A 		vldr.32	s0, .L38+4
 622              	.LBB165:
 623              	.LBB166:
 624              	.LBB167:
  79:../../libDaisy//src/per/tim.h ****         {
 625              		.loc 3 79 27 view .LVU133
 626 0020 0024     		movs	r4, #0
 627              	.LBE167:
 628              	.LBE166:
 629              	.LBE165:
 101:MyNewProject.cpp ****     // Init tap temp Button to D25, pin 32
 630              		.loc 16 101 19 view .LVU134
 631 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 632 0026 0299     		ldr	r1, [sp, #8]
 633 0028 3B48     		ldr	r0, .L38+8
 634 002a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 635              	.LVL33:
 103:MyNewProject.cpp ****     // Init the head on/off buttons
 636              		.loc 16 103 5 is_stmt 1 view .LVU135
 103:MyNewProject.cpp ****     // Init the head on/off buttons
 637              		.loc 16 103 22 is_stmt 0 view .LVU136
 638 002e 1920     		movs	r0, #25
 639 0030 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 640              	.LVL34:
 641 0034 0346     		mov	r3, r0	@ movhi
 642 0036 9FED370A 		vldr.32	s0, .L38+4
 643 003a ADF80C30 		strh	r3, [sp, #12]	@ movhi
 644 003e 3748     		ldr	r0, .L38+12
 645 0040 0399     		ldr	r1, [sp, #12]
 646 0042 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 647              	.LVL35:
 105:MyNewProject.cpp **** 
 648              		.loc 16 105 5 is_stmt 1 view .LVU137
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 31


 105:MyNewProject.cpp **** 
 649              		.loc 16 105 20 is_stmt 0 view .LVU138
 650 0046 FFF7FEFF 		bl	_Z15InitHeadButtonsv
 651              	.LVL36:
 109:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 652              		.loc 16 109 5 is_stmt 1 view .LVU139
 109:MyNewProject.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 653              		.loc 16 109 25 is_stmt 0 view .LVU140
 654 004a 0421     		movs	r1, #4
 655 004c 3048     		ldr	r0, .L38
 656 004e FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 657              	.LVL37:
 110:MyNewProject.cpp **** 
 658              		.loc 16 110 5 is_stmt 1 view .LVU141
 110:MyNewProject.cpp **** 
 659              		.loc 16 110 26 is_stmt 0 view .LVU142
 660 0052 0321     		movs	r1, #3
 661 0054 2E48     		ldr	r0, .L38
 662 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 663              	.LVL38:
 113:MyNewProject.cpp ****     // Sets crossfade to maintain constant power, which will maintain a constant volume as we go fr
 664              		.loc 16 113 5 is_stmt 1 view .LVU143
 665              	.LBB174:
 666              	.LBI174:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 667              		.loc 2 51 17 view .LVU144
 668              	.LBE174:
  51:../../DaisySP//Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 669              		.loc 2 51 26 view .LVU145
 670              	.LBB179:
 671              	.LBB175:
 672              	.LBI175:
  43:../../DaisySP//Source/Dynamics/crossfade.h ****     {
 673              		.loc 2 43 17 view .LVU146
 674              	.LBB176:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 675              		.loc 2 45 9 view .LVU147
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 676              		.loc 2 45 16 is_stmt 0 view .LVU148
 677 005a 314B     		ldr	r3, .L38+16
 678 005c 4FF07C52 		mov	r2, #1056964608
 679              	.LBE176:
 680              	.LBE175:
 681              	.LBE179:
 118:MyNewProject.cpp **** 
 682              		.loc 16 118 18 view .LVU149
 683 0060 3049     		ldr	r1, .L38+20
 684 0062 2B48     		ldr	r0, .L38
 685              	.LBB180:
 686              	.LBB178:
 687              	.LBB177:
  45:../../DaisySP//Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 688              		.loc 2 45 16 view .LVU150
 689 0064 1A60     		str	r2, [r3]	@ float
  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 690              		.loc 2 46 9 is_stmt 1 view .LVU151
 691              	.LVL39:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 32


  46:../../DaisySP//Source/Dynamics/crossfade.h ****     }
 692              		.loc 2 46 9 is_stmt 0 view .LVU152
 693              	.LBE177:
 694              	.LBE178:
 695              	.LBE180:
 115:MyNewProject.cpp **** 
 696              		.loc 16 115 5 is_stmt 1 view .LVU153
 697              	.LBB181:
 698              	.LBI160:
 699              		.loc 2 64 17 view .LVU154
 700              	.LBB162:
 701              		.loc 2 64 43 view .LVU155
 702              		.loc 2 64 50 is_stmt 0 view .LVU156
 703 0066 1D71     		strb	r5, [r3, #4]
 704              	.LVL40:
 705              		.loc 2 64 50 view .LVU157
 706              	.LBE162:
 707              	.LBE181:
 118:MyNewProject.cpp **** 
 708              		.loc 16 118 5 is_stmt 1 view .LVU158
 118:MyNewProject.cpp **** 
 709              		.loc 16 118 18 is_stmt 0 view .LVU159
 710 0068 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 711              	.LVL41:
 121:MyNewProject.cpp ****     config.dir = TimerHandle::Config::CounterDir::UP;       // Set it to count up 
 712              		.loc 16 121 5 is_stmt 1 view .LVU160
 713              	.LBB182:
 714              	.LBI165:
  75:../../libDaisy//src/per/tim.h ****         : periph(Peripheral::TIM_2),
 715              		.loc 3 75 9 view .LVU161
 716              	.LBB171:
 717              	.LBB168:
  79:../../libDaisy//src/per/tim.h ****         {
 718              		.loc 3 79 27 is_stmt 0 view .LVU162
 719 006c 4FF0FF32 		mov	r2, #-1
 720              	.LBE168:
 721              	.LBE171:
 722              	.LBE182:
 125:MyNewProject.cpp **** 
 723              		.loc 16 125 15 view .LVU163
 724 0070 2D4B     		ldr	r3, .L38+24
 725 0072 05A9     		add	r1, sp, #20
 726              	.LVL42:
 128:MyNewProject.cpp ****     // Make sure the timer is off
 727              		.loc 16 128 15 view .LVU164
 728 0074 2D48     		ldr	r0, .L38+28
 729              	.LBB183:
 730              	.LBB172:
 731              	.LBB169:
  79:../../libDaisy//src/per/tim.h ****         {
 732              		.loc 3 79 27 view .LVU165
 733 0076 0792     		str	r2, [sp, #28]
 734              	.LVL43:
  79:../../libDaisy//src/per/tim.h ****         {
 735              		.loc 3 79 27 view .LVU166
 736              	.LBE169:
 737              	.LBE172:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 33


 738              	.LBE183:
 122:MyNewProject.cpp ****     config.periph = TimerHandle::Config::Peripheral::TIM_2; // Use timer 2 which is 32 bit counter
 739              		.loc 16 122 5 is_stmt 1 view .LVU167
 123:MyNewProject.cpp ****     config.enable_irq = 1;                                  // Enable interrupt for user based call
 740              		.loc 16 123 5 view .LVU168
 124:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 741              		.loc 16 124 5 view .LVU169
 125:MyNewProject.cpp **** 
 742              		.loc 16 125 15 is_stmt 0 view .LVU170
 743 0078 1960     		str	r1, [r3]
 124:MyNewProject.cpp ****     configPtr = &config;                                    // Point our global config to the one w
 744              		.loc 16 124 23 view .LVU171
 745 007a 8DF82050 		strb	r5, [sp, #32]
 125:MyNewProject.cpp **** 
 746              		.loc 16 125 5 is_stmt 1 view .LVU172
 128:MyNewProject.cpp ****     // Make sure the timer is off
 747              		.loc 16 128 5 view .LVU173
 748              	.LBB184:
 749              	.LBB173:
 750              	.LBB170:
  79:../../libDaisy//src/per/tim.h ****         {
 751              		.loc 3 79 27 is_stmt 0 view .LVU174
 752 007e CDE90544 		strd	r4, r4, [sp, #20]
 753              	.LBE170:
 754              	.LBE173:
 755              	.LBE184:
 128:MyNewProject.cpp ****     // Make sure the timer is off
 756              		.loc 16 128 15 view .LVU175
 757 0082 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
 758              	.LVL44:
 130:MyNewProject.cpp ****     //*********************************************************************************************
 759              		.loc 16 130 5 is_stmt 1 view .LVU176
 130:MyNewProject.cpp ****     //*********************************************************************************************
 760              		.loc 16 130 15 is_stmt 0 view .LVU177
 761 0086 2948     		ldr	r0, .L38+28
 762 0088 FFF7FEFF 		bl	_ZN5daisy11TimerHandle4StopEv
 763              	.LVL45:
 136:MyNewProject.cpp ****     adcConfig.InitSingle(hw.GetPin(15));
 764              		.loc 16 136 5 is_stmt 1 view .LVU178
 137:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 765              		.loc 16 137 5 view .LVU179
 137:MyNewProject.cpp ****     hw.adc.Init(&adcConfig,1);
 766              		.loc 16 137 25 is_stmt 0 view .LVU180
 767 008c 0F20     		movs	r0, #15
 768 008e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 769              	.LVL46:
 770 0092 ADF81000 		strh	r0, [sp, #16]	@ movhi
 771 0096 0499     		ldr	r1, [sp, #16]
 772 0098 09A8     		add	r0, sp, #36
 773 009a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 774              	.LVL47:
 138:MyNewProject.cpp ****     
 775              		.loc 16 138 5 is_stmt 1 view .LVU181
 138:MyNewProject.cpp ****     
 776              		.loc 16 138 16 is_stmt 0 view .LVU182
 777 009e 0423     		movs	r3, #4
 778 00a0 2A46     		mov	r2, r5
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 34


 779 00a2 2348     		ldr	r0, .L38+32
 780 00a4 09A9     		add	r1, sp, #36
 781 00a6 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 782              	.LVL48:
 140:MyNewProject.cpp ****     // Init the analog control to the same pin, D15, which is ADC channel 0 on the datasheet
 783              		.loc 16 140 5 is_stmt 1 view .LVU183
 784              	.LBB185:
 785              	.LBI185:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 786              		.loc 6 21 5 view .LVU184
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 787              		.loc 6 21 5 is_stmt 0 view .LVU185
 788              	.LBE185:
 142:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 789              		.loc 16 142 5 is_stmt 1 view .LVU186
 142:MyNewProject.cpp ****     feedbackKnob.Init(fbk,0.00,MAX_FEEDBACK,Parameter::LINEAR);
 790              		.loc 16 142 13 is_stmt 0 view .LVU187
 791 00aa 2146     		mov	r1, r4
 792 00ac 2048     		ldr	r0, .L38+32
 793 00ae FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 794              	.LVL49:
 795 00b2 0146     		mov	r1, r0
 796 00b4 1648     		ldr	r0, .L38
 797 00b6 0191     		str	r1, [sp, #4]
 798 00b8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 799              	.LVL50:
 800 00bc DFED1D0A 		vldr.32	s1, .L38+36
 801 00c0 2346     		mov	r3, r4
 802 00c2 2246     		mov	r2, r4
 803 00c4 0199     		ldr	r1, [sp, #4]
 804 00c6 0EA8     		add	r0, sp, #56
 805 00c8 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 806              	.LVL51:
 143:MyNewProject.cpp ****     //*******************************************************************************
 807              		.loc 16 143 5 is_stmt 1 view .LVU188
 143:MyNewProject.cpp ****     //*******************************************************************************
 808              		.loc 16 143 22 is_stmt 0 view .LVU189
 809 00cc 1A4B     		ldr	r3, .L38+40
 810 00ce 0DF1380C 		add	ip, sp, #56
 811 00d2 0DF1580E 		add	lr, sp, #88
 812 00d6 D3ED000A 		vldr.32	s1, [r3]
 813 00da 9FED180A 		vldr.32	s0, .L38+44
 814 00de BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 815 00e2 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 816 00e6 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 817 00ea 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 818 00ee 2246     		mov	r2, r4
 819 00f0 16A9     		add	r1, sp, #88
 820 00f2 1348     		ldr	r0, .L38+48
 821 00f4 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 822              	.LVL52:
 823              	.LBB186:
 824              	.LBI186:
 825              		.loc 6 23 5 is_stmt 1 view .LVU190
 826              		.loc 6 23 5 is_stmt 0 view .LVU191
 827              	.LBE186:
 146:MyNewProject.cpp ****     hw.adc.Start();
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 35


 828              		.loc 16 146 5 is_stmt 1 view .LVU192
 146:MyNewProject.cpp ****     hw.adc.Start();
 829              		.loc 16 146 17 is_stmt 0 view .LVU193
 830 00f8 1248     		ldr	r0, .L38+52
 831 00fa 9FED130A 		vldr.32	s0, .L38+56
 832 00fe FFF7FEFF 		bl	_ZN7daisysp7Balance4InitEf
 833              	.LVL53:
 147:MyNewProject.cpp **** 
 834              		.loc 16 147 5 is_stmt 1 view .LVU194
 147:MyNewProject.cpp **** 
 835              		.loc 16 147 17 is_stmt 0 view .LVU195
 836 0102 0B48     		ldr	r0, .L38+32
 837 0104 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 838              	.LVL54:
 839              	.L36:
 149:MyNewProject.cpp ****     {
 840              		.loc 16 149 5 is_stmt 1 discriminator 1 view .LVU196
 152:MyNewProject.cpp **** 
 841              		.loc 16 152 9 discriminator 1 view .LVU197
 152:MyNewProject.cpp **** 
 842              		.loc 16 152 22 is_stmt 0 discriminator 1 view .LVU198
 843 0108 0620     		movs	r0, #6
 844 010a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 845              	.LVL55:
 149:MyNewProject.cpp ****     {
 846              		.loc 16 149 5 is_stmt 1 discriminator 1 view .LVU199
 847 010e FBE7     		b	.L36
 848              	.L39:
 849              		.align	2
 850              	.L38:
 851 0110 00000000 		.word	.LANCHOR6
 852 0114 00007A44 		.word	1148846080
 853 0118 00000000 		.word	.LANCHOR7
 854 011c 00000000 		.word	.LANCHOR3
 855 0120 00000000 		.word	.LANCHOR8
 856 0124 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 857 0128 00000000 		.word	.LANCHOR2
 858 012c 00000000 		.word	.LANCHOR0
 859 0130 18000000 		.word	.LANCHOR6+24
 860 0134 6F12033B 		.word	990057071
 861 0138 00000000 		.word	.LANCHOR9
 862 013c 00000000 		.word	0
 863 0140 00000000 		.word	.LANCHOR10
 864 0144 00000000 		.word	.LANCHOR11
 865 0148 00803B47 		.word	1195081728
 866              		.cfi_endproc
 867              	.LFE4790:
 869              		.section	.rodata._Z15ProcessControlsv.str1.4,"aMS",%progbits,1
 870              		.align	2
 871              	.LC0:
 872 0000 546F6E65 		.ascii	"Tone knob val : %f\000"
 872      206B6E6F 
 872      62207661 
 872      6C203A20 
 872      256600
 873              		.section	.text._Z15ProcessControlsv,"ax",%progbits
 874              		.align	1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 36


 875              		.p2align 2,,3
 876              		.global	_Z15ProcessControlsv
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv5-d16
 882              	_Z15ProcessControlsv:
 883              	.LFB4793:
 236:MyNewProject.cpp **** 
 237:MyNewProject.cpp **** void ProcessControls()
 238:MyNewProject.cpp **** {
 884              		.loc 16 238 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 8
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 239:MyNewProject.cpp ****     //delay.setFeedback(feedbackKnob.Process());
 240:MyNewProject.cpp ****     //delay.setFeedback(.5);
 241:MyNewProject.cpp ****     float tone_val = feedbackKnob.Process()* -1.f;
 888              		.loc 16 241 5 view .LVU201
 238:MyNewProject.cpp ****     //delay.setFeedback(feedbackKnob.Process());
 889              		.loc 16 238 1 is_stmt 0 view .LVU202
 890 0000 10B5     		push	{r4, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 4, -8
 893              		.cfi_offset 14, -4
 894              		.loc 16 241 42 view .LVU203
 895 0002 2948     		ldr	r0, .L49
 896 0004 294C     		ldr	r4, .L49+4
 238:MyNewProject.cpp ****     //delay.setFeedback(feedbackKnob.Process());
 897              		.loc 16 238 1 view .LVU204
 898 0006 2DED028B 		vpush.64	{d8}
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 80, -16
 901              		.cfi_offset 81, -12
 902 000a 82B0     		sub	sp, sp, #8
 903              		.cfi_def_cfa_offset 24
 904              		.loc 16 241 42 view .LVU205
 905 000c FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 906              	.LVL56:
 907 0010 B0EE408A 		vmov.f32	s16, s0
 908              	.LVL57:
 242:MyNewProject.cpp ****     tone.setFreq(5000.0f*(powf(10,2*tone_val))+100.f);
 909              		.loc 16 242 5 is_stmt 1 view .LVU206
 910              		.loc 16 242 31 is_stmt 0 view .LVU207
 911 0014 B2EE040A 		vmov.f32	s0, #1.0e+1
 912              	.LVL58:
 241:MyNewProject.cpp ****     tone.setFreq(5000.0f*(powf(10,2*tone_val))+100.f);
 913              		.loc 16 241 47 view .LVU208
 914 0018 B1EE488A 		vneg.f32	s16, s16
 915              	.LVL59:
 916              		.loc 16 242 31 view .LVU209
 917 001c 38EE088A 		vadd.f32	s16, s16, s16
 918              	.LVL60:
 919              		.loc 16 242 31 view .LVU210
 920 0020 F0EE480A 		vmov.f32	s1, s16
 921 0024 FFF7FEFF 		bl	powf
 922              	.LVL61:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 37


 923              		.loc 16 242 17 view .LVU211
 924 0028 9FED217A 		vldr.32	s14, .L49+8
 925 002c DFED217A 		vldr.32	s15, .L49+12
 926 0030 2148     		ldr	r0, .L49+16
 927 0032 E0EE077A 		vfma.f32	s15, s0, s14
 928 0036 B0EE670A 		vmov.f32	s0, s15
 929 003a FFF7FEFF 		bl	_ZN10ToneFilter7setFreqEf
 930              	.LVL62:
 243:MyNewProject.cpp **** 
 244:MyNewProject.cpp **** 
 245:MyNewProject.cpp ****     for(int i = 0; i < 4;i++)
 931              		.loc 16 245 5 is_stmt 1 view .LVU212
 932              	.LBB187:
 933              		.loc 16 245 13 is_stmt 0 view .LVU213
 934 003e 0023     		movs	r3, #0
 935              		.loc 16 245 22 view .LVU214
 936 0040 1846     		mov	r0, r3
 937              		.loc 16 245 13 view .LVU215
 938 0042 0193     		str	r3, [sp, #4]
 939              		.loc 16 245 22 is_stmt 1 view .LVU216
 940 0044 03E0     		b	.L42
 941              	.LVL63:
 942              	.L41:
 943              		.loc 16 245 5 discriminator 2 view .LVU217
 944 0046 0130     		adds	r0, r0, #1
 945              		.loc 16 245 22 is_stmt 0 discriminator 2 view .LVU218
 946 0048 0328     		cmp	r0, #3
 947              		.loc 16 245 5 discriminator 2 view .LVU219
 948 004a 0190     		str	r0, [sp, #4]
 949              		.loc 16 245 22 is_stmt 1 discriminator 2 view .LVU220
 950 004c 28DC     		bgt	.L48
 951              	.L42:
 246:MyNewProject.cpp ****     {
 247:MyNewProject.cpp ****         headSwitches[i].Debounce();
 952              		.loc 16 247 9 view .LVU221
 953              		.loc 16 247 33 is_stmt 0 view .LVU222
 954 004e 04EB0010 		add	r0, r4, r0, lsl #4
 955 0052 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 956              	.LVL64:
 248:MyNewProject.cpp ****         if(headSwitches[i].RisingEdge())
 957              		.loc 16 248 9 is_stmt 1 view .LVU223
 958              		.loc 16 248 26 is_stmt 0 view .LVU224
 959 0056 0198     		ldr	r0, [sp, #4]
 960              	.LVL65:
 961              	.LBB188:
 962              	.LBI188:
 963              		.loc 4 70 17 is_stmt 1 view .LVU225
 964              	.LBB189:
 965              		.loc 4 70 38 view .LVU226
 966              		.loc 4 70 45 is_stmt 0 view .LVU227
 967 0058 04EB0013 		add	r3, r4, r0, lsl #4
 968              		.loc 4 70 54 view .LVU228
 969 005c 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 970 005e 002A     		cmp	r2, #0
 971 0060 F1D0     		beq	.L41
 972              	.LBE189:
 973              	.LBE188:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 38


 974              		.loc 16 248 9 view .LVU229
 975 0062 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 976 0064 7F2B     		cmp	r3, #127
 977 0066 EED1     		bne	.L41
 249:MyNewProject.cpp ****         {
 250:MyNewProject.cpp ****             
 251:MyNewProject.cpp ****             // std::string val = std::to_string(tone_val);
 252:MyNewProject.cpp ****             // char * tab2 = new char [val.length()+1];
 253:MyNewProject.cpp ****             // strcpy (tab2, val.c_str());
 254:MyNewProject.cpp ****             hw.PrintLine("Tone knob val : %f",5000.0f*(powf(10,2*tone_val))+100.f);
 978              		.loc 16 254 13 is_stmt 1 view .LVU230
 979              		.loc 16 254 60 is_stmt 0 view .LVU231
 980 0068 F0EE480A 		vmov.f32	s1, s16
 981 006c B2EE040A 		vmov.f32	s0, #1.0e+1
 982 0070 FFF7FEFF 		bl	powf
 983              	.LVL66:
 984              		.loc 16 254 25 view .LVU232
 985 0074 9FED0E7A 		vldr.32	s14, .L49+8
 986 0078 DFED0E7A 		vldr.32	s15, .L49+12
 987              	.LBB190:
 988              	.LBB191:
 121:../../libDaisy//src/daisy_seed.h ****     }
 989              		.loc 7 121 23 view .LVU233
 990 007c 0F48     		ldr	r0, .L49+20
 991              	.LBE191:
 992              	.LBE190:
 993              		.loc 16 254 25 view .LVU234
 994 007e E0EE077A 		vfma.f32	s15, s0, s14
 995              	.LVL67:
 996              	.LBB193:
 997              	.LBI190:
 119:../../libDaisy//src/daisy_seed.h ****     {
 998              		.loc 7 119 17 is_stmt 1 view .LVU235
 999              	.LBB192:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1000              		.loc 7 121 23 is_stmt 0 view .LVU236
 1001 0082 B7EEE77A 		vcvt.f64.f32	d7, s15
 1002 0086 53EC172B 		vmov	r2, r3, d7
 1003 008a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1004              	.LVL68:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1005              		.loc 7 121 23 view .LVU237
 1006              	.LBE192:
 1007              	.LBE193:
 255:MyNewProject.cpp ****             delay.toggleHead(i);
 1008              		.loc 16 255 13 is_stmt 1 view .LVU238
 1009              		.loc 16 255 29 is_stmt 0 view .LVU239
 1010 008e 0C48     		ldr	r0, .L49+24
 1011 0090 01A9     		add	r1, sp, #4
 1012 0092 FFF7FEFF 		bl	_ZN6Delayy10toggleHeadERKi
 1013              	.LVL69:
 245:MyNewProject.cpp ****     {
 1014              		.loc 16 245 5 view .LVU240
 1015 0096 0198     		ldr	r0, [sp, #4]
 245:MyNewProject.cpp ****     {
 1016              		.loc 16 245 5 is_stmt 1 view .LVU241
 1017 0098 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 39


 245:MyNewProject.cpp ****     {
 1018              		.loc 16 245 22 is_stmt 0 view .LVU242
 1019 009a 0328     		cmp	r0, #3
 245:MyNewProject.cpp ****     {
 1020              		.loc 16 245 5 view .LVU243
 1021 009c 0190     		str	r0, [sp, #4]
 245:MyNewProject.cpp ****     {
 1022              		.loc 16 245 22 is_stmt 1 view .LVU244
 1023 009e D6DD     		ble	.L42
 1024              	.L48:
 1025              	.LBE187:
 256:MyNewProject.cpp ****         }
 257:MyNewProject.cpp ****     }
 258:MyNewProject.cpp **** }
 1026              		.loc 16 258 1 is_stmt 0 view .LVU245
 1027 00a0 02B0     		add	sp, sp, #8
 1028              		.cfi_def_cfa_offset 16
 1029              		@ sp needed
 1030 00a2 BDEC028B 		vldm	sp!, {d8}
 1031              		.cfi_restore 80
 1032              		.cfi_restore 81
 1033              		.cfi_def_cfa_offset 8
 1034 00a6 10BD     		pop	{r4, pc}
 1035              	.L50:
 1036              		.align	2
 1037              	.L49:
 1038 00a8 00000000 		.word	.LANCHOR10
 1039 00ac 00000000 		.word	.LANCHOR5
 1040 00b0 00409C45 		.word	1167867904
 1041 00b4 0000C842 		.word	1120403456
 1042 00b8 00000000 		.word	.LANCHOR12
 1043 00bc 00000000 		.word	.LC0
 1044 00c0 00000000 		.word	delay
 1045              		.cfi_endproc
 1046              	.LFE4793:
 1048              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 1049              		.align	1
 1050              		.p2align 2,,3
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv5-d16
 1056              	_ZL13AudioCallbackPKPKfPPfj:
 1057              	.LVL70:
 1058              	.LFB4789:
  43:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1059              		.loc 16 43 1 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 8
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
  44:MyNewProject.cpp ****     {
 1063              		.loc 16 44 5 view .LVU247
 1064              	.LBB194:
  44:MyNewProject.cpp ****     {
 1065              		.loc 16 44 25 view .LVU248
 1066 0000 002A     		cmp	r2, #0
 1067 0002 70D0     		beq	.L65
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 40


 1068              	.LBE194:
  43:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1069              		.loc 16 43 1 is_stmt 0 view .LVU249
 1070 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1071              		.cfi_def_cfa_offset 36
 1072              		.cfi_offset 4, -36
 1073              		.cfi_offset 5, -32
 1074              		.cfi_offset 6, -28
 1075              		.cfi_offset 7, -24
 1076              		.cfi_offset 8, -20
 1077              		.cfi_offset 9, -16
 1078              		.cfi_offset 10, -12
 1079              		.cfi_offset 11, -8
 1080              		.cfi_offset 14, -4
 1081 0008 0546     		mov	r5, r0
 1082 000a 0E46     		mov	r6, r1
 1083 000c 9046     		mov	r8, r2
 1084              	.LBB207:
  44:MyNewProject.cpp ****     {
 1085              		.loc 16 44 16 view .LVU250
 1086 000e 0024     		movs	r4, #0
 1087 0010 DFF8EC90 		ldr	r9, .L69+24
 1088 0014 344F     		ldr	r7, .L69
 1089 0016 DFF8ECA0 		ldr	r10, .L69+28
 1090              	.LBE207:
  43:MyNewProject.cpp ****     for(size_t i = 0; i < size; i++)
 1091              		.loc 16 43 1 view .LVU251
 1092 001a 2DED028B 		vpush.64	{d8}
 1093              		.cfi_def_cfa_offset 44
 1094              		.cfi_offset 80, -44
 1095              		.cfi_offset 81, -40
 1096 001e 83B0     		sub	sp, sp, #12
 1097              		.cfi_def_cfa_offset 56
 1098 0020 39E0     		b	.L59
 1099              	.LVL71:
 1100              	.L58:
 1101              	.LBB208:
 1102              	.LBB195:
  65:MyNewProject.cpp ****         }
 1103              		.loc 16 65 13 is_stmt 1 view .LVU252
  63:MyNewProject.cpp ****         {
 1104              		.loc 16 63 33 is_stmt 0 view .LVU253
 1105 0022 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  65:MyNewProject.cpp ****         }
 1106              		.loc 16 65 32 view .LVU254
 1107 0024 0022     		movs	r2, #0
  63:MyNewProject.cpp ****         {
 1108              		.loc 16 63 33 view .LVU255
 1109 0026 03B1     		cbz	r3, .L57
  65:MyNewProject.cpp ****         }
 1110              		.loc 16 65 32 view .LVU256
 1111 0028 3A70     		strb	r2, [r7]
 1112              	.L57:
  68:MyNewProject.cpp **** 	    float all_delay_signals = 0; // Summation of all delay signals
 1113              		.loc 16 68 9 is_stmt 1 discriminator 2 view .LVU257
 1114              	.LVL72:
  69:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 41


 1115              		.loc 16 69 6 discriminator 2 view .LVU258
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1116              		.loc 16 75 42 is_stmt 0 discriminator 2 view .LVU259
 1117 002a 2B68     		ldr	r3, [r5]
  69:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1118              		.loc 16 69 12 discriminator 2 view .LVU260
 1119 002c 0022     		movs	r2, #0
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1120              		.loc 16 75 42 discriminator 2 view .LVU261
 1121 002e 2F48     		ldr	r0, .L69+4
 1122 0030 4FEA840B 		lsl	fp, r4, #2
 1123 0034 03EB8403 		add	r3, r3, r4, lsl #2
  69:MyNewProject.cpp ****         float nonConstInput;         // Will store the a copy of input float value at in[channel][i
 1124              		.loc 16 69 12 discriminator 2 view .LVU262
 1125 0038 0092     		str	r2, [sp]	@ float
  70:MyNewProject.cpp ****                                      // Needed because cfade.SetPos requieres non-const  
 1126              		.loc 16 70 9 is_stmt 1 discriminator 2 view .LVU263
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1127              		.loc 16 75 9 discriminator 2 view .LVU264
 1128              	.LBE195:
  44:MyNewProject.cpp ****     {
 1129              		.loc 16 44 5 is_stmt 0 discriminator 2 view .LVU265
 1130 003a 0134     		adds	r4, r4, #1
 1131              	.LVL73:
 1132              	.LBB204:
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1133              		.loc 16 75 42 discriminator 2 view .LVU266
 1134 003c 93ED000A 		vldr.32	s0, [r3]
 1135 0040 FFF7FEFF 		bl	_ZN6Delayy7processEf
 1136              	.LVL74:
  77:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*2.5f);
 1137              		.loc 16 77 41 discriminator 2 view .LVU267
 1138 0044 2A48     		ldr	r0, .L69+8
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1139              		.loc 16 75 42 discriminator 2 view .LVU268
 1140 0046 B0EE408A 		vmov.f32	s16, s0
  75:MyNewProject.cpp ****         float preFilter = all_delay_signals;
 1141              		.loc 16 75 27 discriminator 2 view .LVU269
 1142 004a 8DED000A 		vstr.32	s0, [sp]
  76:MyNewProject.cpp ****         all_delay_signals = tone.process(all_delay_signals);
 1143              		.loc 16 76 9 is_stmt 1 discriminator 2 view .LVU270
 1144              	.LVL75:
  77:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*2.5f);
 1145              		.loc 16 77 9 discriminator 2 view .LVU271
  77:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*2.5f);
 1146              		.loc 16 77 41 is_stmt 0 discriminator 2 view .LVU272
 1147 004e FFF7FEFF 		bl	_ZN10ToneFilter7processEf
 1148              	.LVL76:
  78:MyNewProject.cpp **** 
 1149              		.loc 16 78 44 discriminator 2 view .LVU273
 1150 0052 F0EE040A 		vmov.f32	s1, #2.5e+0
 1151 0056 2748     		ldr	r0, .L69+12
  77:MyNewProject.cpp ****         all_delay_signals = balance.Process(all_delay_signals,preFilter*2.5f);
 1152              		.loc 16 77 27 discriminator 2 view .LVU274
 1153 0058 8DED000A 		vstr.32	s0, [sp]
  78:MyNewProject.cpp **** 
 1154              		.loc 16 78 9 is_stmt 1 discriminator 2 view .LVU275
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 42


  78:MyNewProject.cpp **** 
 1155              		.loc 16 78 44 is_stmt 0 discriminator 2 view .LVU276
 1156 005c 68EE200A 		vmul.f32	s1, s16, s1
 1157 0060 FFF7FEFF 		bl	_ZN7daisysp7Balance7ProcessEff
 1158              	.LVL77:
  83:MyNewProject.cpp **** 
 1159              		.loc 16 83 32 discriminator 2 view .LVU277
 1160 0064 2B68     		ldr	r3, [r5]
  78:MyNewProject.cpp **** 
 1161              		.loc 16 78 27 discriminator 2 view .LVU278
 1162 0066 8DED000A 		vstr.32	s0, [sp]
  83:MyNewProject.cpp **** 
 1163              		.loc 16 83 9 is_stmt 1 discriminator 2 view .LVU279
  87:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1164              		.loc 16 87 28 is_stmt 0 discriminator 2 view .LVU280
 1165 006a 6A46     		mov	r2, sp
  83:MyNewProject.cpp **** 
 1166              		.loc 16 83 32 discriminator 2 view .LVU281
 1167 006c 5B44     		add	r3, r3, fp
 1168              	.LBB196:
 1169              	.LBB197:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1170              		.loc 2 60 42 discriminator 2 view .LVU282
 1171 006e 2249     		ldr	r1, .L69+16
 1172              	.LBE197:
 1173              	.LBE196:
  87:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1174              		.loc 16 87 28 discriminator 2 view .LVU283
 1175 0070 2148     		ldr	r0, .L69+16
  83:MyNewProject.cpp **** 
 1176              		.loc 16 83 32 discriminator 2 view .LVU284
 1177 0072 1B68     		ldr	r3, [r3]	@ float
  83:MyNewProject.cpp **** 
 1178              		.loc 16 83 23 discriminator 2 view .LVU285
 1179 0074 0193     		str	r3, [sp, #4]	@ float
  86:MyNewProject.cpp **** 		final_mix = cfade.Process(nonConstInput, all_delay_signals);
 1180              		.loc 16 86 3 is_stmt 1 discriminator 2 view .LVU286
 1181              	.LVL78:
 1182              	.LBB199:
 1183              	.LBI196:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1184              		.loc 2 60 17 discriminator 2 view .LVU287
 1185              	.LBB198:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1186              		.loc 2 60 37 discriminator 2 view .LVU288
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1187              		.loc 2 60 42 is_stmt 0 discriminator 2 view .LVU289
 1188 0076 DAF80030 		ldr	r3, [r10]	@ float
 1189 007a 0B60     		str	r3, [r1]	@ float
 1190              	.LVL79:
  60:../../DaisySP//Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 1191              		.loc 2 60 42 discriminator 2 view .LVU290
 1192              	.LBE198:
 1193              	.LBE199:
  87:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
 1194              		.loc 16 87 3 is_stmt 1 discriminator 2 view .LVU291
  87:MyNewProject.cpp **** 		out[0][i]  = out [1][i] = final_mix;//filter; // this sends 'final_mix' to the left and right out
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 43


 1195              		.loc 16 87 28 is_stmt 0 discriminator 2 view .LVU292
 1196 007c 01A9     		add	r1, sp, #4
 1197 007e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 1198              	.LVL80:
  88:MyNewProject.cpp ****     }
 1199              		.loc 16 88 27 discriminator 2 view .LVU293
 1200 0082 7368     		ldr	r3, [r6, #4]
 1201              	.LVL81:
  88:MyNewProject.cpp ****     }
 1202              		.loc 16 88 3 is_stmt 1 discriminator 2 view .LVU294
 1203              	.LBE204:
  44:MyNewProject.cpp ****     {
 1204              		.loc 16 44 25 is_stmt 0 discriminator 2 view .LVU295
 1205 0084 A045     		cmp	r8, r4
 1206              	.LBB205:
  88:MyNewProject.cpp ****     }
 1207              		.loc 16 88 27 discriminator 2 view .LVU296
 1208 0086 5B44     		add	r3, r3, fp
 1209 0088 83ED000A 		vstr.32	s0, [r3]
  88:MyNewProject.cpp ****     }
 1210              		.loc 16 88 14 discriminator 2 view .LVU297
 1211 008c 3368     		ldr	r3, [r6]
 1212 008e 5B44     		add	r3, r3, fp
 1213 0090 83ED000A 		vstr.32	s0, [r3]
 1214              	.LBE205:
  44:MyNewProject.cpp ****     {
 1215              		.loc 16 44 5 is_stmt 1 discriminator 2 view .LVU298
 1216              	.LVL82:
  44:MyNewProject.cpp ****     {
 1217              		.loc 16 44 25 discriminator 2 view .LVU299
 1218 0094 22D0     		beq	.L68
 1219              	.LVL83:
 1220              	.L59:
 1221              	.LBB206:
  47:MyNewProject.cpp ****         // Check for tempo change
 1222              		.loc 16 47 9 view .LVU300
  47:MyNewProject.cpp ****         // Check for tempo change
 1223              		.loc 16 47 24 is_stmt 0 view .LVU301
 1224 0096 FFF7FEFF 		bl	_Z15ProcessControlsv
 1225              	.LVL84:
  49:MyNewProject.cpp ****         // Set delays with new bpm
 1226              		.loc 16 49 9 is_stmt 1 view .LVU302
  49:MyNewProject.cpp ****         // Set delays with new bpm
 1227              		.loc 16 49 19 is_stmt 0 view .LVU303
 1228 009a FFF7FEFF 		bl	_Z10CheckTempov
 1229              	.LVL85:
  51:MyNewProject.cpp **** 
 1230              		.loc 16 51 9 is_stmt 1 view .LVU304
  51:MyNewProject.cpp **** 
 1231              		.loc 16 51 21 is_stmt 0 view .LVU305
 1232 009e 174B     		ldr	r3, .L69+20
 1233 00a0 01A9     		add	r1, sp, #4
 1234 00a2 1248     		ldr	r0, .L69+4
 1235 00a4 D3ED007A 		vldr.32	s15, [r3]
 1236 00a8 FDEEE77A 		vcvt.s32.f32	s15, s15
 1237 00ac CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1238 00b0 FFF7FEFF 		bl	_ZN6Delayy6setBPMERKi
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 44


 1239              	.LVL86:
  54:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 1240              		.loc 16 54 9 is_stmt 1 view .LVU306
  54:MyNewProject.cpp ****         // Check if the button is pressed and was not previously pressed
 1241              		.loc 16 54 27 is_stmt 0 view .LVU307
 1242 00b4 1248     		ldr	r0, .L69+24
 1243 00b6 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 1244              	.LVL87:
  56:MyNewProject.cpp ****         {
 1245              		.loc 16 56 9 is_stmt 1 view .LVU308
 1246              	.LBB200:
 1247              	.LBI200:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 1248              		.loc 4 79 17 view .LVU309
 1249              	.LBB201:
 1250              		.loc 4 79 35 view .LVU310
 1251              		.loc 4 79 35 is_stmt 0 view .LVU311
 1252              	.LBE201:
 1253              	.LBE200:
  56:MyNewProject.cpp ****         {
 1254              		.loc 16 56 32 view .LVU312
 1255 00ba 99F80A30 		ldrb	r3, [r9, #10]	@ zero_extendqisi2
 1256 00be FF2B     		cmp	r3, #255
 1257 00c0 AFD1     		bne	.L58
  56:MyNewProject.cpp ****         {
 1258              		.loc 16 56 32 discriminator 1 view .LVU313
 1259 00c2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1260 00c4 002B     		cmp	r3, #0
 1261 00c6 B0D1     		bne	.L57
  58:MyNewProject.cpp ****             delay.stopAll();
 1262              		.loc 16 58 13 is_stmt 1 view .LVU314
  58:MyNewProject.cpp ****             delay.stopAll();
 1263              		.loc 16 58 32 is_stmt 0 view .LVU315
 1264 00c8 0123     		movs	r3, #1
  59:MyNewProject.cpp ****         }
 1265              		.loc 16 59 26 view .LVU316
 1266 00ca 0848     		ldr	r0, .L69+4
  58:MyNewProject.cpp ****             delay.stopAll();
 1267              		.loc 16 58 32 view .LVU317
 1268 00cc 3B70     		strb	r3, [r7]
  59:MyNewProject.cpp ****         }
 1269              		.loc 16 59 13 is_stmt 1 view .LVU318
  59:MyNewProject.cpp ****         }
 1270              		.loc 16 59 26 is_stmt 0 view .LVU319
 1271 00ce FFF7FEFF 		bl	_ZN6Delayy7stopAllEv
 1272              	.LVL88:
  63:MyNewProject.cpp ****         {
 1273              		.loc 16 63 9 is_stmt 1 view .LVU320
 1274              	.LBB202:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 45


 1275              	.LBI202:
 1276              		.loc 4 79 17 view .LVU321
 1277              	.LBB203:
 1278              		.loc 4 79 35 view .LVU322
 1279              		.loc 4 79 35 is_stmt 0 view .LVU323
 1280              	.LBE203:
 1281              	.LBE202:
  63:MyNewProject.cpp ****         {
 1282              		.loc 16 63 33 view .LVU324
 1283 00d2 99F80A30 		ldrb	r3, [r9, #10]	@ zero_extendqisi2
 1284 00d6 FF2B     		cmp	r3, #255
 1285 00d8 A7D0     		beq	.L57
 1286 00da A2E7     		b	.L58
 1287              	.LVL89:
 1288              	.L68:
  63:MyNewProject.cpp ****         {
 1289              		.loc 16 63 33 view .LVU325
 1290              	.LBE206:
 1291              	.LBE208:
  90:MyNewProject.cpp **** 
 1292              		.loc 16 90 1 view .LVU326
 1293 00dc 03B0     		add	sp, sp, #12
 1294              		.cfi_def_cfa_offset 44
 1295              		@ sp needed
 1296 00de BDEC028B 		vldm	sp!, {d8}
 1297              		.cfi_restore 80
 1298              		.cfi_restore 81
 1299              		.cfi_def_cfa_offset 36
 1300              	.LVL90:
  90:MyNewProject.cpp **** 
 1301              		.loc 16 90 1 view .LVU327
 1302 00e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1303              	.LVL91:
 1304              	.L65:
 1305              		.cfi_def_cfa_offset 0
 1306              		.cfi_restore 4
 1307              		.cfi_restore 5
 1308              		.cfi_restore 6
 1309              		.cfi_restore 7
 1310              		.cfi_restore 8
 1311              		.cfi_restore 9
 1312              		.cfi_restore 10
 1313              		.cfi_restore 11
 1314              		.cfi_restore 14
  90:MyNewProject.cpp **** 
 1315              		.loc 16 90 1 view .LVU328
 1316 00e6 7047     		bx	lr
 1317              	.L70:
 1318              		.align	2
 1319              	.L69:
 1320 00e8 00000000 		.word	.LANCHOR13
 1321 00ec 00000000 		.word	delay
 1322 00f0 00000000 		.word	.LANCHOR12
 1323 00f4 00000000 		.word	.LANCHOR11
 1324 00f8 00000000 		.word	.LANCHOR8
 1325 00fc 00000000 		.word	.LANCHOR4
 1326 0100 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 46


 1327 0104 00000000 		.word	.LANCHOR14
 1328              		.cfi_endproc
 1329              	.LFE4789:
 1331              		.section	.text.startup._GLOBAL__sub_I_delay,"ax",%progbits
 1332              		.align	1
 1333              		.p2align 2,,3
 1334              		.syntax unified
 1335              		.thumb
 1336              		.thumb_func
 1337              		.fpu fpv5-d16
 1339              	_GLOBAL__sub_I_delay:
 1340              	.LFB5367:
 1341              		.loc 16 258 1 is_stmt 1 view -0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              	.LBB243:
 1346              	.LBI243:
 1347              		.loc 16 258 1 view .LVU330
 1348              	.LVL92:
 1349              		.loc 16 258 1 is_stmt 0 view .LVU331
 1350              	.LBE243:
 1351 0000 70B5     		push	{r4, r5, r6, lr}
 1352              		.cfi_def_cfa_offset 16
 1353              		.cfi_offset 4, -16
 1354              		.cfi_offset 5, -12
 1355              		.cfi_offset 6, -8
 1356              		.cfi_offset 14, -4
 1357              	.LBB278:
 1358              	.LBB244:
  10:MyNewProject.cpp **** ToneFilter tone(48000.f);
 1359              		.loc 16 10 8 view .LVU332
 1360 0002 224D     		ldr	r5, .L73
 1361 0004 224C     		ldr	r4, .L73+4
  11:MyNewProject.cpp **** static Balance balance;
 1362              		.loc 16 11 24 view .LVU333
 1363 0006 234E     		ldr	r6, .L73+8
  10:MyNewProject.cpp **** ToneFilter tone(48000.f);
 1364              		.loc 16 10 8 view .LVU334
 1365 0008 2846     		mov	r0, r5
 1366 000a FFF7FEFF 		bl	_ZN6DelayyC1Ev
 1367              	.LVL93:
 1368 000e 2246     		mov	r2, r4
 1369 0010 2149     		ldr	r1, .L73+12
 1370 0012 2846     		mov	r0, r5
 1371 0014 FFF7FEFF 		bl	__aeabi_atexit
 1372              	.LVL94:
  11:MyNewProject.cpp **** static Balance balance;
 1373              		.loc 16 11 24 view .LVU335
 1374 0018 9FED200A 		vldr.32	s0, .L73+16
 1375 001c 3046     		mov	r0, r6
  14:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1376              		.loc 16 14 8 view .LVU336
 1377 001e 204D     		ldr	r5, .L73+20
  11:MyNewProject.cpp **** static Balance balance;
 1378              		.loc 16 11 24 view .LVU337
 1379 0020 FFF7FEFF 		bl	_ZN10ToneFilterC1Ef
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 47


 1380              	.LVL95:
  11:MyNewProject.cpp **** static Balance balance;
 1381              		.loc 16 11 12 view .LVU338
 1382 0024 2246     		mov	r2, r4
 1383 0026 1F49     		ldr	r1, .L73+24
 1384 0028 3046     		mov	r0, r6
 1385 002a FFF7FEFF 		bl	__aeabi_atexit
 1386              	.LVL96:
 1387              	.LBB245:
 1388              	.LBI245:
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1389              		.loc 1 22 5 is_stmt 1 view .LVU339
  22:../../DaisySP//Source/Dynamics/balance.h ****     ~Balance() {}
 1390              		.loc 1 22 5 is_stmt 0 view .LVU340
 1391              	.LBE245:
  12:MyNewProject.cpp **** 
 1392              		.loc 16 12 16 view .LVU341
 1393 002e 2246     		mov	r2, r4
 1394 0030 1D49     		ldr	r1, .L73+28
 1395 0032 1E48     		ldr	r0, .L73+32
 1396 0034 FFF7FEFF 		bl	__aeabi_atexit
 1397              	.LVL97:
 1398              	.LBB246:
 1399              	.LBI246:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1400              		.loc 4 41 5 is_stmt 1 view .LVU342
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1401              		.loc 4 41 5 is_stmt 0 view .LVU343
 1402              	.LBE246:
  14:MyNewProject.cpp **** Switch TEMPO_BUTTON;              // The tap tempo button
 1403              		.loc 16 14 8 view .LVU344
 1404 0038 2246     		mov	r2, r4
 1405 003a 2946     		mov	r1, r5
 1406 003c 1C48     		ldr	r0, .L73+36
 1407 003e FFF7FEFF 		bl	__aeabi_atexit
 1408              	.LVL98:
 1409              	.LBB247:
 1410              	.LBI247:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1411              		.loc 4 41 5 is_stmt 1 view .LVU345
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1412              		.loc 4 41 5 is_stmt 0 view .LVU346
 1413              	.LBE247:
  15:MyNewProject.cpp **** Switch headSwitches[4];           // One switch for each head
 1414              		.loc 16 15 8 view .LVU347
 1415 0042 2246     		mov	r2, r4
 1416 0044 2946     		mov	r1, r5
 1417 0046 1B48     		ldr	r0, .L73+40
 1418 0048 FFF7FEFF 		bl	__aeabi_atexit
 1419              	.LVL99:
  16:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1420              		.loc 16 16 22 is_stmt 1 view .LVU348
  16:MyNewProject.cpp **** static DaisySeed hw;              // The daisy seed harfware
 1421              		.loc 16 16 8 is_stmt 0 view .LVU349
 1422 004c 2246     		mov	r2, r4
 1423 004e 1A49     		ldr	r1, .L73+44
 1424 0050 0020     		movs	r0, #0
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 48


 1425 0052 FFF7FEFF 		bl	__aeabi_atexit
 1426              	.LVL100:
 1427              	.LBB248:
 1428              	.LBI248:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1429              		.loc 7 21 5 is_stmt 1 view .LVU350
 1430              	.LBB249:
 1431              	.LBB250:
 1432              	.LBI250:
 1433              		.file 17 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 49


  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 50


 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 51


 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1434              		.loc 17 166 5 view .LVU351
 1435              	.LBB251:
 1436              	.LBB252:
 1437              		.loc 17 166 34 is_stmt 0 view .LVU352
 1438 0056 0025     		movs	r5, #0
 1439 0058 1848     		ldr	r0, .L73+48
 1440              	.LBE252:
 1441              	.LBE251:
 1442              	.LBE250:
 1443              	.LBE249:
 1444              	.LBE248:
  17:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1445              		.loc 16 17 18 view .LVU353
 1446 005a 2246     		mov	r2, r4
 1447 005c 1849     		ldr	r1, .L73+52
 1448              	.LBB266:
 1449              	.LBB265:
 1450              	.LBB255:
 1451              	.LBB254:
 1452              	.LBB253:
 1453              		.loc 17 166 34 view .LVU354
 1454 005e 0560     		str	r5, [r0]
 1455              	.LVL101:
 1456              		.loc 17 166 34 view .LVU355
 1457              	.LBE253:
 1458              	.LBE254:
 1459              	.LBE255:
 1460              	.LBB256:
 1461              	.LBI256:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1462              		.loc 11 95 5 is_stmt 1 view .LVU356
 1463              	.LBB257:
 1464              	.LBB258:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1465              		.loc 11 95 35 is_stmt 0 view .LVU357
 1466 0060 4561     		str	r5, [r0, #20]
 1467              	.LVL102:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1468              		.loc 11 95 35 view .LVU358
 1469              	.LBE258:
 1470              	.LBE257:
 1471              	.LBE256:
 1472              	.LBB259:
 1473              	.LBI259:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1474              		.loc 10 92 5 is_stmt 1 view .LVU359
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1475              		.loc 10 92 5 is_stmt 0 view .LVU360
 1476              	.LBE259:
 1477              	.LBB260:
 1478              	.LBI260:
 1479              		.file 18 "../../libDaisy//src/per/dac.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 52


   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 53


  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1480              		.loc 18 84 5 is_stmt 1 view .LVU361
 1481              	.LBB261:
 1482              	.LBB262:
 1483              		.loc 18 84 33 is_stmt 0 view .LVU362
 1484 0062 0562     		str	r5, [r0, #32]
 1485              	.LVL103:
 1486              		.loc 18 84 33 view .LVU363
 1487              	.LBE262:
 1488              	.LBE261:
 1489              	.LBE260:
 1490              	.LBB263:
 1491              	.LBI263:
  40:../../libDaisy//src/hid/usb.h **** 
 1492              		.loc 9 40 5 is_stmt 1 view .LVU364
  40:../../libDaisy//src/hid/usb.h **** 
 1493              		.loc 9 40 5 is_stmt 0 view .LVU365
 1494              	.LBE263:
 1495              	.LBB264:
 1496              	.LBI264:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1497              		.loc 8 77 5 is_stmt 1 view .LVU366
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1498              		.loc 8 77 5 is_stmt 0 view .LVU367
 1499              	.LBE264:
 1500              	.LBE265:
 1501              	.LBE266:
  17:MyNewProject.cpp **** static CrossFade cfade;           // Used to blend the wet/dry and maintain a constant mixed volume
 1502              		.loc 16 17 18 view .LVU368
 1503 0064 FFF7FEFF 		bl	__aeabi_atexit
 1504              	.LVL104:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 54


 1505              	.LBB267:
 1506              	.LBI267:
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1507              		.loc 2 36 5 is_stmt 1 view .LVU369
  36:../../DaisySP//Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 1508              		.loc 2 36 5 is_stmt 0 view .LVU370
 1509              	.LBE267:
  18:MyNewProject.cpp **** 
 1510              		.loc 16 18 18 view .LVU371
 1511 0068 2246     		mov	r2, r4
 1512 006a 1649     		ldr	r1, .L73+56
 1513 006c 1648     		ldr	r0, .L73+60
 1514 006e FFF7FEFF 		bl	__aeabi_atexit
 1515              	.LVL105:
 1516              	.LBB268:
 1517              	.LBI268:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1518              		.loc 3 97 5 is_stmt 1 view .LVU372
 1519              	.LBB269:
 1520              	.LBB270:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1521              		.loc 3 97 35 is_stmt 0 view .LVU373
 1522 0072 1648     		ldr	r0, .L73+64
 1523              	.LBE270:
 1524              	.LBE269:
 1525              	.LBE268:
  28:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1526              		.loc 16 28 13 view .LVU374
 1527 0074 2246     		mov	r2, r4
 1528 0076 1649     		ldr	r1, .L73+68
 1529              	.LBB273:
 1530              	.LBB272:
 1531              	.LBB271:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1532              		.loc 3 97 35 view .LVU375
 1533 0078 0560     		str	r5, [r0]
 1534              	.LVL106:
  97:../../libDaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 1535              		.loc 3 97 35 view .LVU376
 1536              	.LBE271:
 1537              	.LBE272:
 1538              	.LBE273:
  28:MyNewProject.cpp **** TimerHandle::Config* configPtr;   // Pointer to config for timer, need because for some reason it w
 1539              		.loc 16 28 13 view .LVU377
 1540 007a FFF7FEFF 		bl	__aeabi_atexit
 1541              	.LVL107:
 1542              	.LBB274:
 1543              	.LBI274:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 1544              		.loc 5 25 5 is_stmt 1 view .LVU378
 1545              	.LBB275:
 1546              	.LBB276:
 1547              	.LBI276:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1548              		.loc 6 21 5 view .LVU379
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1549              		.loc 6 21 5 is_stmt 0 view .LVU380
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 55


 1550              	.LBE276:
 1551              	.LBE275:
 1552              	.LBE274:
  30:MyNewProject.cpp **** 
 1553              		.loc 16 30 11 view .LVU381
 1554 007e 2246     		mov	r2, r4
 1555 0080 1449     		ldr	r1, .L73+72
 1556 0082 1548     		ldr	r0, .L73+76
 1557              	.LBE244:
 1558              	.LBE278:
 1559              		.loc 16 258 1 view .LVU382
 1560 0084 BDE87040 		pop	{r4, r5, r6, lr}
 1561              		.cfi_restore 14
 1562              		.cfi_restore 6
 1563              		.cfi_restore 5
 1564              		.cfi_restore 4
 1565              		.cfi_def_cfa_offset 0
 1566              	.LBB279:
 1567              	.LBB277:
  30:MyNewProject.cpp **** 
 1568              		.loc 16 30 11 view .LVU383
 1569 0088 FFF7FEBF 		b	__aeabi_atexit
 1570              	.LVL108:
 1571              	.L74:
 1572              		.align	2
 1573              	.L73:
 1574 008c 00000000 		.word	delay
 1575 0090 00000000 		.word	__dso_handle
 1576 0094 00000000 		.word	.LANCHOR12
 1577 0098 00000000 		.word	_ZN6DelayyD1Ev
 1578 009c 00803B47 		.word	1195081728
 1579 00a0 00000000 		.word	_ZN5daisy6SwitchD1Ev
 1580 00a4 00000000 		.word	_ZN10ToneFilterD1Ev
 1581 00a8 00000000 		.word	_ZN7daisysp7BalanceD1Ev
 1582 00ac 00000000 		.word	.LANCHOR11
 1583 00b0 00000000 		.word	.LANCHOR7
 1584 00b4 00000000 		.word	.LANCHOR3
 1585 00b8 00000000 		.word	__tcf_0
 1586 00bc 00000000 		.word	.LANCHOR6
 1587 00c0 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1588 00c4 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 1589 00c8 00000000 		.word	.LANCHOR8
 1590 00cc 00000000 		.word	.LANCHOR0
 1591 00d0 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 1592 00d4 00000000 		.word	_ZN5daisy9ParameterD1Ev
 1593 00d8 00000000 		.word	.LANCHOR10
 1594              	.LBE277:
 1595              	.LBE279:
 1596              		.cfi_endproc
 1597              	.LFE5367:
 1599              		.section	.init_array,"aw",%init_array
 1600              		.align	2
 1601 0000 00000000 		.word	_GLOBAL__sub_I_delay(target1)
 1602              		.global	feedbackKnob
 1603              		.global	configPtr
 1604              		.global	TIMER
 1605              		.global	TAPPING
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 56


 1606              		.global	BPM
 1607              		.global	onButtonWasPressed
 1608              		.global	drywet_ratio
 1609              		.global	MAX_FEEDBACK
 1610              		.global	headSwitches
 1611              		.global	TEMPO_BUTTON
 1612              		.global	ON_BUTTON
 1613              		.global	tone
 1614              		.global	delay
 1615              		.section	.bss.ON_BUTTON,"aw",%nobits
 1616              		.align	2
 1617              		.set	.LANCHOR7,. + 0
 1620              	ON_BUTTON:
 1621 0000 00000000 		.space	16
 1621      00000000 
 1621      00000000 
 1621      00000000 
 1622              		.section	.bss.TAPPING,"aw",%nobits
 1623              		.set	.LANCHOR1,. + 0
 1626              	TAPPING:
 1627 0000 00       		.space	1
 1628              		.section	.bss.TEMPO_BUTTON,"aw",%nobits
 1629              		.align	2
 1630              		.set	.LANCHOR3,. + 0
 1633              	TEMPO_BUTTON:
 1634 0000 00000000 		.space	16
 1634      00000000 
 1634      00000000 
 1634      00000000 
 1635              		.section	.bss.TIMER,"aw",%nobits
 1636              		.align	2
 1637              		.set	.LANCHOR0,. + 0
 1640              	TIMER:
 1641 0000 00000000 		.space	4
 1642              		.section	.bss._ZL2hw,"aw",%nobits
 1643              		.align	2
 1644              		.set	.LANCHOR6,. + 0
 1647              	_ZL2hw:
 1648 0000 00000000 		.space	60
 1648      00000000 
 1648      00000000 
 1648      00000000 
 1648      00000000 
 1649              		.section	.bss._ZL5cfade,"aw",%nobits
 1650              		.align	2
 1651              		.set	.LANCHOR8,. + 0
 1654              	_ZL5cfade:
 1655 0000 00000000 		.space	8
 1655      00000000 
 1656              		.section	.bss._ZL7balance,"aw",%nobits
 1657              		.align	2
 1658              		.set	.LANCHOR11,. + 0
 1661              	_ZL7balance:
 1662 0000 00000000 		.space	28
 1662      00000000 
 1662      00000000 
 1662      00000000 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 57


 1662      00000000 
 1663              		.section	.bss.configPtr,"aw",%nobits
 1664              		.align	2
 1665              		.set	.LANCHOR2,. + 0
 1668              	configPtr:
 1669 0000 00000000 		.space	4
 1670              		.section	.bss.delay,"aw",%nobits
 1671              		.align	2
 1674              	delay:
 1675 0000 00000000 		.space	384120
 1675      00000000 
 1675      00000000 
 1675      00000000 
 1675      00000000 
 1676              		.section	.bss.feedbackKnob,"aw",%nobits
 1677              		.align	2
 1678              		.set	.LANCHOR10,. + 0
 1681              	feedbackKnob:
 1682 0000 00000000 		.space	56
 1682      00000000 
 1682      00000000 
 1682      00000000 
 1682      00000000 
 1683              		.section	.bss.headSwitches,"aw",%nobits
 1684              		.align	2
 1685              		.set	.LANCHOR5,. + 0
 1688              	headSwitches:
 1689 0000 00000000 		.space	64
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1689      00000000 
 1690              		.section	.bss.onButtonWasPressed,"aw",%nobits
 1691              		.set	.LANCHOR13,. + 0
 1694              	onButtonWasPressed:
 1695 0000 00       		.space	1
 1696              		.section	.bss.tone,"aw",%nobits
 1697              		.align	2
 1698              		.set	.LANCHOR12,. + 0
 1701              	tone:
 1702 0000 00000000 		.space	52
 1702      00000000 
 1702      00000000 
 1702      00000000 
 1702      00000000 
 1703              		.section	.data.BPM,"aw"
 1704              		.align	2
 1705              		.set	.LANCHOR4,. + 0
 1708              	BPM:
 1709 0000 0000A041 		.word	1101004800
 1710              		.section	.data.MAX_FEEDBACK,"aw"
 1711              		.align	2
 1712              		.set	.LANCHOR9,. + 0
 1715              	MAX_FEEDBACK:
 1716 0000 CDCC8C3F 		.word	1066192077
 1717              		.section	.data.drywet_ratio,"aw"
 1718              		.align	2
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 58


 1719              		.set	.LANCHOR14,. + 0
 1722              	drywet_ratio:
 1723 0000 0000003F 		.word	1056964608
 1724              		.text
 1725              	.Letext0:
 1726              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1727              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1728              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1729              		.file 22 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1730              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1731              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1732              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1733              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1734              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1735              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1736              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1737              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1738              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1739              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1740              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1741              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1742              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1743              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1744              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1745              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1746              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1747              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1748              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1749              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1750              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1751              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1752              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1753              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1754              		.file 47 "../../DaisySP//Source/Control/adenv.h"
 1755              		.file 48 "../../DaisySP//Source/Utility/dsp.h"
 1756              		.file 49 "../../DaisySP//Source/Utility/delayline.h"
 1757              		.file 50 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1758              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1759              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1760              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1761              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1762              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1763              		.file 56 "../../libDaisy//src/daisy_core.h"
 1764              		.file 57 "../../libDaisy//src/per/sai.h"
 1765              		.file 58 "../../libDaisy//src/hid/logger_impl.h"
 1766              		.file 59 "../../libDaisy//src/util/wav_format.h"
 1767              		.file 60 "../../libDaisy//src/dev/max11300.h"
 1768              		.file 61 "../../libDaisy//src/hid/logger.h"
 1769              		.file 62 "../../libDaisy//src/per/gpio.h"
 1770              		.file 63 "../../libDaisy//src/dev/sdram.h"
 1771              		.file 64 "../../libDaisy//src/dev/sr_595.h"
 1772              		.file 65 "<built-in>"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 MyNewProject.cpp
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:17     .text._ZN7daisysp7BalanceD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:26     .text._ZN7daisysp7BalanceD2Ev:00000000 _ZN7daisysp7BalanceD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:43     .text._ZN7daisysp9CrossFadeD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:51     .text._ZN7daisysp9CrossFadeD2Ev:00000000 _ZN7daisysp9CrossFadeD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:68     .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:76     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:93     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:101    .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:118    .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:126    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:149    .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:157    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:198    .text._ZN6DelayyD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:206    .text._ZN6DelayyD2Ev:00000000 _ZN6DelayyD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:206    .text._ZN6DelayyD2Ev:00000000 _ZN6DelayyD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:223    .text._ZN10ToneFilterD2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:231    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD2Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:231    .text._ZN10ToneFilterD2Ev:00000000 _ZN10ToneFilterD1Ev
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:260    .text.__tcf_0:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:267    .text.__tcf_0:00000000 __tcf_0
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:281    .text._Z10CheckTempov:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:289    .text._Z10CheckTempov:00000000 _Z10CheckTempov
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:481    .text._Z10CheckTempov:000000c8 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:493    .text._Z15InitHeadButtonsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:501    .text._Z15InitHeadButtonsv:00000000 _Z15InitHeadButtonsv
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:560    .text._Z15InitHeadButtonsv:00000030 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:566    .text.startup.main:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:574    .text.startup.main:00000000 main
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:851    .text.startup.main:00000110 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1056   .text._ZL13AudioCallbackPKPKfPPfj:00000000 _ZL13AudioCallbackPKPKfPPfj
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:870    .rodata._Z15ProcessControlsv.str1.4:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:874    .text._Z15ProcessControlsv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:882    .text._Z15ProcessControlsv:00000000 _Z15ProcessControlsv
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1038   .text._Z15ProcessControlsv:000000a8 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1674   .bss.delay:00000000 delay
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1049   .text._ZL13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1320   .text._ZL13AudioCallbackPKPKfPPfj:000000e8 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1332   .text.startup._GLOBAL__sub_I_delay:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1339   .text.startup._GLOBAL__sub_I_delay:00000000 _GLOBAL__sub_I_delay
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1574   .text.startup._GLOBAL__sub_I_delay:0000008c $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1600   .init_array:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1681   .bss.feedbackKnob:00000000 feedbackKnob
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1668   .bss.configPtr:00000000 configPtr
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1640   .bss.TIMER:00000000 TIMER
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1626   .bss.TAPPING:00000000 TAPPING
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1708   .data.BPM:00000000 BPM
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1694   .bss.onButtonWasPressed:00000000 onButtonWasPressed
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1722   .data.drywet_ratio:00000000 drywet_ratio
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1715   .data.MAX_FEEDBACK:00000000 MAX_FEEDBACK
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 60


C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1688   .bss.headSwitches:00000000 headSwitches
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1633   .bss.TEMPO_BUTTON:00000000 TEMPO_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1620   .bss.ON_BUTTON:00000000 ON_BUTTON
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1701   .bss.tone:00000000 tone
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1616   .bss.ON_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1627   .bss.TAPPING:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1629   .bss.TEMPO_BUTTON:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1636   .bss.TIMER:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1643   .bss._ZL2hw:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1647   .bss._ZL2hw:00000000 _ZL2hw
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1650   .bss._ZL5cfade:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1654   .bss._ZL5cfade:00000000 _ZL5cfade
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1657   .bss._ZL7balance:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1661   .bss._ZL7balance:00000000 _ZL7balance
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1664   .bss.configPtr:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1671   .bss.delay:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1677   .bss.feedbackKnob:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1684   .bss.headSwitches:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1695   .bss.onButtonWasPressed:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1697   .bss.tone:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1704   .data.BPM:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1711   .data.MAX_FEEDBACK:00000000 $d
C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s:1718   .data.drywet_ratio:00000000 $d
                           .group:00000000 _ZN7daisysp7BalanceD5Ev
                           .group:00000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN6DelayyD5Ev
                           .group:00000000 _ZN10ToneFilterD5Ev

UNDEFINED SYMBOLS
_ZN5daisy11TimerHandle7GetTickEv
_ZN5daisy11TimerHandle7GetFreqEv
_ZN5daisy6Switch8DebounceEv
_ZN5daisy11TimerHandle4StopEv
_ZN5daisy11TimerHandle6DeInitEv
_ZN5daisy11TimerHandle4InitERKNS0_6ConfigE
_ZN5daisy11TimerHandle5StartEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZNK5daisy9AdcHandle6GetPtrEh
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy13AnalogControl4InitEPtfbbf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN7daisysp7Balance4InitEf
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy6System5DelayEm
_ZN5daisy9Parameter7ProcessEv
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccfBsENo.s 			page 61


powf
_ZN10ToneFilter7setFreqEf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN6Delayy10toggleHeadERKi
_ZN6Delayy7processEf
_ZN10ToneFilter7processEf
_ZN7daisysp7Balance7ProcessEff
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN6Delayy6setBPMERKi
_ZN6Delayy7stopAllEv
_ZN6DelayyC1Ev
__aeabi_atexit
_ZN10ToneFilterC1Ef
__dso_handle
