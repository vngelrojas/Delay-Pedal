ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Delay.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6DelayyC2Ev,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN6DelayyC2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN6DelayyC2Ev:
  27              	.LVL0:
  28              	.LFB4790:
  29              		.file 1 "Delay.cpp"
   1:Delay.cpp     **** #include "Delay.h"
   2:Delay.cpp     **** 
   3:Delay.cpp     **** 
   4:Delay.cpp     **** 
   5:Delay.cpp     **** Delayy::Delayy()
  30              		.loc 1 5 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB8:
   6:Delay.cpp     **** {
   7:Delay.cpp     ****     //delayMems = temp;
   8:Delay.cpp     ****     for(int i = 0; i < 4; i++)
  36              		.loc 1 8 5 view .LVU1
  37              	.LBB9:
  38              		.loc 1 8 22 view .LVU2
   9:Delay.cpp     ****     {
  10:Delay.cpp     ****         // Init the feedback
  11:Delay.cpp     ****         delayHeads[i].feedback = 0; 
  39              		.loc 1 11 9 view .LVU3
  40              		.loc 1 11 32 is_stmt 0 view .LVU4
  41 0000 0022     		movs	r2, #0
  42              	.LBE9:
  12:Delay.cpp     ****         // Make sure they are all off
  13:Delay.cpp     ****         delayHeadOn[i] = false;
  14:Delay.cpp     ****     }
  15:Delay.cpp     ****     bpm = 20;
  43              		.loc 1 15 9 view .LVU5
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 2


  44 0002 0649     		ldr	r1, .L4
  45              	.LBE8:
   5:Delay.cpp     **** {
  46              		.loc 1 5 1 view .LVU6
  47 0004 10B4     		push	{r4}
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 4, -4
  50              	.LBB12:
  51              	.LBB10:
  13:Delay.cpp     ****     }
  52              		.loc 1 13 24 view .LVU7
  53 0006 0024     		movs	r4, #0
  11:Delay.cpp     ****         // Make sure they are all off
  54              		.loc 1 11 32 view .LVU8
  55 0008 8261     		str	r2, [r0, #24]	@ float
  13:Delay.cpp     ****     }
  56              		.loc 1 13 9 is_stmt 1 view .LVU9
   8:Delay.cpp     ****     {
  57              		.loc 1 8 5 view .LVU10
  58              	.LVL1:
   8:Delay.cpp     ****     {
  59              		.loc 1 8 22 view .LVU11
  11:Delay.cpp     ****         // Make sure they are all off
  60              		.loc 1 11 9 view .LVU12
  11:Delay.cpp     ****         // Make sure they are all off
  61              		.loc 1 11 32 is_stmt 0 view .LVU13
  62 000a 8262     		str	r2, [r0, #40]	@ float
  13:Delay.cpp     ****     }
  63              		.loc 1 13 9 is_stmt 1 view .LVU14
   8:Delay.cpp     ****     {
  64              		.loc 1 8 5 view .LVU15
  65              	.LVL2:
   8:Delay.cpp     ****     {
  66              		.loc 1 8 22 view .LVU16
  11:Delay.cpp     ****         // Make sure they are all off
  67              		.loc 1 11 9 view .LVU17
  13:Delay.cpp     ****     }
  68              		.loc 1 13 24 is_stmt 0 view .LVU18
  69 000c 0460     		str	r4, [r0]
  11:Delay.cpp     ****         // Make sure they are all off
  70              		.loc 1 11 32 view .LVU19
  71 000e 8263     		str	r2, [r0, #56]	@ float
  13:Delay.cpp     ****     }
  72              		.loc 1 13 9 is_stmt 1 view .LVU20
   8:Delay.cpp     ****     {
  73              		.loc 1 8 5 view .LVU21
  74              	.LVL3:
   8:Delay.cpp     ****     {
  75              		.loc 1 8 22 view .LVU22
  11:Delay.cpp     ****         // Make sure they are all off
  76              		.loc 1 11 9 view .LVU23
  77              	.LBE10:
  78              	.LBE12:
  16:Delay.cpp     **** }
  79              		.loc 1 16 1 is_stmt 0 view .LVU24
  80 0010 5DF8044B 		ldr	r4, [sp], #4
  81              		.cfi_restore 4
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 3


  82              		.cfi_def_cfa_offset 0
  83              	.LBB13:
  84              	.LBB11:
  11:Delay.cpp     ****         // Make sure they are all off
  85              		.loc 1 11 32 view .LVU25
  86 0014 8264     		str	r2, [r0, #72]	@ float
  13:Delay.cpp     ****     }
  87              		.loc 1 13 9 is_stmt 1 view .LVU26
   8:Delay.cpp     ****     {
  88              		.loc 1 8 5 view .LVU27
  89              	.LVL4:
   8:Delay.cpp     ****     {
  90              		.loc 1 8 22 view .LVU28
  91              	.LBE11:
  15:Delay.cpp     **** }
  92              		.loc 1 15 5 view .LVU29
  15:Delay.cpp     **** }
  93              		.loc 1 15 9 is_stmt 0 view .LVU30
  94 0016 4160     		str	r1, [r0, #4]	@ float
  95              	.LBE13:
  96              		.loc 1 16 1 view .LVU31
  97 0018 7047     		bx	lr
  98              	.L5:
  99 001a 00BF     		.align	2
 100              	.L4:
 101 001c 0000A041 		.word	1101004800
 102              		.cfi_endproc
 103              	.LFE4790:
 105              		.global	_ZN6DelayyC1Ev
 106              		.thumb_set _ZN6DelayyC1Ev,_ZN6DelayyC2Ev
 107              		.section	.text._ZN6Delayy7stopAllEv,"ax",%progbits
 108              		.align	1
 109              		.p2align 2,,3
 110              		.global	_ZN6Delayy7stopAllEv
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-d16
 116              	_ZN6Delayy7stopAllEv:
 117              	.LVL5:
 118              	.LFB4792:
  17:Delay.cpp     **** 
  18:Delay.cpp     **** void Delayy::stopAll()
  19:Delay.cpp     **** {
 119              		.loc 1 19 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 124              		.loc 1 20 5 view .LVU33
 125              	.LBB14:
 126              		.loc 1 20 21 view .LVU34
  21:Delay.cpp     ****         delayHeadOn[i] = false;
 127              		.loc 1 21 9 view .LVU35
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 128              		.loc 1 20 5 view .LVU36
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 4


  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 129              		.loc 1 20 21 view .LVU37
 130              		.loc 1 21 9 view .LVU38
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 131              		.loc 1 20 5 view .LVU39
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 132              		.loc 1 20 21 view .LVU40
 133              		.loc 1 21 9 view .LVU41
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 134              		.loc 1 20 5 view .LVU42
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 135              		.loc 1 20 21 view .LVU43
 136              		.loc 1 21 9 view .LVU44
 137              		.loc 1 21 24 is_stmt 0 view .LVU45
 138 0000 0023     		movs	r3, #0
 139 0002 0360     		str	r3, [r0]
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 140              		.loc 1 20 5 is_stmt 1 view .LVU46
 141              	.LVL6:
  20:Delay.cpp     ****     for(int i = 0;i < NUM_OF_DELAY_HEADS;i++)
 142              		.loc 1 20 21 view .LVU47
 143              	.LBE14:
  22:Delay.cpp     **** }
 144              		.loc 1 22 1 is_stmt 0 view .LVU48
 145 0004 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE4792:
 149 0006 00BF     		.section	.text._ZN6Delayy6setBPMEf,"ax",%progbits
 150              		.align	1
 151              		.p2align 2,,3
 152              		.global	_ZN6Delayy6setBPMEf
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv5-d16
 158              	_ZN6Delayy6setBPMEf:
 159              	.LVL7:
 160              	.LFB4793:
  23:Delay.cpp     **** 
  24:Delay.cpp     **** void Delayy::setBPM(float bpm)
  25:Delay.cpp     **** {
 161              		.loc 1 25 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
  26:Delay.cpp     ****     this->bpm = bpm;
 166              		.loc 1 26 5 view .LVU50
 167              		.loc 1 26 15 is_stmt 0 view .LVU51
 168 0000 80ED010A 		vstr.32	s0, [r0, #4]
  27:Delay.cpp     ****     // for(int i = 0; i < NUM_OF_DELAY_HEADS; i++)
  28:Delay.cpp     ****     // {
  29:Delay.cpp     ****     //     //The (i+0.25-i*0.75) just sets the delay intervals to 
  30:Delay.cpp     ****     //     // (1/16 note, 1/8 note, dotted 1/8 note, 1/4 note - or 0.25,0.5,0.75,1) for i=0,1,2,3
  31:Delay.cpp     ****     //     // The 2880000/BPM sets BPM of delay 
  32:Delay.cpp     ****     //     delayHeads[i].delayTarget = (i+0.25-i*0.75)* 2880000/bpm;
  33:Delay.cpp     ****     // }
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 5


  34:Delay.cpp     **** }
 169              		.loc 1 34 1 view .LVU52
 170 0004 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE4793:
 174 0006 00BF     		.section	.text._ZN6Delayy11setFeedbackERKf,"ax",%progbits
 175              		.align	1
 176              		.p2align 2,,3
 177              		.global	_ZN6Delayy11setFeedbackERKf
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv5-d16
 183              	_ZN6Delayy11setFeedbackERKf:
 184              	.LVL8:
 185              	.LFB4794:
  35:Delay.cpp     **** 
  36:Delay.cpp     **** void Delayy::setFeedback(const float& feed)                           
  37:Delay.cpp     **** {
 186              		.loc 1 37 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  38:Delay.cpp     ****     
  39:Delay.cpp     ****     this->feedback = feed;
 191              		.loc 1 39 5 view .LVU54
 192              		.loc 1 39 22 is_stmt 0 view .LVU55
 193 0000 0B68     		ldr	r3, [r1]	@ float
 194              		.loc 1 39 20 view .LVU56
 195 0002 8360     		str	r3, [r0, #8]	@ float
  40:Delay.cpp     **** 
  41:Delay.cpp     **** }
 196              		.loc 1 41 1 view .LVU57
 197 0004 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE4794:
 201 0006 00BF     		.section	.text._ZN6Delayy7processEf,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.global	_ZN6Delayy7processEf
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv5-d16
 210              	_ZN6Delayy7processEf:
 211              	.LVL9:
 212              	.LFB4795:
  42:Delay.cpp     **** 
  43:Delay.cpp     **** float Delayy::process(float in)
  44:Delay.cpp     **** {
 213              		.loc 1 44 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
  45:Delay.cpp     ****     float allDelaySignals = 0;
 217              		.loc 1 45 5 view .LVU59
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 6


  46:Delay.cpp     **** 
  47:Delay.cpp     ****     for (int i = 0; i < NUM_OF_DELAY_HEADS; i++)
 218              		.loc 1 47 5 view .LVU60
 219              	.LBB26:
 220              		.loc 1 47 23 view .LVU61
 221              	.LBE26:
  44:Delay.cpp     ****     float allDelaySignals = 0;
 222              		.loc 1 44 1 is_stmt 0 view .LVU62
 223 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 224              		.cfi_def_cfa_offset 32
 225              		.cfi_offset 4, -32
 226              		.cfi_offset 5, -28
 227              		.cfi_offset 6, -24
 228              		.cfi_offset 7, -20
 229              		.cfi_offset 8, -16
 230              		.cfi_offset 9, -12
 231              		.cfi_offset 10, -8
 232              		.cfi_offset 14, -4
 233              	.LBB74:
 234              		.loc 1 47 14 view .LVU63
 235 0004 0022     		movs	r2, #0
 236              	.LBE74:
  45:Delay.cpp     ****     float allDelaySignals = 0;
 237              		.loc 1 45 11 view .LVU64
 238 0006 DFED3E2A 		vldr.32	s5, .L18
 239 000a 0346     		mov	r3, r0
 240 000c 00F1FF3E 		add	lr, r0, #-1
 241              	.LVL10:
 242              	.L11:
 243              	.LBB75:
  48:Delay.cpp     ****     {
  49:Delay.cpp     ****         delayHeads[i].feedback = this->feedback;
 244              		.loc 1 49 9 is_stmt 1 view .LVU65
 245              		.loc 1 49 40 is_stmt 0 view .LVU66
 246 0010 8168     		ldr	r1, [r0, #8]	@ float
  50:Delay.cpp     ****         delayHeads[i].delayTarget = (i+0.25-i*0.75)* (48000*(60/bpm));
 247              		.loc 1 50 39 view .LVU67
 248 0012 07EE902A 		vmov	s15, r2	@ int
 249              		.loc 1 50 64 view .LVU68
 250 0016 9FED3B3A 		vldr.32	s6, .L18+4
 251              		.loc 1 50 39 view .LVU69
 252 001a B5EE006B 		vmov.f64	d6, #2.5e-1
  49:Delay.cpp     ****         delayHeads[i].delayTarget = (i+0.25-i*0.75)* (48000*(60/bpm));
 253              		.loc 1 49 32 view .LVU70
 254 001e 9961     		str	r1, [r3, #24]	@ float
 255              		.loc 1 50 9 is_stmt 1 view .LVU71
 256              		.loc 1 50 39 is_stmt 0 view .LVU72
 257 0020 B8EEE75B 		vcvt.f64.s32	d5, s15
 258              		.loc 1 50 64 view .LVU73
 259 0024 D0ED013A 		vldr.32	s7, [r0, #4]
 260              		.loc 1 50 44 view .LVU74
 261 0028 B6EE084B 		vmov.f64	d4, #7.5e-1
 262              		.loc 1 50 60 view .LVU75
 263 002c 9FED367A 		vldr.32	s14, .L18+8
  47:Delay.cpp     ****     {
 264              		.loc 1 47 5 view .LVU76
 265 0030 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 7


 266              	.LVL11:
 267              		.loc 1 50 64 view .LVU77
 268 0032 C3EE237A 		vdiv.f32	s15, s6, s7
 269              	.LVL12:
  51:Delay.cpp     ****         if(delayHeadOn[i])
 270              		.loc 1 51 9 view .LVU78
 271 0036 1EF8011F 		ldrb	r1, [lr, #1]!	@ zero_extendqisi2
  50:Delay.cpp     ****         if(delayHeadOn[i])
 272              		.loc 1 50 39 view .LVU79
 273 003a 35EE066B 		vadd.f64	d6, d5, d6
  50:Delay.cpp     ****         if(delayHeadOn[i])
 274              		.loc 1 50 44 view .LVU80
 275 003e A5EE446B 		vfms.f64	d6, d5, d4
  50:Delay.cpp     ****         if(delayHeadOn[i])
 276              		.loc 1 50 60 view .LVU81
 277 0042 27EE877A 		vmul.f32	s14, s15, s14
 278 0046 B7EEC77A 		vcvt.f64.f32	d7, s14
  50:Delay.cpp     ****         if(delayHeadOn[i])
 279              		.loc 1 50 52 view .LVU82
 280 004a 27EE067B 		vmul.f64	d7, d7, d6
 281 004e B7EEC77B 		vcvt.f32.f64	s14, d7
  50:Delay.cpp     ****         if(delayHeadOn[i])
 282              		.loc 1 50 35 view .LVU83
 283 0052 83ED057A 		vstr.32	s14, [r3, #20]
 284              		.loc 1 51 9 is_stmt 1 view .LVU84
 285 0056 39B9     		cbnz	r1, .L17
 286              	.L10:
  47:Delay.cpp     ****     {
 287              		.loc 1 47 5 discriminator 2 view .LVU85
 288              	.LVL13:
  47:Delay.cpp     ****     {
 289              		.loc 1 47 23 discriminator 2 view .LVU86
 290 0058 042A     		cmp	r2, #4
 291 005a 03F11003 		add	r3, r3, #16
 292 005e D7D1     		bne	.L11
  47:Delay.cpp     ****     {
 293              		.loc 1 47 23 is_stmt 0 discriminator 2 view .LVU87
 294              	.LBE75:
  52:Delay.cpp     ****             allDelaySignals += delayHeads[i].process(in);
  53:Delay.cpp     ****     }
  54:Delay.cpp     **** 
  55:Delay.cpp     ****     return allDelaySignals;
 295              		.loc 1 55 5 is_stmt 1 view .LVU88
  56:Delay.cpp     ****     
  57:Delay.cpp     **** }
 296              		.loc 1 57 1 is_stmt 0 view .LVU89
 297 0060 B0EE620A 		vmov.f32	s0, s5
 298              	.LVL14:
 299              		.loc 1 57 1 view .LVU90
 300 0064 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 301              	.LVL15:
 302              	.L17:
 303              	.LBB76:
  52:Delay.cpp     ****             allDelaySignals += delayHeads[i].process(in);
 304              		.loc 1 52 13 is_stmt 1 view .LVU91
 305              	.LBB27:
 306              	.LBI27:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 8


 307              		.file 2 "Delay.h"
   1:Delay.h       **** #include "daisysp.h"
   2:Delay.h       **** #include "daisy_seed.h"
   3:Delay.h       **** #pragma once
   4:Delay.h       **** using namespace daisysp;
   5:Delay.h       **** using namespace daisy;
   6:Delay.h       **** using namespace daisy::seed;
   7:Delay.h       **** 
   8:Delay.h       **** #define MAX_DELAY static_cast<size_t>(48000 * 2.f)  // Max delay of 2 seconds which is 30 bpm
   9:Delay.h       **** const int NUM_OF_DELAY_HEADS = 4;                   // # of delay heads, simply change this number 
  10:Delay.h       **** 
  11:Delay.h       **** 
  12:Delay.h       **** 
  13:Delay.h       **** class Delayy
  14:Delay.h       **** {
  15:Delay.h       ****     private:
  16:Delay.h       ****         struct DelayHead
  17:Delay.h       ****         {
  18:Delay.h       ****             DelayLine<float, MAX_DELAY> *delay; // Will point to a delayMem
  19:Delay.h       ****             float currentDelay;                 // The current delay 
  20:Delay.h       ****             float delayTarget;                  // The delay target that currentDelay will ramp up/
  21:Delay.h       ****             float feedback;                     // Feedback level of the delay
  22:Delay.h       **** 
  23:Delay.h       ****             float process(float in)
 308              		.loc 2 23 19 view .LVU92
 309              	.LBB28:
  24:Delay.h       ****             {
  25:Delay.h       **** 
  26:Delay.h       ****                 float readSample; // Will store a sample from the delay line
 310              		.loc 2 26 17 view .LVU93
  27:Delay.h       **** 
  28:Delay.h       ****                 // This smoothes out the delay when you turn the delay control?
  29:Delay.h       ****                 fonepole(currentDelay, delayTarget, .0002f); 
 311              		.loc 2 29 17 view .LVU94
 312              	.LBB29:
 313              	.LBI29:
 314              		.file 3 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 9


  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 10


  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 11


 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 315              		.loc 3 135 13 view .LVU95
 316              	.LBB30:
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 317              		.loc 3 137 5 view .LVU96
 318              		.loc 3 137 9 is_stmt 0 view .LVU97
 319 0068 D3ED047A 		vldr.32	s15, [r3, #16]
 320 006c DFED276A 		vldr.32	s13, .L18+12
 321              		.loc 3 137 24 view .LVU98
 322 0070 37EE677A 		vsub.f32	s14, s14, s15
 323              	.LVL16:
 324              		.loc 3 137 24 view .LVU99
 325              	.LBE30:
 326              	.LBE29:
 327              	.LBB33:
 328              	.LBB34:
 329              		.file 4 "../../DaisySP//Source/Utility/delayline.h"
   1:../../DaisySP//Source/Utility/delayline.h **** #pragma once
   2:../../DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP//Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP//Source/Utility/delayline.h **** {
   8:../../DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP//Source/Utility/delayline.h **** November 2019
  10:../../DaisySP//Source/Utility/delayline.h **** 
  11:../../DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP//Source/Utility/delayline.h **** 
  13:../../DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../../DaisySP//Source/Utility/delayline.h **** 
  15:../../DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP//Source/Utility/delayline.h **** 
  17:../../DaisySP//Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP//Source/Utility/delayline.h **** */
  19:../../DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../../DaisySP//Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP//Source/Utility/delayline.h **** {
  22:../../DaisySP//Source/Utility/delayline.h ****   public:
  23:../../DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  24:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
  25:../../DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../../DaisySP//Source/Utility/delayline.h ****     */
  27:../../DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
  28:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../../DaisySP//Source/Utility/delayline.h ****     */
  30:../../DaisySP//Source/Utility/delayline.h ****     void Reset()
  31:../../DaisySP//Source/Utility/delayline.h ****     {
  32:../../DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  33:../../DaisySP//Source/Utility/delayline.h ****         {
  34:../../DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
  35:../../DaisySP//Source/Utility/delayline.h ****         }
  36:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
  37:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
  38:../../DaisySP//Source/Utility/delayline.h ****     }
  39:../../DaisySP//Source/Utility/delayline.h **** 
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 12


  40:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  41:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  42:../../DaisySP//Source/Utility/delayline.h ****     */
  43:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  44:../../DaisySP//Source/Utility/delayline.h ****     {
  45:../../DaisySP//Source/Utility/delayline.h ****         frac_  = 0.0f;
  46:../../DaisySP//Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  47:../../DaisySP//Source/Utility/delayline.h ****     }
  48:../../DaisySP//Source/Utility/delayline.h **** 
  49:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  50:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  51:../../DaisySP//Source/Utility/delayline.h ****     */
  52:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  53:../../DaisySP//Source/Utility/delayline.h ****     {
  54:../../DaisySP//Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  55:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  56:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 330              		.loc 4 56 60 view .LVU100
 331 0074 264D     		ldr	r5, .L18+16
 332              	.LBE34:
 333              	.LBE33:
  30:Delay.h       ****                 // Set delay time
  31:Delay.h       ****                 delay->SetDelay(currentDelay);          
 334              		.loc 2 31 17 view .LVU101
 335 0076 DC68     		ldr	r4, [r3, #12]
  32:Delay.h       ****                 readSample = delay->Read(); // Read in the next sample from the delay line
  33:Delay.h       **** 
  34:Delay.h       ****                 // Write the readSample * the feedback amount + the input sample into the delay lin
  35:Delay.h       ****                 delay->Write((feedback * readSample) + in); 
 336              		.loc 2 35 29 view .LVU102
 337 0078 93ED066A 		vldr.32	s12, [r3, #24]
 338              	.LBB39:
 339              	.LBB31:
 340              		.loc 3 137 9 view .LVU103
 341 007c E7EE267A 		vfma.f32	s15, s14, s13
 342              	.LBE31:
 343              	.LBE39:
 344              	.LBB40:
 345              	.LBB41:
  57:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
  58:../../DaisySP//Source/Utility/delayline.h ****     }
  59:../../DaisySP//Source/Utility/delayline.h **** 
  60:../../DaisySP//Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  61:../../DaisySP//Source/Utility/delayline.h ****     */
  62:../../DaisySP//Source/Utility/delayline.h ****     inline void Write(const T sample)
  63:../../DaisySP//Source/Utility/delayline.h ****     {
  64:../../DaisySP//Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  65:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  66:../../DaisySP//Source/Utility/delayline.h ****     }
  67:../../DaisySP//Source/Utility/delayline.h **** 
  68:../../DaisySP//Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  69:../../DaisySP//Source/Utility/delayline.h ****     */
  70:../../DaisySP//Source/Utility/delayline.h ****     inline const T Read() const
  71:../../DaisySP//Source/Utility/delayline.h ****     {
  72:../../DaisySP//Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 346              		.loc 4 72 22 view .LVU104
 347 0080 6668     		ldr	r6, [r4, #4]
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 13


 348              		.loc 4 72 43 view .LVU105
 349 0082 244F     		ldr	r7, .L18+20
 350              	.LBE41:
 351              	.LBE40:
 352              	.LBB48:
 353              	.LBB49:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 354              		.loc 4 65 45 view .LVU106
 355 0084 06EB050C 		add	ip, r6, r5
 356              	.LBE49:
 357              	.LBE48:
 358              	.LBB55:
 359              	.LBB35:
  54:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 360              		.loc 4 54 17 view .LVU107
 361 0088 BDEEE77A 		vcvt.s32.f32	s14, s15
 362              	.LBE35:
 363              	.LBE55:
 364              	.LBB56:
 365              	.LBB32:
 366              		.loc 3 137 9 view .LVU108
 367 008c C3ED047A 		vstr.32	s15, [r3, #16]
 368              	.LVL17:
 369              		.loc 3 137 9 view .LVU109
 370              	.LBE32:
 371              	.LBE56:
  31:Delay.h       ****                 readSample = delay->Read(); // Read in the next sample from the delay line
 372              		.loc 2 31 17 is_stmt 1 view .LVU110
 373              	.LBB57:
 374              	.LBI33:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 375              		.loc 4 52 17 view .LVU111
 376              	.LBB36:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 377              		.loc 4 56 60 is_stmt 0 view .LVU112
 378 0090 17EE101A 		vmov	r1, s14	@ int
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 379              		.loc 4 55 37 view .LVU113
 380 0094 B8EEC77A 		vcvt.f32.s32	s14, s14
 381              	.LVL18:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 382              		.loc 4 56 60 view .LVU114
 383 0098 A942     		cmp	r1, r5
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 384              		.loc 4 55 35 view .LVU115
 385 009a 77EEC77A 		vsub.f32	s15, s15, s14
 386              	.LVL19:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 387              		.loc 4 56 60 view .LVU116
 388 009e 28BF     		it	cs
 389 00a0 2946     		movcs	r1, r5
 390              	.LVL20:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 391              		.loc 4 56 60 view .LVU117
 392              	.LBE36:
 393              	.LBE57:
 394              	.LBB58:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 14


 395              	.LBB42:
 396              		.loc 4 72 43 view .LVU118
 397 00a2 1D4D     		ldr	r5, .L18+24
 398              	.LBE42:
 399              	.LBE58:
 400              	.LBB59:
 401              	.LBB37:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 402              		.loc 4 56 16 view .LVU119
 403 00a4 A160     		str	r1, [r4, #8]
 404              	.LVL21:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 405              		.loc 4 56 16 view .LVU120
 406              	.LBE37:
 407              	.LBE59:
  32:Delay.h       **** 
 408              		.loc 2 32 17 is_stmt 1 view .LVU121
 409              	.LBB60:
 410              	.LBI40:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 411              		.loc 4 70 20 view .LVU122
 412              	.LBB43:
 413              		.loc 4 72 33 is_stmt 0 view .LVU123
 414 00a6 3144     		add	r1, r1, r6
 415              	.LBE43:
 416              	.LBE60:
 417              	.LBB61:
 418              	.LBB38:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 419              		.loc 4 55 27 view .LVU124
 420 00a8 C4ED007A 		vstr.32	s15, [r4]
 421              	.LBE38:
 422              	.LBE61:
 423              	.LBB62:
 424              	.LBB50:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 425              		.loc 4 64 27 view .LVU125
 426 00ac 04EB8606 		add	r6, r4, r6, lsl #2
 427              	.LBE50:
 428              	.LBE62:
 429              	.LBB63:
 430              	.LBB44:
 431              		.loc 4 72 43 view .LVU126
 432 00b0 A5FB01A9 		umull	r10, r9, r5, r1
  73:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 433              		.loc 4 73 42 view .LVU127
 434 00b4 01F10108 		add	r8, r1, #1
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 435              		.loc 4 72 43 view .LVU128
 436 00b8 4FEAD929 		lsr	r9, r9, #11
 437 00bc 07FB1911 		mls	r1, r7, r9, r1
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 438              		.loc 4 72 11 view .LVU129
 439 00c0 04EB8101 		add	r1, r4, r1, lsl #2
 440 00c4 91ED037A 		vldr.32	s14, [r1, #12]
 441              	.LVL22:
 442              		.loc 4 73 47 view .LVU130
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 15


 443 00c8 A5FB0891 		umull	r9, r1, r5, r8
 444              	.LBE44:
 445              	.LBE63:
 446              	.LBB64:
 447              	.LBB51:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 448              		.loc 4 65 57 view .LVU131
 449 00cc A5FB0C95 		umull	r9, r5, r5, ip
 450              	.LBE51:
 451              	.LBE64:
 452              	.LBB65:
 453              	.LBB45:
 454              		.loc 4 73 47 view .LVU132
 455 00d0 C90A     		lsrs	r1, r1, #11
 456              	.LBE45:
 457              	.LBE65:
 458              	.LBB66:
 459              	.LBB52:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 460              		.loc 4 65 57 view .LVU133
 461 00d2 ED0A     		lsrs	r5, r5, #11
 462              	.LBE52:
 463              	.LBE66:
 464              	.LBB67:
 465              	.LBB46:
 466              		.loc 4 73 47 view .LVU134
 467 00d4 07FB1188 		mls	r8, r7, r1, r8
 468              	.LVL23:
 469              		.loc 4 73 47 view .LVU135
 470              	.LBE46:
 471              	.LBE67:
 472              	.LBB68:
 473              	.LBB53:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 474              		.loc 4 65 57 view .LVU136
 475 00d8 07FB15C5 		mls	r5, r7, r5, ip
 476              	.LBE53:
 477              	.LBE68:
 478              	.LBB69:
 479              	.LBB47:
 480              		.loc 4 73 11 view .LVU137
 481 00dc 04EB8808 		add	r8, r4, r8, lsl #2
  74:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 482              		.loc 4 74 23 view .LVU138
 483 00e0 D8ED036A 		vldr.32	s13, [r8, #12]
 484 00e4 76EEC76A 		vsub.f32	s13, s13, s14
 485              		.loc 4 74 30 view .LVU139
 486 00e8 A7EEA67A 		vfma.f32	s14, s15, s13
 487              	.LVL24:
 488              		.loc 4 74 30 view .LVU140
 489              	.LBE47:
 490              	.LBE69:
 491              		.loc 2 35 17 is_stmt 1 view .LVU141
 492              		.loc 2 35 29 is_stmt 0 view .LVU142
 493 00ec F0EE407A 		vmov.f32	s15, s0
 494 00f0 E6EE077A 		vfma.f32	s15, s12, s14
 495              	.LVL25:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 16


 496              	.LBB70:
 497              	.LBI48:
  62:../../DaisySP//Source/Utility/delayline.h ****     {
 498              		.loc 4 62 17 is_stmt 1 view .LVU143
 499              	.LBE70:
 500              	.LBE28:
 501              	.LBE27:
  52:Delay.cpp     ****     }
 502              		.loc 1 52 29 is_stmt 0 view .LVU144
 503 00f4 72EE872A 		vadd.f32	s5, s5, s14
 504              	.LVL26:
 505              	.LBB73:
 506              	.LBB72:
 507              	.LBB71:
 508              	.LBB54:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 509              		.loc 4 64 27 view .LVU145
 510 00f8 C6ED037A 		vstr.32	s15, [r6, #12]
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 511              		.loc 4 65 27 view .LVU146
 512 00fc 6560     		str	r5, [r4, #4]
 513              	.LVL27:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 514              		.loc 4 65 27 view .LVU147
 515              	.LBE54:
 516              	.LBE71:
  36:Delay.h       ****                 
  37:Delay.h       ****                 return readSample;
 517              		.loc 2 37 17 is_stmt 1 view .LVU148
 518              		.loc 2 37 17 is_stmt 0 view .LVU149
 519              	.LBE72:
 520              	.LBE73:
 521 00fe ABE7     		b	.L10
 522              	.L19:
 523              		.align	2
 524              	.L18:
 525 0100 00000000 		.word	0
 526 0104 00007042 		.word	1114636288
 527 0108 00803B47 		.word	1195081728
 528 010c 17B75139 		.word	961656599
 529 0110 FF760100 		.word	95999
 530 0114 00770100 		.word	96000
 531 0118 F1197605 		.word	91625969
 532              	.LBE76:
 533              		.cfi_endproc
 534              	.LFE4795:
 536              		.section	.text._ZN6Delayy10toggleHeadERKi,"ax",%progbits
 537              		.align	1
 538              		.p2align 2,,3
 539              		.global	_ZN6Delayy10toggleHeadERKi
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv5-d16
 545              	_ZN6Delayy10toggleHeadERKi:
 546              	.LVL28:
 547              	.LFB4796:
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 17


  58:Delay.cpp     **** 
  59:Delay.cpp     **** void Delayy::toggleHead(const int& headNumber)
  60:Delay.cpp     **** {
 548              		.loc 1 60 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
  61:Delay.cpp     ****     if(headNumber >= NUM_OF_DELAY_HEADS || headNumber < 0)
 553              		.loc 1 61 5 view .LVU151
 554              		.loc 1 61 8 is_stmt 0 view .LVU152
 555 0000 0B68     		ldr	r3, [r1]
 556              		.loc 1 61 5 view .LVU153
 557 0002 032B     		cmp	r3, #3
 558 0004 03D8     		bhi	.L20
  62:Delay.cpp     ****         return;
  63:Delay.cpp     ****     else
  64:Delay.cpp     ****         delayHeadOn[headNumber] = !delayHeadOn[headNumber];
 559              		.loc 1 64 9 is_stmt 1 view .LVU154
 560              		.loc 1 64 35 is_stmt 0 view .LVU155
 561 0006 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 562 0008 82F00102 		eor	r2, r2, #1
 563              		.loc 1 64 33 view .LVU156
 564 000c C254     		strb	r2, [r0, r3]
 565              	.L20:
  65:Delay.cpp     **** }...
 566              		.loc 1 65 1 view .LVU157
 567 000e 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE4796:
 571              		.text
 572              	.Letext0:
 573              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 574              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 575              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 576              		.file 8 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 577              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 578              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 579              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 580              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 581              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 582              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 583              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 584              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 585              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 586              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 587              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 588              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 589              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 590              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 591              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 592              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 593              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 594              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 595              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 596              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 597              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 18


 598              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 599              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 600              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 601              		.file 33 "../../DaisySP//Source/Control/adenv.h"
 602              		.file 34 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 603              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 604              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 605              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 606              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 607              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 608              		.file 40 "../../libDaisy//src/daisy_core.h"
 609              		.file 41 "../../libDaisy//src/util/wav_format.h"
 610              		.file 42 "../../libDaisy//src/dev/max11300.h"
 611              		.file 43 "../../libDaisy//src/daisy_seed.h"
 612              		.file 44 "../../libDaisy//src/dev/sr_595.h"
 613              		.file 45 "<built-in>"
ARM GAS  C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 Delay.cpp
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:17     .text._ZN6DelayyC2Ev:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:26     .text._ZN6DelayyC2Ev:00000000 _ZN6DelayyC2Ev
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:101    .text._ZN6DelayyC2Ev:0000001c $d
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:26     .text._ZN6DelayyC2Ev:00000000 _ZN6DelayyC1Ev
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:108    .text._ZN6Delayy7stopAllEv:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:116    .text._ZN6Delayy7stopAllEv:00000000 _ZN6Delayy7stopAllEv
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:150    .text._ZN6Delayy6setBPMEf:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:158    .text._ZN6Delayy6setBPMEf:00000000 _ZN6Delayy6setBPMEf
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:175    .text._ZN6Delayy11setFeedbackERKf:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:183    .text._ZN6Delayy11setFeedbackERKf:00000000 _ZN6Delayy11setFeedbackERKf
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:202    .text._ZN6Delayy7processEf:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:210    .text._ZN6Delayy7processEf:00000000 _ZN6Delayy7processEf
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:525    .text._ZN6Delayy7processEf:00000100 $d
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:537    .text._ZN6Delayy10toggleHeadERKi:00000000 $t
C:\Users\vngel\AppData\Local\Temp\ccNvzeCD.s:545    .text._ZN6Delayy10toggleHeadERKi:00000000 _ZN6Delayy10toggleHeadERKi

NO UNDEFINED SYMBOLS
